//
// File generated by rootcint at Mon Jun  6 11:02:09 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME DmtpcMathCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DmtpcMathCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace DmtpcMath {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void DmtpcMath_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("DmtpcMath", 0 /*version*/, "./DmtpcMath.hh", 16,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &DmtpcMath_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void DmtpcMath_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

/********************************************************
* DmtpcMathCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDmtpcMathCint();

extern "C" void G__set_cpp_environmentDmtpcMathCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("DmtpcMath.hh");
  G__cpp_reset_tagtableDmtpcMathCint();
}
#include <new>
extern "C" int G__cpp_dllrevDmtpcMathCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DmtpcMath */
static int G__DmtpcMathCint_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::Beta((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::Gamma((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::logGamma((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::betaPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::betaPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::chiPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::chiPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::chiSquarePdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::chiSquarePdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::crystalBallPdf((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::crystalBall((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::gammaPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::gammaPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::inverseGausPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::inverseGausCdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::inverseGausPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::logisticPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::logisticPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::logNormalPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::logNormalCdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::logNormalPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::maxwellPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::maxwellPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::normalPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::gausPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::normalCdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::normalPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::rayleighPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::rayleighPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::studentPdf((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcMath::studentPdfStats((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::vonMisesDist((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::vonMisesDistHT((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::wrappedNormalDist((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::wrappedNormalDistHT((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::lineSegmentConvolvedWithGaussian((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::lineSegmentConvolvedWithGaussian2D((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::integralOfLineSegmentConvolvedWithGaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DmtpcMath::lineLineIntersection(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double*) G__int(libp->para[8]), (double*) G__int(libp->para[9])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) DmtpcMath::lineRectIntersectionPoints(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double*) G__int(libp->para[6]), (double*) G__int(libp->para[7])
, (double*) G__int(libp->para[8]), (double*) G__int(libp->para[9])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) DmtpcMath::round((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) DmtpcMath::round((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) DmtpcMath::normalizeAngle((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) DmtpcMath::normalizeAngle((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::deltaAngle((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) DmtpcMath::sumVar((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) DmtpcMath::sumVar((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) DmtpcMath::sumVar((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) DmtpcMath::sumError((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) DmtpcMath::sumError((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) DmtpcMath::sumError((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::productVar((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::productError((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::quotientVar((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::quotientError((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::MVNpdf((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_221_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) DmtpcMath::MVNpdf((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (TMatrixDSym*) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DmtpcMath */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDmtpcMathCint {
 public:
  G__Sizep2memfuncDmtpcMathCint(): p(&G__Sizep2memfuncDmtpcMathCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDmtpcMathCint::*p)();
};

size_t G__get_sizep2memfuncDmtpcMathCint()
{
  G__Sizep2memfuncDmtpcMathCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDmtpcMathCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDmtpcMathCint() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DmtpcMath */
static void G__setup_memvarDmtpcMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_DmtpcMath));
   {
   G__memvar_setup((void*)(&DmtpcMath::EXP),100,0,1,-1,-1,-2,1,"EXP=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::LOG2),100,0,1,-1,-1,-2,1,"LOG2=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::LOG10),100,0,1,-1,-1,-2,1,"LOG10=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::LOG2E),100,0,1,-1,-1,-2,1,"LOG2E=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::LOG10E),100,0,1,-1,-1,-2,1,"LOG10E=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::PI),100,0,1,-1,-1,-2,1,"PI=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::PI_2),100,0,1,-1,-1,-2,1,"PI_2=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::PI_4),100,0,1,-1,-1,-2,1,"PI_4=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::ONE_PI),100,0,1,-1,-1,-2,1,"ONE_PI=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::TWO_PI),100,0,1,-1,-1,-2,1,"TWO_PI=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::TWO_SQRTPI),100,0,1,-1,-1,-2,1,"TWO_SQRTPI=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::SQRT2),100,0,1,-1,-1,-2,1,"SQRT2=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::SQRT1_2),100,0,1,-1,-1,-2,1,"SQRT1_2=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::EULER_GAMMA),100,0,1,-1,-1,-2,1,"EULER_GAMMA=",0,(char*)NULL);
   G__memvar_setup((void*)(&DmtpcMath::ONE_SQRT2PI),100,0,1,-1,-1,-2,1,"ONE_SQRT2PI=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("MEAN=%lldLL",(long long)DmtpcMath::MEAN).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("MED=%lldLL",(long long)DmtpcMath::MED).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("MODE=%lldLL",(long long)DmtpcMath::MODE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("VAR=%lldLL",(long long)DmtpcMath::VAR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SKEW=%lldLL",(long long)DmtpcMath::SKEW).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("KURT=%lldLL",(long long)DmtpcMath::KURT).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDmtpcMathCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDmtpcMath(void) {
   /* DmtpcMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_DmtpcMath));
   G__memfunc_setup("Beta",380,G__DmtpcMathCint_221_0_1, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - alpha d - - 0 - beta", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&DmtpcMath::Beta) ), 0);
   G__memfunc_setup("Gamma",483,G__DmtpcMathCint_221_0_2, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) G__func2void( (double (*)(double))(&DmtpcMath::Gamma) ), 0);
   G__memfunc_setup("logGamma",805,G__DmtpcMathCint_221_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) G__func2void( (double (*)(double))(&DmtpcMath::logGamma) ), 0);
   G__memfunc_setup("betaPdf",694,G__DmtpcMathCint_221_0_4, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::betaPdf) ), 0);
   G__memfunc_setup("betaPdfStats",1221,G__DmtpcMathCint_221_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::betaPdfStats) ), 0);
   G__memfunc_setup("chiPdf",590,G__DmtpcMathCint_221_0_6, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::chiPdf) ), 0);
   G__memfunc_setup("chiPdfStats",1117,G__DmtpcMathCint_221_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::chiPdfStats) ), 0);
   G__memfunc_setup("chiSquarePdf",1215,G__DmtpcMathCint_221_0_8, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::chiSquarePdf) ), 0);
   G__memfunc_setup("chiSquarePdfStats",1742,G__DmtpcMathCint_221_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::chiSquarePdfStats) ), 0);
   G__memfunc_setup("crystalBallPdf",1431,G__DmtpcMathCint_221_0_10, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&DmtpcMath::crystalBallPdf) ), 0);
   G__memfunc_setup("crystalBall",1149,G__DmtpcMathCint_221_0_11, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&DmtpcMath::crystalBall) ), 0);
   G__memfunc_setup("gammaPdf",797,G__DmtpcMathCint_221_0_12, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::gammaPdf) ), 0);
   G__memfunc_setup("gammaPdfStats",1324,G__DmtpcMathCint_221_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::gammaPdfStats) ), 0);
   G__memfunc_setup("inverseGausPdf",1446,G__DmtpcMathCint_221_0_14, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::inverseGausPdf) ), 0);
   G__memfunc_setup("inverseGausCdf",1433,G__DmtpcMathCint_221_0_15, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::inverseGausCdf) ), 0);
   G__memfunc_setup("inverseGausPdfStats",1973,G__DmtpcMathCint_221_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::inverseGausPdfStats) ), 0);
   G__memfunc_setup("logisticPdf",1144,G__DmtpcMathCint_221_0_17, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::logisticPdf) ), 0);
   G__memfunc_setup("logisticPdfStats",1671,G__DmtpcMathCint_221_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::logisticPdfStats) ), 0);
   G__memfunc_setup("logNormalPdf",1221,G__DmtpcMathCint_221_0_19, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::logNormalPdf) ), 0);
   G__memfunc_setup("logNormalCdf",1208,G__DmtpcMathCint_221_0_20, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::logNormalCdf) ), 0);
   G__memfunc_setup("logNormalPdfStats",1748,G__DmtpcMathCint_221_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::logNormalPdfStats) ), 0);
   G__memfunc_setup("maxwellPdf",1044,G__DmtpcMathCint_221_0_22, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::maxwellPdf) ), 0);
   G__memfunc_setup("maxwellPdfStats",1571,G__DmtpcMathCint_221_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::maxwellPdfStats) ), 0);
   G__memfunc_setup("normalPdf",931,G__DmtpcMathCint_221_0_24, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::normalPdf) ), 0);
   G__memfunc_setup("gausPdf",714,G__DmtpcMathCint_221_0_25, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::gausPdf) ), 0);
   G__memfunc_setup("normalCdf",918,G__DmtpcMathCint_221_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::normalCdf) ), 0);
   G__memfunc_setup("normalPdfStats",1458,G__DmtpcMathCint_221_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::normalPdfStats) ), 0);
   G__memfunc_setup("rayleighPdf",1135,G__DmtpcMathCint_221_0_28, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::rayleighPdf) ), 0);
   G__memfunc_setup("rayleighPdfStats",1662,G__DmtpcMathCint_221_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::rayleighPdfStats) ), 0);
   G__memfunc_setup("studentPdf",1057,G__DmtpcMathCint_221_0_30, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double, double*))(&DmtpcMath::studentPdf) ), 0);
   G__memfunc_setup("studentPdfStats",1584,G__DmtpcMathCint_221_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (void (*)(double*, double*))(&DmtpcMath::studentPdfStats) ), 0);
   G__memfunc_setup("vonMisesDist",1256,G__DmtpcMathCint_221_0_32, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&DmtpcMath::vonMisesDist) ), 0);
   G__memfunc_setup("vonMisesDistHT",1412,G__DmtpcMathCint_221_0_33, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&DmtpcMath::vonMisesDistHT) ), 0);
   G__memfunc_setup("wrappedNormalDist",1776,G__DmtpcMathCint_221_0_34, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&DmtpcMath::wrappedNormalDist) ), 0);
   G__memfunc_setup("wrappedNormalDistHT",1932,G__DmtpcMathCint_221_0_35, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&DmtpcMath::wrappedNormalDistHT) ), 0);
   G__memfunc_setup("lineSegmentConvolvedWithGaussian",3330,G__DmtpcMathCint_221_0_36, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - pars", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&DmtpcMath::lineSegmentConvolvedWithGaussian) ), 0);
   G__memfunc_setup("lineSegmentConvolvedWithGaussian2D",3448,G__DmtpcMathCint_221_0_37, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - pars", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&DmtpcMath::lineSegmentConvolvedWithGaussian2D) ), 0);
   G__memfunc_setup("integralOfLineSegmentConvolvedWithGaussian",4333,G__DmtpcMathCint_221_0_38, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - y0 d - - 0 - y1 "
"D - - 0 - pars", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double*))(&DmtpcMath::integralOfLineSegmentConvolvedWithGaussian) ), 0);
   G__memfunc_setup("lineLineIntersection",2087,G__DmtpcMathCint_221_0_39, 105, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - x1 d - - 0 - y1 "
"d - - 0 - x2 d - - 0 - y2 "
"d - - 0 - x3 d - - 0 - y3 "
"d - - 0 - x4 d - - 0 - y4 "
"D - - 0 - xint D - - 0 - yint", (char*)NULL, (void*) G__func2void( (int (*)(double, double, double, double, double, double, double, double, double*, double*))(&DmtpcMath::lineLineIntersection) ), 0);
   G__memfunc_setup("lineRectIntersectionPoints",2730,G__DmtpcMathCint_221_0_40, 103, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - line_theta d - - 0 - line_r "
"d - - 0 - rect_xmin d - - 0 - rect_xmax "
"d - - 0 - rect_ymin d - - 0 - rect_ymax "
"D - - 0 - x0 D - - 0 - y0 "
"D - - 0 - x1 D - - 0 - y1", (char*)NULL, (void*) G__func2void( (bool (*)(double, double, double, double, double, double, double*, double*, double*, double*))(&DmtpcMath::lineRectIntersectionPoints) ), 0);
   G__memfunc_setup("round",552,G__DmtpcMathCint_221_0_41, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - in d - - 0 '1.' RoundToNearest", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&DmtpcMath::round) ), 0);
   G__memfunc_setup("normalizeAngle",1464,G__DmtpcMathCint_221_0_42, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - phi d - - 0 '0.' center", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&DmtpcMath::normalizeAngle) ), 0);
   G__memfunc_setup("deltaAngle",1009,G__DmtpcMathCint_221_0_43, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - phi0 d - - 0 - phi1", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&DmtpcMath::deltaAngle) ), 0);
   G__memfunc_setup("sumVar",638,G__DmtpcMathCint_221_0_44, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - dA d - - 0 - dB "
"d - - 0 '1' cA d - - 0 '1' cB", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&DmtpcMath::sumVar) ), 0);
   G__memfunc_setup("sumError",863,G__DmtpcMathCint_221_0_45, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - dA d - - 0 - dB "
"d - - 0 '1' cA d - - 0 '1' cB", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&DmtpcMath::sumError) ), 0);
   G__memfunc_setup("productVar",1066,G__DmtpcMathCint_221_0_46, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - A d - - 0 - B "
"d - - 0 - dA d - - 0 - dB", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&DmtpcMath::productVar) ), 0);
   G__memfunc_setup("productError",1291,G__DmtpcMathCint_221_0_47, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - A d - - 0 - B "
"d - - 0 - dA d - - 0 - dB", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&DmtpcMath::productError) ), 0);
   G__memfunc_setup("quotientVar",1186,G__DmtpcMathCint_221_0_48, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - A d - - 0 - B "
"d - - 0 - dA d - - 0 - dB", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&DmtpcMath::quotientVar) ), 0);
   G__memfunc_setup("quotientError",1411,G__DmtpcMathCint_221_0_49, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - A d - - 0 - B "
"d - - 0 - dA d - - 0 - dB", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&DmtpcMath::quotientError) ), 0);
   G__memfunc_setup("MVNpdf",555,G__DmtpcMathCint_221_0_50, 100, -1, -1, 0, 4, 1, 1, 0, 
"k - 'size_t' 0 - ndim D - - 10 - x "
"D - - 10 - mu D - - 10 - covar", (char*)NULL, (void*) G__func2void( (double (*)(size_t, const double*, const double*, const double*))(&DmtpcMath::MVNpdf) ), 0);
   G__memfunc_setup("MVNpdf",555,G__DmtpcMathCint_221_0_51, 100, -1, -1, 0, 5, 1, 1, 0, 
"k - 'size_t' 0 - ndim D - - 10 - x "
"D - - 10 - mu U 'TMatrixTSym<double>' 'TMatrixDSym' 10 - invcovar "
"d - - 0 - det", (char*)NULL, (void*) G__func2void( (double (*)(size_t, const double*, const double*, const TMatrixDSym*, double))(&DmtpcMath::MVNpdf) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDmtpcMathCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDmtpcMathCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDmtpcMathCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_DmtpcMath = { "DmtpcMath" , 110 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDmtpcMathCint() {
  G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_DmtpcMath.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDmtpcMathCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_DmtpcMath),0,-1,0,(char*)NULL,G__setup_memvarDmtpcMath,G__setup_memfuncDmtpcMath);
}
extern "C" void G__cpp_setupDmtpcMathCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDmtpcMathCint()");
  G__set_cpp_environmentDmtpcMathCint();
  G__cpp_setup_tagtableDmtpcMathCint();

  G__cpp_setup_inheritanceDmtpcMathCint();

  G__cpp_setup_typetableDmtpcMathCint();

  G__cpp_setup_memvarDmtpcMathCint();

  G__cpp_setup_memfuncDmtpcMathCint();
  G__cpp_setup_globalDmtpcMathCint();
  G__cpp_setup_funcDmtpcMathCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDmtpcMathCint();
  return;
}
class G__cpp_setup_initDmtpcMathCint {
  public:
    G__cpp_setup_initDmtpcMathCint() { G__add_setup_func("DmtpcMathCint",(G__incsetup)(&G__cpp_setupDmtpcMathCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDmtpcMathCint() { G__remove_setup_func("DmtpcMathCint"); }
};
G__cpp_setup_initDmtpcMathCint G__cpp_setup_initializerDmtpcMathCint;

