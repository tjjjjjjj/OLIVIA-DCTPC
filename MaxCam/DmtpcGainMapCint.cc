//
// File generated by rootcint at Tue Jul 12 17:20:41 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME DmtpcGainMapCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DmtpcGainMapCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DmtpcGainMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DmtpcGainMap(void *p = 0);
   static void *newArray_DmtpcGainMap(Long_t size, void *p);
   static void delete_DmtpcGainMap(void *p);
   static void deleteArray_DmtpcGainMap(void *p);
   static void destruct_DmtpcGainMap(void *p);
   static void streamer_DmtpcGainMap(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DmtpcGainMap*)
   {
      ::DmtpcGainMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DmtpcGainMap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DmtpcGainMap", ::DmtpcGainMap::Class_Version(), "./DmtpcGainMap.hh", 15,
                  typeid(::DmtpcGainMap), DefineBehavior(ptr, ptr),
                  &::DmtpcGainMap::Dictionary, isa_proxy, 0,
                  sizeof(::DmtpcGainMap) );
      instance.SetNew(&new_DmtpcGainMap);
      instance.SetNewArray(&newArray_DmtpcGainMap);
      instance.SetDelete(&delete_DmtpcGainMap);
      instance.SetDeleteArray(&deleteArray_DmtpcGainMap);
      instance.SetDestructor(&destruct_DmtpcGainMap);
      instance.SetStreamerFunc(&streamer_DmtpcGainMap);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DmtpcGainMap*)
   {
      return GenerateInitInstanceLocal((::DmtpcGainMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DmtpcGainMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *DmtpcGainMap::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DmtpcGainMap::Class_Name()
{
   return "DmtpcGainMap";
}

//______________________________________________________________________________
const char *DmtpcGainMap::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DmtpcGainMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DmtpcGainMap::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DmtpcGainMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DmtpcGainMap::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DmtpcGainMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DmtpcGainMap::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DmtpcGainMap*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void DmtpcGainMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class DmtpcGainMap.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> _gainMap;
      R__b >> _spacers;
      R__b >> _nSpacers;
      R__b.CheckByteCount(R__s, R__c, DmtpcGainMap::IsA());
   } else {
      R__c = R__b.WriteVersion(DmtpcGainMap::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << (TObject*)_gainMap;
      R__b << _spacers;
      R__b << _nSpacers;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void DmtpcGainMap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DmtpcGainMap.
      TClass *R__cl = ::DmtpcGainMap::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_gainMap", &_gainMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_spacers", &_spacers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nSpacers", &_nSpacers);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DmtpcGainMap(void *p) {
      return  p ? new(p) ::DmtpcGainMap : new ::DmtpcGainMap;
   }
   static void *newArray_DmtpcGainMap(Long_t nElements, void *p) {
      return p ? new(p) ::DmtpcGainMap[nElements] : new ::DmtpcGainMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_DmtpcGainMap(void *p) {
      delete ((::DmtpcGainMap*)p);
   }
   static void deleteArray_DmtpcGainMap(void *p) {
      delete [] ((::DmtpcGainMap*)p);
   }
   static void destruct_DmtpcGainMap(void *p) {
      typedef ::DmtpcGainMap current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_DmtpcGainMap(TBuffer &buf, void *obj) {
      ((::DmtpcGainMap*)obj)->::DmtpcGainMap::Streamer(buf);
   }
} // end of namespace ROOT for class ::DmtpcGainMap

/********************************************************
* DmtpcGainMapCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDmtpcGainMapCint();

extern "C" void G__set_cpp_environmentDmtpcGainMapCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("DmtpcGainMap.hh");
  G__cpp_reset_tagtableDmtpcGainMapCint();
}
#include <new>
extern "C" int G__cpp_dllrevDmtpcGainMapCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DmtpcGainMap */
static int G__DmtpcGainMapCint_270_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DmtpcGainMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DmtpcGainMap[n];
     } else {
       p = new((void*) gvp) DmtpcGainMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DmtpcGainMap;
     } else {
       p = new((void*) gvp) DmtpcGainMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DmtpcGainMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DmtpcGainMap(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) DmtpcGainMap(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcGainMap*) G__getstructoffset())->drawWithSpacers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcGainMap*) G__getstructoffset())->setGainMap((TH2F*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DmtpcGainMap*) G__getstructoffset())->getGainMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DmtpcGainMap*) G__getstructoffset())->getGainMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcGainMap*) G__getstructoffset())->addSpacer((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcGainMap*) G__getstructoffset())->addSpacer((TVector3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DmtpcGainMap*) G__getstructoffset())->getSpacer((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DmtpcGainMap*) G__getstructoffset())->getSpacerSlope((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DmtpcGainMap*) G__getstructoffset())->getSpacerIntercept((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DmtpcGainMap*) G__getstructoffset())->getSpacerWidth((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const DmtpcGainMap*) G__getstructoffset())->getNSpacers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((const DmtpcGainMap*) G__getstructoffset())->nCrossingSpacers((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (vector<int>*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((const DmtpcGainMap*) G__getstructoffset())->nCrossingSpacers((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const DmtpcGainMap*) G__getstructoffset())->crossesSpacer((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DmtpcGainMap*) G__getstructoffset())->distanceToSpacer((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const DmtpcGainMap*) G__getstructoffset())->distanceToNearestSpacer((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(int*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>* pobj;
         const vector<double> xobj = ((const DmtpcGainMap*) G__getstructoffset())->distanceToSpacers((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const DmtpcGainMap*) G__getstructoffset())->writeOverlay((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DmtpcGainMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DmtpcGainMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DmtpcGainMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcGainMap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcGainMap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DmtpcGainMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DmtpcGainMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DmtpcGainMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcGainMapCint_270_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DmtpcGainMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcGainMapCint_270_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DmtpcGainMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DmtpcGainMap(*(DmtpcGainMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DmtpcGainMap G__TDmtpcGainMap;
static int G__DmtpcGainMapCint_270_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DmtpcGainMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DmtpcGainMap*) (soff+(sizeof(DmtpcGainMap)*i)))->~G__TDmtpcGainMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DmtpcGainMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DmtpcGainMap*) (soff))->~G__TDmtpcGainMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcGainMapCint_270_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DmtpcGainMap* dest = (DmtpcGainMap*) G__getstructoffset();
   *dest = *(DmtpcGainMap*) libp->para[0].ref;
   const DmtpcGainMap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DmtpcGainMap */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDmtpcGainMapCint {
 public:
  G__Sizep2memfuncDmtpcGainMapCint(): p(&G__Sizep2memfuncDmtpcGainMapCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDmtpcGainMapCint::*p)();
};

size_t G__get_sizep2memfuncDmtpcGainMapCint()
{
  G__Sizep2memfuncDmtpcGainMapCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDmtpcGainMapCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap))) {
     DmtpcGainMap *G__Lderived;
     G__Lderived=(DmtpcGainMap*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap),G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap),G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDmtpcGainMapCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DmtpcGainMap */
static void G__setup_memvarDmtpcGainMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap));
   { DmtpcGainMap *p; p=(DmtpcGainMap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TH2F),-1,-1,4,"_gainMap=",0,"/< the actual gain map");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TObjArray),-1,-1,4,"_spacers=",0,"/< the array of spacers");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_nSpacers=",0,"/< the number of spacers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDmtpcGainMapCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDmtpcGainMap(void) {
   /* DmtpcGainMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap));
   G__memfunc_setup("DmtpcGainMap",1173,G__DmtpcGainMapCint_270_0_1, 105, G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DmtpcGainMap",1173,G__DmtpcGainMapCint_270_0_2, 105, G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawWithSpacers",1563,G__DmtpcGainMapCint_270_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGainMap",1001,G__DmtpcGainMapCint_270_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - gainMap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGainMap",989,G__DmtpcGainMapCint_270_0_5, 85, G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TH2F), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGainMap",989,G__DmtpcGainMapCint_270_0_6, 85, G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addSpacer",903,G__DmtpcGainMapCint_270_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - slope d - - 0 - intercept "
"d - - 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addSpacer",903,G__DmtpcGainMapCint_270_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVector3' - 0 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpacer",926,G__DmtpcGainMapCint_270_0_9, 85, G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TVector3), -1, 0, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpacerSlope",1441,G__DmtpcGainMapCint_270_0_10, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpacerIntercept",1868,G__DmtpcGainMapCint_270_0_11, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpacerWidth",1438,G__DmtpcGainMapCint_270_0_12, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSpacers",1119,G__DmtpcGainMapCint_270_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nCrossingSpacers",1671,G__DmtpcGainMapCint_270_0_14, 105, -1, -1, 0, 5, 1, 1, 8, 
"d - - 0 - x1 d - - 0 - y1 "
"d - - 0 - x2 d - - 0 - y2 "
"U 'vector<int,allocator<int> >' 'vector<int>' 0 'NULL' which", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("crossesSpacer",1376,G__DmtpcGainMapCint_270_0_15, 103, -1, -1, 0, 4, 1, 1, 8, 
"d - - 0 - x1 d - - 0 - y1 "
"d - - 0 - x2 d - - 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("distanceToSpacer",1644,G__DmtpcGainMapCint_270_0_16, 100, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - i d - - 0 - x "
"d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("distanceToNearestSpacer",2366,G__DmtpcGainMapCint_270_0_17, 100, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - x d - - 0 - y "
"i - - 1 - imin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("distanceToSpacers",1759,G__DmtpcGainMapCint_270_0_18, 117, G__get_linked_tagnum(&G__DmtpcGainMapCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeOverlay",1293,G__DmtpcGainMapCint_270_0_19, 121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - outfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcGainMapCint_270_0_20, 85, G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DmtpcGainMap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcGainMapCint_270_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DmtpcGainMap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcGainMapCint_270_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DmtpcGainMap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcGainMapCint_270_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DmtpcGainMap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcGainMapCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcGainMapCint_270_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcGainMapCint_270_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DmtpcGainMap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcGainMapCint_270_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DmtpcGainMap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcGainMapCint_270_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DmtpcGainMap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcGainMapCint_270_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DmtpcGainMap::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DmtpcGainMap", 1173, G__DmtpcGainMapCint_270_0_32, (int) ('i'), G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap), -1, 0, 1, 1, 1, 0, "u 'DmtpcGainMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DmtpcGainMap", 1299, G__DmtpcGainMapCint_270_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcGainMapCint_270_0_34, (int) ('u'), G__get_linked_tagnum(&G__DmtpcGainMapCintLN_DmtpcGainMap), -1, 1, 1, 1, 1, 0, "u 'DmtpcGainMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDmtpcGainMapCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDmtpcGainMapCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDmtpcGainMapCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DmtpcGainMapCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_DmtpcGainMap = { "DmtpcGainMap" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDmtpcGainMapCint() {
  G__DmtpcGainMapCintLN_TClass.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TBuffer.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMemberInspector.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TObject.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TNamed.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TString.tagnum = -1 ;
  G__DmtpcGainMapCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TObjArray.tagnum = -1 ;
  G__DmtpcGainMapCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TH2F.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_TVector3.tagnum = -1 ;
  G__DmtpcGainMapCintLN_DmtpcGainMap.tagnum = -1 ;
  G__DmtpcGainMapCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDmtpcGainMapCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TString);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_DmtpcGainMap),sizeof(DmtpcGainMap),-1,62720,(char*)NULL,G__setup_memvarDmtpcGainMap,G__setup_memfuncDmtpcGainMap);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcGainMapCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDmtpcGainMapCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDmtpcGainMapCint()");
  G__set_cpp_environmentDmtpcGainMapCint();
  G__cpp_setup_tagtableDmtpcGainMapCint();

  G__cpp_setup_inheritanceDmtpcGainMapCint();

  G__cpp_setup_typetableDmtpcGainMapCint();

  G__cpp_setup_memvarDmtpcGainMapCint();

  G__cpp_setup_memfuncDmtpcGainMapCint();
  G__cpp_setup_globalDmtpcGainMapCint();
  G__cpp_setup_funcDmtpcGainMapCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDmtpcGainMapCint();
  return;
}
class G__cpp_setup_initDmtpcGainMapCint {
  public:
    G__cpp_setup_initDmtpcGainMapCint() { G__add_setup_func("DmtpcGainMapCint",(G__incsetup)(&G__cpp_setupDmtpcGainMapCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDmtpcGainMapCint() { G__remove_setup_func("DmtpcGainMapCint"); }
};
G__cpp_setup_initDmtpcGainMapCint G__cpp_setup_initializerDmtpcGainMapCint;

