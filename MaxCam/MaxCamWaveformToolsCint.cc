//
// File generated by rootcint at Tue Jul 12 17:19:32 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MaxCamWaveformToolsCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MaxCamWaveformToolsCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MaxCamWaveformTools_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MaxCamWaveformTools(void *p = 0);
   static void *newArray_MaxCamWaveformTools(Long_t size, void *p);
   static void delete_MaxCamWaveformTools(void *p);
   static void deleteArray_MaxCamWaveformTools(void *p);
   static void destruct_MaxCamWaveformTools(void *p);
   static void streamer_MaxCamWaveformTools(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MaxCamWaveformTools*)
   {
      ::MaxCamWaveformTools *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MaxCamWaveformTools >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MaxCamWaveformTools", ::MaxCamWaveformTools::Class_Version(), "./MaxCamWaveformTools.hh", 23,
                  typeid(::MaxCamWaveformTools), DefineBehavior(ptr, ptr),
                  &::MaxCamWaveformTools::Dictionary, isa_proxy, 0,
                  sizeof(::MaxCamWaveformTools) );
      instance.SetNew(&new_MaxCamWaveformTools);
      instance.SetNewArray(&newArray_MaxCamWaveformTools);
      instance.SetDelete(&delete_MaxCamWaveformTools);
      instance.SetDeleteArray(&deleteArray_MaxCamWaveformTools);
      instance.SetDestructor(&destruct_MaxCamWaveformTools);
      instance.SetStreamerFunc(&streamer_MaxCamWaveformTools);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MaxCamWaveformTools*)
   {
      return GenerateInitInstanceLocal((::MaxCamWaveformTools*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MaxCamWaveformTools*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MaxCamWaveformTools::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MaxCamWaveformTools::Class_Name()
{
   return "MaxCamWaveformTools";
}

//______________________________________________________________________________
const char *MaxCamWaveformTools::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MaxCamWaveformTools*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MaxCamWaveformTools::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MaxCamWaveformTools*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MaxCamWaveformTools::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MaxCamWaveformTools*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MaxCamWaveformTools::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MaxCamWaveformTools*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MaxCamWaveformTools::Streamer(TBuffer &R__b)
{
   // Stream an object of class MaxCamWaveformTools.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void MaxCamWaveformTools::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MaxCamWaveformTools.
      TClass *R__cl = ::MaxCamWaveformTools::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_wf", &_wf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_baseline", &_baseline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_baselineRMS", &_baselineRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_peakHeight", &_peakHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_peakHeightAvg", &_peakHeightAvg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_peakHeightTime", &_peakHeightTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_peakHeightTime10", &_peakHeightTime10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_peakHeightTime90", &_peakHeightTime90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_riseTime", &_riseTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_fallTime", &_fallTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_troughDepth", &_troughDepth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wfMinimum", &_wfMinimum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wfMinimumTime", &_wfMinimumTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_threshold", &_threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_maxPulse", &_maxPulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_minPulse", &_minPulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulseList", (void*)&_pulseList);
      R__insp.InspectMember("list<MaxCamPulse>", (void*)&_pulseList, "_pulseList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_timeAbove10", &_timeAbove10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_timeAbove90", &_timeAbove90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_peakAveragePosTime", &_peakAveragePosTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_peakAverageNegTime", &_peakAverageNegTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MaxCamWaveformTools(void *p) {
      return  p ? new(p) ::MaxCamWaveformTools : new ::MaxCamWaveformTools;
   }
   static void *newArray_MaxCamWaveformTools(Long_t nElements, void *p) {
      return p ? new(p) ::MaxCamWaveformTools[nElements] : new ::MaxCamWaveformTools[nElements];
   }
   // Wrapper around operator delete
   static void delete_MaxCamWaveformTools(void *p) {
      delete ((::MaxCamWaveformTools*)p);
   }
   static void deleteArray_MaxCamWaveformTools(void *p) {
      delete [] ((::MaxCamWaveformTools*)p);
   }
   static void destruct_MaxCamWaveformTools(void *p) {
      typedef ::MaxCamWaveformTools current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MaxCamWaveformTools(TBuffer &buf, void *obj) {
      ((::MaxCamWaveformTools*)obj)->::MaxCamWaveformTools::Streamer(buf);
   }
} // end of namespace ROOT for class ::MaxCamWaveformTools

/********************************************************
* MaxCamWaveformToolsCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMaxCamWaveformToolsCint();

extern "C" void G__set_cpp_environmentMaxCamWaveformToolsCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MaxCamWaveformTools.hh");
  G__cpp_reset_tagtableMaxCamWaveformToolsCint();
}
#include <new>
extern "C" int G__cpp_dllrevMaxCamWaveformToolsCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MaxCamWaveformTools */
static int G__MaxCamWaveformToolsCint_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamWaveformTools* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamWaveformTools(
(TH1F*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) MaxCamWaveformTools(
(TH1F*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamWaveformTools(
(TH1F*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MaxCamWaveformTools(
(TH1F*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamWaveformTools(
(TH1F*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MaxCamWaveformTools(
(TH1F*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamWaveformTools((TH1F*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MaxCamWaveformTools((TH1F*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamWaveformTools((TH1F*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MaxCamWaveformTools((TH1F*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamWaveformTools* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamWaveformTools[n];
     } else {
       p = new((void*) gvp) MaxCamWaveformTools[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamWaveformTools;
     } else {
       p = new((void*) gvp) MaxCamWaveformTools;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->evaluate((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getBaseline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getBaselineRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getPeakHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getPeakHeightTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getMinumum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getRiseTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getTroughDepth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getFallTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getWfMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getPeakAveragePosTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getPeakAverageNegTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->invertPolarity();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamWaveformTools*) G__getstructoffset())->calculateBaseline((TH1F*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamWaveformTools*) G__getstructoffset())->calculateBaselineRMS((TH1F*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamWaveformTools*) G__getstructoffset())->calculateIntegral((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->findAllPeaks((TH1F*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->fillPulse((TH1F*) G__int(libp->para[0]), (MaxCamPulse*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->getCopyOfPulseList(*(list<MaxCamPulse>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamWaveformTools*) G__getstructoffset())->getSizeOfPulseList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MaxCamPulse* pobj;
         MaxCamPulse xobj = ((MaxCamWaveformTools*) G__getstructoffset())->returnPulseInPulseList((Int_t) G__int(libp->para[0]));
         pobj = new MaxCamPulse(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamWaveformTools*) G__getstructoffset())->getThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((MaxCamWaveformTools*) G__getstructoffset())->findPulseStart((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((MaxCamWaveformTools*) G__getstructoffset())->findPulseStart((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((MaxCamWaveformTools*) G__getstructoffset())->findPulseEnd((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((MaxCamWaveformTools*) G__getstructoffset())->findPulseEnd((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamWaveformTools::smooth((TH1F*) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MaxCamWaveformTools::makeGaussKernel((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamWaveformTools::makeGaussKernel((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamWaveformTools::makeGaussKernel((float) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamWaveformTools::convolve((double*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MaxCamWaveformTools::convolve((TH1F*) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamWaveformTools::convolve((TH1F*) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamWaveformTools::convolve((TH1F*) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MaxCamWaveformTools::graphOfHist((TH1*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamWaveformTools::graphOfHist((TH1*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamWaveformTools::graphOfHist((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->histOfFunc((TH1F*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamWaveformTools::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamWaveformTools::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MaxCamWaveformTools::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamWaveformTools::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamWaveformTools*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamWaveformTools::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamWaveformTools::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamWaveformTools::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWaveformToolsCint_234_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamWaveformTools::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MaxCamWaveformToolsCint_234_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MaxCamWaveformTools* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MaxCamWaveformTools(*(MaxCamWaveformTools*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MaxCamWaveformTools G__TMaxCamWaveformTools;
static int G__MaxCamWaveformToolsCint_234_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MaxCamWaveformTools*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MaxCamWaveformTools*) (soff+(sizeof(MaxCamWaveformTools)*i)))->~G__TMaxCamWaveformTools();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MaxCamWaveformTools*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MaxCamWaveformTools*) (soff))->~G__TMaxCamWaveformTools();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MaxCamWaveformToolsCint_234_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamWaveformTools* dest = (MaxCamWaveformTools*) G__getstructoffset();
   *dest = *(MaxCamWaveformTools*) libp->para[0].ref;
   const MaxCamWaveformTools& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MaxCamWaveformTools */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMaxCamWaveformToolsCint {
 public:
  G__Sizep2memfuncMaxCamWaveformToolsCint(): p(&G__Sizep2memfuncMaxCamWaveformToolsCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMaxCamWaveformToolsCint::*p)();
};

size_t G__get_sizep2memfuncMaxCamWaveformToolsCint()
{
  G__Sizep2memfuncMaxCamWaveformToolsCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMaxCamWaveformToolsCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools))) {
     MaxCamWaveformTools *G__Lderived;
     G__Lderived=(MaxCamWaveformTools*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools),G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMaxCamWaveformToolsCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<MaxCamPulse>",117,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_listlEMaxCamPulsecOallocatorlEMaxCamPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MaxCamWaveformTools */
static void G__setup_memvarMaxCamWaveformTools(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools));
   { MaxCamWaveformTools *p; p=(MaxCamWaveformTools*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TH1F),-1,-1,4,"_wf=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_baseline=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_baselineRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_peakHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_peakHeightAvg=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_peakHeightTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_peakHeightTime10=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_peakHeightTime90=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_riseTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_fallTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_troughDepth=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_wfMinimum=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_wfMinimumTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_threshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamPulse),-1,-1,4,"_maxPulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamPulse),-1,-1,4,"_minPulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_listlEMaxCamPulsecOallocatorlEMaxCamPulsegRsPgR),G__defined_typename("list<MaxCamPulse>"),-1,4,"_pulseList=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_timeAbove10=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_timeAbove90=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_peakAveragePosTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_peakAverageNegTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMaxCamWaveformToolsCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMaxCamWaveformTools(void) {
   /* MaxCamWaveformTools */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools));
   G__memfunc_setup("MaxCamWaveformTools",1935,G__MaxCamWaveformToolsCint_234_0_1, 105, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools), -1, 0, 5, 1, 1, 0, 
"U 'TH1F' - 0 - wf g - - 0 'false' doInvert "
"i - - 0 '25' nbaselinebins i - - 0 '1' nrebin "
"f - - 0 '0' threshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxCamWaveformTools",1935,G__MaxCamWaveformToolsCint_234_0_2, 105, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,G__MaxCamWaveformToolsCint_234_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - nbaselinebins i - - 0 - nrebin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBaseline",1123,G__MaxCamWaveformToolsCint_234_0_4, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBaselineRMS",1365,G__MaxCamWaveformToolsCint_234_0_5, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeakHeight",1306,G__MaxCamWaveformToolsCint_234_0_6, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeakHeightTime",1705,G__MaxCamWaveformToolsCint_234_0_7, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinumum",1064,G__MaxCamWaveformToolsCint_234_0_8, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRiseTime",1122,G__MaxCamWaveformToolsCint_234_0_9, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTroughDepth",1454,G__MaxCamWaveformToolsCint_234_0_10, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFallTime",1102,G__MaxCamWaveformToolsCint_234_0_11, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinimum",1241,G__MaxCamWaveformToolsCint_234_0_12, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeakAveragePosTime",2109,G__MaxCamWaveformToolsCint_234_0_13, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeakAverageNegTime",2085,G__MaxCamWaveformToolsCint_234_0_14, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__MaxCamWaveformToolsCint_234_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__MaxCamWaveformToolsCint_234_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("invertPolarity",1516,G__MaxCamWaveformToolsCint_234_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateBaseline",1745,G__MaxCamWaveformToolsCint_234_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - wfi i - - 0 - nbaselinebins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateBaselineRMS",1987,G__MaxCamWaveformToolsCint_234_0_19, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - wfi i - - 0 - nbaselinebins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateIntegral",1764,G__MaxCamWaveformToolsCint_234_0_20, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'TH1F' - 0 - wfi i - 'Int_t' 0 - startBin "
"i - 'Int_t' 0 - endBin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findAllPeaks",1198,G__MaxCamWaveformToolsCint_234_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1F' - 0 - wfi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillPulse",944,G__MaxCamWaveformToolsCint_234_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - wfi U 'MaxCamPulse' - 0 - pulse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCopyOfPulseList",1845,G__MaxCamWaveformToolsCint_234_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'list<MaxCamPulse,allocator<MaxCamPulse> >' 'list<MaxCamPulse>' 1 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSizeOfPulseList",1845,G__MaxCamWaveformToolsCint_234_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("returnPulseInPulseList",2309,G__MaxCamWaveformToolsCint_234_0_25, 117, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamPulse), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getThreshold",1261,G__MaxCamWaveformToolsCint_234_0_26, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findPulseStart",1464,G__MaxCamWaveformToolsCint_234_0_27, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'TH1F' - 0 - wfi i - 'Int_t' 0 - pulseBin "
"g - 'Bool_t' 0 'false' debug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findPulseEnd",1217,G__MaxCamWaveformToolsCint_234_0_28, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"U 'TH1F' - 0 - wfi i - 'Int_t' 0 - pulseBin "
"g - 'Bool_t' 0 'false' debug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("smooth",666,G__MaxCamWaveformToolsCint_234_0_29, 85, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TH1F), -1, 0, 2, 3, 1, 0, 
"U 'TH1F' - 0 - hdata U 'TH1F' - 0 - hkernel", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TH1F*, TH1F*))(&MaxCamWaveformTools::smooth) ), 0);
   G__memfunc_setup("makeGaussKernel",1538,G__MaxCamWaveformToolsCint_234_0_30, 85, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TH1F), -1, 0, 3, 3, 1, 0, 
"f - - 0 - binWidth f - - 0 '1.0' sigma "
"f - - 0 '3.0' nsigma", (char*)NULL, (void*) G__func2void( (TH1F* (*)(float, float, float))(&MaxCamWaveformTools::makeGaussKernel) ), 0);
   G__memfunc_setup("convolve",876,G__MaxCamWaveformToolsCint_234_0_31, 121, -1, -1, 0, 5, 3, 1, 0, 
"D - - 0 - ff i - - 0 - nf "
"D - - 0 - gg i - - 0 - ng "
"D - - 0 - hh", (char*)NULL, (void*) G__func2void( (void (*)(double*, int, double*, int, double*))(&MaxCamWaveformTools::convolve) ), 0);
   G__memfunc_setup("convolve",876,G__MaxCamWaveformToolsCint_234_0_32, 85, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TH1F), -1, 0, 4, 3, 1, 0, 
"U 'TH1F' - 0 - hdata U 'TH1F' - 0 - hkernel "
"g - - 0 'true' flip g - - 0 'false' draw", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TH1F*, TH1F*, bool, bool))(&MaxCamWaveformTools::convolve) ), 0);
   G__memfunc_setup("graphOfHist",1119,G__MaxCamWaveformToolsCint_234_0_33, 85, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TGraph), -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - h1 u 'TString' - 0 '\"_gr\"' grName "
"g - - 0 'false' flip", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TH1*, TString, bool))(&MaxCamWaveformTools::graphOfHist) ), 0);
   G__memfunc_setup("histOfFunc",1017,G__MaxCamWaveformToolsCint_234_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - hin U 'TF1' - 0 - fxn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MaxCamWaveformToolsCint_234_0_35, 85, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MaxCamWaveformTools::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MaxCamWaveformToolsCint_234_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamWaveformTools::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MaxCamWaveformToolsCint_234_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MaxCamWaveformTools::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MaxCamWaveformToolsCint_234_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MaxCamWaveformTools::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MaxCamWaveformToolsCint_234_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MaxCamWaveformToolsCint_234_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamWaveformTools::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MaxCamWaveformToolsCint_234_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MaxCamWaveformTools::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MaxCamWaveformToolsCint_234_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamWaveformTools::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MaxCamWaveformToolsCint_234_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MaxCamWaveformTools::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MaxCamWaveformTools", 1935, G__MaxCamWaveformToolsCint_234_0_47, (int) ('i'), G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools), -1, 0, 1, 1, 1, 0, "u 'MaxCamWaveformTools' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MaxCamWaveformTools", 2061, G__MaxCamWaveformToolsCint_234_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MaxCamWaveformToolsCint_234_0_49, (int) ('u'), G__get_linked_tagnum(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools), -1, 1, 1, 1, 1, 0, "u 'MaxCamWaveformTools' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMaxCamWaveformToolsCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMaxCamWaveformToolsCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMaxCamWaveformToolsCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_MaxCamPulse = { "MaxCamPulse" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools = { "MaxCamWaveformTools" , 99 , -1 };
G__linked_taginfo G__MaxCamWaveformToolsCintLN_listlEMaxCamPulsecOallocatorlEMaxCamPulsegRsPgR = { "list<MaxCamPulse,allocator<MaxCamPulse> >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMaxCamWaveformToolsCint() {
  G__MaxCamWaveformToolsCintLN_TClass.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TBuffer.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TMemberInspector.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TObject.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TString.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TF1.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TH1.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TH1F.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_TGraph.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_MaxCamPulse.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools.tagnum = -1 ;
  G__MaxCamWaveformToolsCintLN_listlEMaxCamPulsecOallocatorlEMaxCamPulsegRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMaxCamWaveformToolsCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TString);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TF1);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TH1);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_TGraph);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_MaxCamPulse);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_MaxCamWaveformTools),sizeof(MaxCamWaveformTools),-1,62720,(char*)NULL,G__setup_memvarMaxCamWaveformTools,G__setup_memfuncMaxCamWaveformTools);
   G__get_linked_tagnum_fwd(&G__MaxCamWaveformToolsCintLN_listlEMaxCamPulsecOallocatorlEMaxCamPulsegRsPgR);
}
extern "C" void G__cpp_setupMaxCamWaveformToolsCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMaxCamWaveformToolsCint()");
  G__set_cpp_environmentMaxCamWaveformToolsCint();
  G__cpp_setup_tagtableMaxCamWaveformToolsCint();

  G__cpp_setup_inheritanceMaxCamWaveformToolsCint();

  G__cpp_setup_typetableMaxCamWaveformToolsCint();

  G__cpp_setup_memvarMaxCamWaveformToolsCint();

  G__cpp_setup_memfuncMaxCamWaveformToolsCint();
  G__cpp_setup_globalMaxCamWaveformToolsCint();
  G__cpp_setup_funcMaxCamWaveformToolsCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMaxCamWaveformToolsCint();
  return;
}
class G__cpp_setup_initMaxCamWaveformToolsCint {
  public:
    G__cpp_setup_initMaxCamWaveformToolsCint() { G__add_setup_func("MaxCamWaveformToolsCint",(G__incsetup)(&G__cpp_setupMaxCamWaveformToolsCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMaxCamWaveformToolsCint() { G__remove_setup_func("MaxCamWaveformToolsCint"); }
};
G__cpp_setup_initMaxCamWaveformToolsCint G__cpp_setup_initializerMaxCamWaveformToolsCint;

