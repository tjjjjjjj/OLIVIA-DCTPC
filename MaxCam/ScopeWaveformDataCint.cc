//
// File generated by rootcint at Fri Jul 15 15:53:28 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ScopeWaveformDataCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ScopeWaveformDataCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ScopeWaveformData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ScopeWaveformData(void *p = 0);
   static void *newArray_ScopeWaveformData(Long_t size, void *p);
   static void delete_ScopeWaveformData(void *p);
   static void deleteArray_ScopeWaveformData(void *p);
   static void destruct_ScopeWaveformData(void *p);
   static void directoryAutoAdd_ScopeWaveformData(void *obj, TDirectory *dir);
   static void streamer_ScopeWaveformData(TBuffer &buf, void *obj);
   static Long64_t merge_ScopeWaveformData(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ScopeWaveformData*)
   {
      ::ScopeWaveformData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ScopeWaveformData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ScopeWaveformData", ::ScopeWaveformData::Class_Version(), "./ScopeWaveformData.hh", 21,
                  typeid(::ScopeWaveformData), DefineBehavior(ptr, ptr),
                  &::ScopeWaveformData::Dictionary, isa_proxy, 0,
                  sizeof(::ScopeWaveformData) );
      instance.SetNew(&new_ScopeWaveformData);
      instance.SetNewArray(&newArray_ScopeWaveformData);
      instance.SetDelete(&delete_ScopeWaveformData);
      instance.SetDeleteArray(&deleteArray_ScopeWaveformData);
      instance.SetDestructor(&destruct_ScopeWaveformData);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_ScopeWaveformData);
      instance.SetStreamerFunc(&streamer_ScopeWaveformData);
      instance.SetMerge(&merge_ScopeWaveformData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ScopeWaveformData*)
   {
      return GenerateInitInstanceLocal((::ScopeWaveformData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ScopeWaveformData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *ScopeWaveformData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ScopeWaveformData::Class_Name()
{
   return "ScopeWaveformData";
}

//______________________________________________________________________________
const char *ScopeWaveformData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ScopeWaveformData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScopeWaveformData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ScopeWaveformData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScopeWaveformData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ScopeWaveformData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScopeWaveformData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ScopeWaveformData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ScopeWaveformData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ScopeWaveformData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TH1D::Streamer(R__b);
      R__b >> _timeStamp;
      R__b >> _nresample;
      R__b >> _nSamples;
      R__b >> _nsuppressed;
      R__b >> _leveltoVolt;
      R__b >> _suppressed_rms;
      R__b >> _zero;
      R__b >> _signed;
      R__b.CheckByteCount(R__s, R__c, ScopeWaveformData::IsA());
   } else {
      R__c = R__b.WriteVersion(ScopeWaveformData::IsA(), kTRUE);
      TH1D::Streamer(R__b);
      R__b << _timeStamp;
      R__b << _nresample;
      R__b << _nSamples;
      R__b << _nsuppressed;
      R__b << _leveltoVolt;
      R__b << _suppressed_rms;
      R__b << _zero;
      R__b << _signed;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ScopeWaveformData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ScopeWaveformData.
      TClass *R__cl = ::ScopeWaveformData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_timeStamp", &_timeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nresample", &_nresample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nSamples", &_nSamples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nsuppressed", &_nsuppressed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_leveltoVolt", &_leveltoVolt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_suppressed_rms", &_suppressed_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_zero", &_zero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_signed", &_signed);
      TH1D::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ScopeWaveformData(void *p) {
      return  p ? new(p) ::ScopeWaveformData : new ::ScopeWaveformData;
   }
   static void *newArray_ScopeWaveformData(Long_t nElements, void *p) {
      return p ? new(p) ::ScopeWaveformData[nElements] : new ::ScopeWaveformData[nElements];
   }
   // Wrapper around operator delete
   static void delete_ScopeWaveformData(void *p) {
      delete ((::ScopeWaveformData*)p);
   }
   static void deleteArray_ScopeWaveformData(void *p) {
      delete [] ((::ScopeWaveformData*)p);
   }
   static void destruct_ScopeWaveformData(void *p) {
      typedef ::ScopeWaveformData current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_ScopeWaveformData(void *p, TDirectory *dir) {
      ((::ScopeWaveformData*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ScopeWaveformData(TBuffer &buf, void *obj) {
      ((::ScopeWaveformData*)obj)->::ScopeWaveformData::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_ScopeWaveformData(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::ScopeWaveformData*)obj)->Merge(coll);
   }
} // end of namespace ROOT for class ::ScopeWaveformData

/********************************************************
* ScopeWaveformDataCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableScopeWaveformDataCint();

extern "C" void G__set_cpp_environmentScopeWaveformDataCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("ScopeWaveformData.hh");
  G__cpp_reset_tagtableScopeWaveformDataCint();
}
#include <new>
extern "C" int G__cpp_dllrevScopeWaveformDataCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ScopeWaveformData */
static int G__ScopeWaveformDataCint_207_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScopeWaveformData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScopeWaveformData[n];
     } else {
       p = new((void*) gvp) ScopeWaveformData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScopeWaveformData;
     } else {
       p = new((void*) gvp) ScopeWaveformData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScopeWaveformData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ScopeWaveformData(
*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (short) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) ScopeWaveformData(
*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (short) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScopeWaveformData* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ScopeWaveformData(
*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (short) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) ScopeWaveformData(
*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (short) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ScopeWaveformData*) G__getstructoffset())->getTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ScopeWaveformData*) G__getstructoffset())->getleveltoVolt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const ScopeWaveformData*) G__getstructoffset())->getZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((ScopeWaveformData*) G__getstructoffset())->zeroSuppress((double) G__double(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((ScopeWaveformData*) G__getstructoffset())->zeroSuppress((double) G__double(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((ScopeWaveformData*) G__getstructoffset())->zeroSuppress((double) G__double(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ScopeWaveformData*) G__getstructoffset())->zeroSuppress((double) G__double(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((ScopeWaveformData*) G__getstructoffset())->zeroSuppress((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((ScopeWaveformData*) G__getstructoffset())->zeroSuppress());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeWaveformData*) G__getstructoffset())->cropZeros();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ScopeWaveformData*) G__getstructoffset())->resample((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ScopeWaveformData*) G__getstructoffset())->resample();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ScopeWaveformData*) G__getstructoffset())->getAsShortHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ScopeWaveformData*) G__getstructoffset())->getAsSignedHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeWaveformData*) G__getstructoffset())->convertToSignedHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ScopeWaveformData*) G__getstructoffset())->isSigned());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ScopeWaveformData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScopeWaveformData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ScopeWaveformData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ScopeWaveformData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeWaveformData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScopeWaveformData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScopeWaveformData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScopeWaveformData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeWaveformDataCint_207_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScopeWaveformData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ScopeWaveformDataCint_207_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ScopeWaveformData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ScopeWaveformData(*(ScopeWaveformData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ScopeWaveformData G__TScopeWaveformData;
static int G__ScopeWaveformDataCint_207_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ScopeWaveformData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ScopeWaveformData*) (soff+(sizeof(ScopeWaveformData)*i)))->~G__TScopeWaveformData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ScopeWaveformData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ScopeWaveformData*) (soff))->~G__TScopeWaveformData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ScopeWaveformData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncScopeWaveformDataCint {
 public:
  G__Sizep2memfuncScopeWaveformDataCint(): p(&G__Sizep2memfuncScopeWaveformDataCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncScopeWaveformDataCint::*p)();
};

size_t G__get_sizep2memfuncScopeWaveformDataCint()
{
  G__Sizep2memfuncScopeWaveformDataCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceScopeWaveformDataCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData))) {
     ScopeWaveformData *G__Lderived;
     G__Lderived=(ScopeWaveformData*)0x1000;
     {
       TH1D *G__Lpbase=(TH1D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TH1D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TH1 *G__Lpbase=(TH1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TH1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArrayD *G__Lpbase=(TArrayD*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TArrayD),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TArray *G__Lpbase=(TArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData),G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableScopeWaveformDataCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ScopeWaveformData */
static void G__setup_memvarScopeWaveformData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData));
   { ScopeWaveformData *p; p=(ScopeWaveformData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_timeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_nresample=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_nSamples=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"_nsuppressed=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_leveltoVolt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_suppressed_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,4,"_zero=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_signed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarScopeWaveformDataCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncScopeWaveformData(void) {
   /* ScopeWaveformData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData));
   G__memfunc_setup("ScopeWaveformData",1723,G__ScopeWaveformDataCint_207_0_1, 105, G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScopeWaveformData",1723,G__ScopeWaveformDataCint_207_0_2, 105, G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - histoName i - - 0 - nSamples "
"d - - 0 - timeStamp f - - 0 - leveltoVolt "
"s - - 0 - zero", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScopeWaveformData",1723,G__ScopeWaveformDataCint_207_0_3, 105, G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData), -1, 0, 7, 1, 1, 0, 
"u 'TString' - 0 - histoName i - - 0 - nSamples "
"f - - 0 - xlow f - - 0 - xup "
"d - - 0 - timeStamp f - - 0 - leveltoVolt "
"s - - 0 - zero", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeStamp",1236,G__ScopeWaveformDataCint_207_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getleveltoVolt",1504,G__ScopeWaveformDataCint_207_0_5, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZero",736,G__ScopeWaveformDataCint_207_0_6, 115, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zeroSuppress",1317,G__ScopeWaveformDataCint_207_0_7, 105, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 '3' nsigma h - - 0 '2' - "
"h - - 0 '10' - i - - 0 '1000' nsamples_baseline "
"d - - 0 '1' max_deviation_sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cropZeros",967,G__ScopeWaveformDataCint_207_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resample",857,G__ScopeWaveformDataCint_207_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '2' factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAsShortHist",1436,G__ScopeWaveformDataCint_207_0_10, 85, G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TH1S), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAsSignedHist",1510,G__ScopeWaveformDataCint_207_0_11, 85, G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TH1D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertToSignedHist",1974,G__ScopeWaveformDataCint_207_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSigned",822,G__ScopeWaveformDataCint_207_0_13, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ScopeWaveformDataCint_207_0_14, 85, G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ScopeWaveformData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ScopeWaveformDataCint_207_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScopeWaveformData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ScopeWaveformDataCint_207_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ScopeWaveformData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ScopeWaveformDataCint_207_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ScopeWaveformData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ScopeWaveformDataCint_207_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ScopeWaveformDataCint_207_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScopeWaveformData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ScopeWaveformDataCint_207_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScopeWaveformData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ScopeWaveformDataCint_207_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScopeWaveformData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ScopeWaveformDataCint_207_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScopeWaveformData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScopeWaveformData", 1723, G__ScopeWaveformDataCint_207_0_26, (int) ('i'), G__get_linked_tagnum(&G__ScopeWaveformDataCintLN_ScopeWaveformData), -1, 0, 1, 1, 1, 0, "u 'ScopeWaveformData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScopeWaveformData", 1849, G__ScopeWaveformDataCint_207_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncScopeWaveformDataCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalScopeWaveformDataCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcScopeWaveformDataCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ScopeWaveformDataCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TArray = { "TArray" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_TH1S = { "TH1S" , 99 , -1 };
G__linked_taginfo G__ScopeWaveformDataCintLN_ScopeWaveformData = { "ScopeWaveformData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableScopeWaveformDataCint() {
  G__ScopeWaveformDataCintLN_TClass.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TBuffer.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TMemberInspector.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TObject.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TNamed.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TString.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TArray.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TArrayD.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TAttLine.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TAttFill.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TAttMarker.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TH1D.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TH1.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_TH1S.tagnum = -1 ;
  G__ScopeWaveformDataCintLN_ScopeWaveformData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableScopeWaveformDataCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TString);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TArray);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TH1);
   G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_TH1S);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ScopeWaveformDataCintLN_ScopeWaveformData),sizeof(ScopeWaveformData),-1,62720,(char*)NULL,G__setup_memvarScopeWaveformData,G__setup_memfuncScopeWaveformData);
}
extern "C" void G__cpp_setupScopeWaveformDataCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupScopeWaveformDataCint()");
  G__set_cpp_environmentScopeWaveformDataCint();
  G__cpp_setup_tagtableScopeWaveformDataCint();

  G__cpp_setup_inheritanceScopeWaveformDataCint();

  G__cpp_setup_typetableScopeWaveformDataCint();

  G__cpp_setup_memvarScopeWaveformDataCint();

  G__cpp_setup_memfuncScopeWaveformDataCint();
  G__cpp_setup_globalScopeWaveformDataCint();
  G__cpp_setup_funcScopeWaveformDataCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncScopeWaveformDataCint();
  return;
}
class G__cpp_setup_initScopeWaveformDataCint {
  public:
    G__cpp_setup_initScopeWaveformDataCint() { G__add_setup_func("ScopeWaveformDataCint",(G__incsetup)(&G__cpp_setupScopeWaveformDataCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initScopeWaveformDataCint() { G__remove_setup_func("ScopeWaveformDataCint"); }
};
G__cpp_setup_initScopeWaveformDataCint G__cpp_setup_initializerScopeWaveformDataCint;

