//
// File generated by rootcint at Tue Jul 12 17:18:48 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MaxCamImageToolsCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MaxCamImageToolsCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace MaxCamImageTools {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MaxCamImageTools_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MaxCamImageTools", 0 /*version*/, "./MaxCamImageTools.hh", 57,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MaxCamImageTools_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MaxCamImageTools_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

/********************************************************
* MaxCamImageToolsCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMaxCamImageToolsCint();

extern "C" void G__set_cpp_environmentMaxCamImageToolsCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MaxCamImageTools.hh");
  G__cpp_reset_tagtableMaxCamImageToolsCint();
}
#include <new>
extern "C" int G__cpp_dllrevMaxCamImageToolsCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MaxCamImageTools */
static int G__MaxCamImageToolsCint_781_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      MaxCamImageTools::setFriendlyRange((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      MaxCamImageTools::setFriendlyRange((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::createYieldHisto((TH1*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::createYieldHisto((TH1*) G__int(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::createYieldHisto((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::applyThreshold((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::applyCeiling((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) MaxCamImageTools::hasNeighbor((TH1F*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) MaxCamImageTools::hasNeighbor((TH1F*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 103, (long) MaxCamImageTools::hasNeighbor((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) MaxCamImageTools::hasNeighbor((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = MaxCamImageTools::findNeighbors((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) MaxCamImageTools::killPixels((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (vector<int>*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) MaxCamImageTools::killPixels((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) MaxCamImageTools::killLonePixels((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) MaxCamImageTools::killLonePixels((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) MaxCamImageTools::killLonePixels2((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (vector<int>*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) MaxCamImageTools::killLonePixels2((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::findHotCold(
(TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int*) G__int(libp->para[3])
, (int*) G__int(libp->para[4]), *(int*) G__Intref(&libp->para[5])
, *(int*) G__Intref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::killPixelList((TH2*) G__int(libp->para[0]), *((vector<int>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::killUnusedPixels((TH2*) G__int(libp->para[0]), *(vector<int>*) libp->para[1].ref
, (int) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::killRow((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::killColumn((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::subtractPedestal((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = MaxCamImageTools::killSecondaryClusters((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MaxCamImageTools::calcSkewness((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MaxCamImageTools::calcSkewness((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MaxCamImageTools::calcSkewness2D((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MaxCamImageTools::calcSkewness2D((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::calcPixelDistance((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::calcPixelCorrelation((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::calcIntensity2D((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *(float*) G__Floatref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::countSegmentLength((TH1*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), *(int*) G__Intref(&libp->para[3])
, *(int*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::countSegmentLength2D((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, *(int*) G__Intref(&libp->para[2]), *(int*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::findClusters((TH2*) G__int(libp->para[0]), (MaxCamCluster**) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersCI((TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 15:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersHysteresisGM(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (unsigned int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (DmtpcGainMap*) G__int(libp->para[11])
, (double) G__double(libp->para[12]), (bool) G__int(libp->para[13])
, (bool) G__int(libp->para[14])));
      break;
   case 14:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersHysteresisGM(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (unsigned int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (DmtpcGainMap*) G__int(libp->para[11])
, (double) G__double(libp->para[12]), (bool) G__int(libp->para[13])));
      break;
   case 13:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersHysteresisGM(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (unsigned int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (DmtpcGainMap*) G__int(libp->para[11])
, (double) G__double(libp->para[12])));
      break;
   case 12:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersHysteresisGM(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (unsigned int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (DmtpcGainMap*) G__int(libp->para[11])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 23:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMRing(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[12]), (unsigned int) G__int(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (DmtpcGainMap*) G__int(libp->para[19])
, (double) G__double(libp->para[20]), (const char*) G__int(libp->para[21])
, (int) G__int(libp->para[22])));
      break;
   case 22:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMRing(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[12]), (unsigned int) G__int(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (DmtpcGainMap*) G__int(libp->para[19])
, (double) G__double(libp->para[20]), (const char*) G__int(libp->para[21])));
      break;
   case 21:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMRing(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[12]), (unsigned int) G__int(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (DmtpcGainMap*) G__int(libp->para[19])
, (double) G__double(libp->para[20])));
      break;
   case 20:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMRing(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[12]), (unsigned int) G__int(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (DmtpcGainMap*) G__int(libp->para[19])));
      break;
   case 19:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMRing(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[12]), (unsigned int) G__int(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 19:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMSeed(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (double) G__double(libp->para[7])
, (unsigned int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (unsigned int) G__int(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (DmtpcGainMap*) G__int(libp->para[16]), (double) G__double(libp->para[17])
, (bool) G__int(libp->para[18])));
      break;
   case 18:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMSeed(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (double) G__double(libp->para[7])
, (unsigned int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (unsigned int) G__int(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (DmtpcGainMap*) G__int(libp->para[16]), (double) G__double(libp->para[17])));
      break;
   case 17:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMSeed(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (double) G__double(libp->para[7])
, (unsigned int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (unsigned int) G__int(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (DmtpcGainMap*) G__int(libp->para[16])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 26:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMSeedStitch(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (int) G__int(libp->para[12]), (double) G__double(libp->para[13])
, (unsigned int) G__int(libp->para[14]), (int) G__int(libp->para[15])
, (unsigned int) G__int(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]), (double) G__double(libp->para[21])
, (DmtpcGainMap*) G__int(libp->para[22]), (double) G__double(libp->para[23])
, (const char*) G__int(libp->para[24]), (bool) G__int(libp->para[25])));
      break;
   case 25:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMSeedStitch(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (int) G__int(libp->para[12]), (double) G__double(libp->para[13])
, (unsigned int) G__int(libp->para[14]), (int) G__int(libp->para[15])
, (unsigned int) G__int(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]), (double) G__double(libp->para[21])
, (DmtpcGainMap*) G__int(libp->para[22]), (double) G__double(libp->para[23])
, (const char*) G__int(libp->para[24])));
      break;
   case 24:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMSeedStitch(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (int) G__int(libp->para[12]), (double) G__double(libp->para[13])
, (unsigned int) G__int(libp->para[14]), (int) G__int(libp->para[15])
, (unsigned int) G__int(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]), (double) G__double(libp->para[21])
, (DmtpcGainMap*) G__int(libp->para[22]), (double) G__double(libp->para[23])));
      break;
   case 23:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGMSeedStitch(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (DmtpcStitchInfo*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (int) G__int(libp->para[12]), (double) G__double(libp->para[13])
, (unsigned int) G__int(libp->para[14]), (int) G__int(libp->para[15])
, (unsigned int) G__int(libp->para[16]), (double) G__double(libp->para[17])
, (double) G__double(libp->para[18]), (double) G__double(libp->para[19])
, (double) G__double(libp->para[20]), (double) G__double(libp->para[21])
, (DmtpcGainMap*) G__int(libp->para[22])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGM(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (DmtpcGainMap*) G__int(libp->para[10]), (double) G__double(libp->para[11])));
      break;
   case 11:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersGM(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (DmtpcGainMap*) G__int(libp->para[10])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersNG((TH2*) G__int(libp->para[0]), (MaxCamCluster**) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::findClusterSE((TH2*) G__int(libp->para[0]), (MaxCamCluster**) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::makeClusterHist((TH2*) G__int(libp->para[0]), *((vector<int>*) G__int(libp->para[1]))
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::makeClusterHist((TH2*) G__int(libp->para[0]), *((vector<int>*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::clustWidth(*((vector<int>*) G__int(libp->para[0])), (TH2*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = MaxCamImageTools::halfway(*((vector<int>*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1]))
, (TH2*) G__int(libp->para[2]), (double) G__double(libp->para[3]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::minDist(*((vector<int>*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1]))
, (TH2*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::blur((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::gaussianBlur((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double**) G__int(libp->para[3])
, (MaxCamImageTools::BLUR_EDGE_BEHAVIOR) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::gaussianBlur((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double**) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::gaussianBlur((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::bilateralFilter((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::bilateralFilter((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::bilateralFilter((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) MaxCamImageTools::fastBilateralFilter(
(TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (bool) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::fastBilateralFilter((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[4]), (int) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::fastBilateralFilter((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::BILATERAL_VALUE_FN) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::fastBilateralFilter((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::fastBilateralFilter((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::findMaximum((TH1*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::findMaximum2D((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::countPixelsAboveThreshold((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      MaxCamImageTools::rotateTCutG((TCutG*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (TPoints*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MaxCamImageTools::rotateTCutG((TCutG*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::padImage((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::padImage((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::rotatePerfect((TH2*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::rotateRight((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::rotateLeft((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::rotate180((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateImg((TH2*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TPoints*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TCutG*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateImg((TH2*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TPoints*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateImg((TH2*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (TPoints*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateImg((TH2*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateInterpolate((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (TH2*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateInterpolate((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (TH2*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateInterpolate((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateInterpolate((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::rotateInterpolate((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::rotate((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TVector2*) G__int(libp->para[2]), (TVector2*) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::getCenter((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::getCenter((TCutG*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::getExtent((TCutG*) G__int(libp->para[0]), (TPoints*) G__int(libp->para[1])
, (TPoints*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) MaxCamImageTools::countPix((TH2*) G__int(libp->para[0]), (TCutG*) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) MaxCamImageTools::countPix((TH2*) G__int(libp->para[0]), (TCutG*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) MaxCamImageTools::countPix((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::makeTCutGRect(*((TString*) G__int(libp->para[0])), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::makeAnnulusSector(*((TString*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (TH2*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::edgeDetect((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::GRADIENT_OPERATOR) G__int(libp->para[4]), (unsigned int) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::edgeDetect((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::GRADIENT_OPERATOR) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::edgeDetect((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) MaxCamImageTools::convolve(
(TH2*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (MaxCamImageTools::BLUR_EDGE_BEHAVIOR) G__int(libp->para[5])
, (const char*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::convolve((TH2*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (MaxCamImageTools::BLUR_EDGE_BEHAVIOR) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::convolve((TH2*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::convolve((TH2*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      MaxCamImageTools::gradient((TH2*) G__int(libp->para[0]), (TH2*) G__int(libp->para[1])
, (TH2S*) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::GRADIENT_OPERATOR) G__int(libp->para[4]), (unsigned int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      MaxCamImageTools::gradient((TH2*) G__int(libp->para[0]), (TH2*) G__int(libp->para[1])
, (TH2S*) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::GRADIENT_OPERATOR) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      MaxCamImageTools::gradient((TH2*) G__int(libp->para[0]), (TH2*) G__int(libp->para[1])
, (TH2S*) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) MaxCamImageTools::maxProjectedStep((TH2*) G__int(libp->para[0]), (char) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) MaxCamImageTools::maxProjectedStep((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) MaxCamImageTools::anisotropicDiffusion(
(TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (MaxCamImageTools::GRADIENT_OPERATOR) G__int(libp->para[5])
, (bool) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::anisotropicDiffusion((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (MaxCamImageTools::GRADIENT_OPERATOR) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::anisotropicDiffusion((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::anisotropicDiffusion((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::anisotropicDiffusion((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::convertFitsIntoROOT(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]), (char) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::convertFitsIntoROOT(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::convertFitsIntoROOT(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::convertFitsIntoROOT(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::getNumberOfImagesInFitsFile(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamImageTools::getTimeStamp(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) MaxCamImageTools::getTimeStampUnix(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamImageTools::getFitsHeaderValue(*((TString*) G__int(libp->para[0])), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamImageTools::getFitsHeaderValueIfExists(*((TString*) G__int(libp->para[0])), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::convertIntoFits((TH2*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 19:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersADHysteresisGM(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (MaxCamImageTools::GRADIENT_OPERATOR) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (unsigned int) G__int(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (DmtpcGainMap*) G__int(libp->para[17])
, (double) G__double(libp->para[18])));
      break;
   case 18:
      G__letint(result7, 105, (long) MaxCamImageTools::findClustersADHysteresisGM(
(TH2*) G__int(libp->para[0]), (MaxCamClusterImage*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (MaxCamImageTools::GRADIENT_OPERATOR) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (unsigned int) G__int(libp->para[10]), (unsigned int) G__int(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (double) G__double(libp->para[14]), (double) G__double(libp->para[15])
, (double) G__double(libp->para[16]), (DmtpcGainMap*) G__int(libp->para[17])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::resizeImage((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::resizeImage((TH1*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::resizeImage((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::principalAxes((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::cosRecoil2D((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) MaxCamImageTools::makeProfile(
(TGraph*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (TCanvas*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::makeProfile((TGraph*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::findPedestalWithTracks((TH2*) G__int(libp->para[0]), (MaxCamCluster**) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::rmsScale((TH2*) G__int(libp->para[0]), (DmtpcStitchInfo*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MaxCamImageTools::getMean((TH2*) G__int(libp->para[0]), (TCutG*) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MaxCamImageTools::getMean((TH2*) G__int(libp->para[0]), (TCutG*) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) MaxCamImageTools::getMean((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MaxCamImageTools::getRMS((TH2*) G__int(libp->para[0]), (TCutG*) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MaxCamImageTools::getRMS((TH2*) G__int(libp->para[0]), (TCutG*) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) MaxCamImageTools::getRMS((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::meanRMSNoOutliers((TH2*) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::pixelHist((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (TCutG*) G__int(libp->para[4]), (bool) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::pixelHist((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (TCutG*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::pixelHist((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::pixelHist((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::pixelHist((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::pixelHist((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::distanceToImageEdge((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::TH2Fkappasigmaclip(
(DmtpcDataset*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (float) G__double(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformLine((TH2*) G__int(libp->para[0]), (TH2*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformLine((TH2*) G__int(libp->para[0]), (TH2*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (unsigned int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformLine((TH2*) G__int(libp->para[0]), (TH2*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformLine((TH2*) G__int(libp->para[0]), (TH2*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformLine((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformEllipse((TH2*) G__int(libp->para[0]), (THnSparse*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformEllipse((TH2*) G__int(libp->para[0]), (THnSparse*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformCircle((TH2*) G__int(libp->para[0]), (TH3*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (void (*)(int row) ) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformCircle((TH2*) G__int(libp->para[0]), (TH3*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::houghTransformCircle((TH2*) G__int(libp->para[0]), (TH3*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::nonMaximumSuppress((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::nonMaximumSuppress((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::nonMaximumSuppress((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::nonMaximumSuppress((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::medianFilter((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::medianFilter((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::medianFilter((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::laplacian((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::laplacianOfGaussian((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) MaxCamImageTools::toPolarCoordinates(
(TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (char) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) MaxCamImageTools::toPolarCoordinates(
(TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (char) G__int(libp->para[5])
, (const char*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::toPolarCoordinates((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (char) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::toPolarCoordinates((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::toPolarCoordinates((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::toPolarCoordinates((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::toPolarCoordinates((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::toPolarCoordinates((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::montage((const TH2**) G__int(libp->para[0]), (DmtpcStitchInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (char) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::montage((const TH2**) G__int(libp->para[0]), (DmtpcStitchInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::montage((const TH2**) G__int(libp->para[0]), (DmtpcStitchInfo*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::selectPixelsAbove((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::selectPixelsBelow((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::selectPixelsBetween((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::getInversePixels((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (set<int>*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::selectPixelsInsideBox((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::selectPixelsInsideCircle((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::selectPixelsAboveWithAtLeastNNeighbors((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::getNeighborsAboveThreshold((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (set<int>*) G__int(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::dilate((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::erode((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamImageTools::fillPixels((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::innerBorder((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (set<int>*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::outerBorder((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])
, (set<int>*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::rectIntersectionArea((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MaxCamImageTools::polygonArea((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MaxCamImageTools::polygonArea((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::interpolateBicubic((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::binaryThreshold((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::distanceTransform((TH2*) G__int(libp->para[0]), (set<int>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      MaxCamImageTools::fillEdges((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MaxCamImageTools::fillEdges((TH2*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      MaxCamImageTools::fillEdges((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MaxCamImageTools::interpolate((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MaxCamImageTools::interpolate((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) MaxCamImageTools::testInterpolate((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::neighborRatio((TH2*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::neighborRatio((TH2*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::neighborRatio((TH2*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::neighborRatio((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::killLonePixelsMedianDifference((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      MaxCamImageTools::projectAlongLine(
(TH2*) G__int(libp->para[0]), (TH1**) G__int(libp->para[1])
, (TH1**) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (const char*) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      MaxCamImageTools::projectAlongLine(
(TH2*) G__int(libp->para[0]), (TH1**) G__int(libp->para[1])
, (TH1**) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::radonTransform((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::radonTransform((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::radonTransform((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamImageTools::median((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::crop((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::WienerGaussDeconvolve((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::hist_apply((TH2*) G__int(libp->para[0]), (double (*) (double)) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::hist_apply((TH2*) G__int(libp->para[0]), (double (*) (double,double)) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::hist_sqrt((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::hist_abs((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamImageTools::hist_pow((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::fftshift((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::fftshift((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::fftshift((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::fftshift((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      MaxCamImageTools::addGaussianNoise((TH2*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      MaxCamImageTools::addGaussianNoise((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) MaxCamImageTools::zeroPad((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (const char*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) MaxCamImageTools::zeroPad((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) MaxCamImageTools::zeroPad((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::zeroPad((TH2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MaxCamImageTools::zeroPadSquare((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MaxCamImageTools::zeroPadSquare((TH2*) G__int(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MaxCamImageTools::zeroPadSquare((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamImageToolsCint_781_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamImageTools::countUniqueValues((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MaxCamImageTools */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMaxCamImageToolsCint {
 public:
  G__Sizep2memfuncMaxCamImageToolsCint(): p(&G__Sizep2memfuncMaxCamImageToolsCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMaxCamImageToolsCint::*p)();
};

size_t G__get_sizep2memfuncMaxCamImageToolsCint()
{
  G__Sizep2memfuncMaxCamImageToolsCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMaxCamImageToolsCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMaxCamImageToolsCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<std::vector<double> > >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH2F*>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char> >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<char,allocator<char> > >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TGraph*>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_listlETGraphmUcOallocatorlETGraphmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SimpleConfigStore_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1F*>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BILATERAL_VALUE_FN",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageTools));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BLUR_EDGE_BEHAVIOR",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBLUR_EDGE_BEHAVIOR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageTools));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GRADIENT_OPERATOR",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLGRADIENT_OPERATOR),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageTools));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ANISOTROPIC_DIFFUSION_FN",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLANISOTROPIC_DIFFUSION_FN),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageTools));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ELLIPSE_PARAMETERS",117,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS),0,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageTools));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("void (*)(int row) ",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("double (*) (double)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("double (*) (double,double)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MaxCamImageTools */
static void G__setup_memvarMaxCamImageTools(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageTools));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN),-1,-2,1,G__FastAllocString(2048).Format("BILATERAL_GAUSSIAN=%lldLL",(long long)MaxCamImageTools::BILATERAL_GAUSSIAN).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN),-1,-2,1,G__FastAllocString(2048).Format("BILATERAL_CAUCHY=%lldLL",(long long)MaxCamImageTools::BILATERAL_CAUCHY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN),-1,-2,1,G__FastAllocString(2048).Format("BILATERAL_BOX=%lldLL",(long long)MaxCamImageTools::BILATERAL_BOX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN),-1,-2,1,G__FastAllocString(2048).Format("BILATERAL_TRIANGLE=%lldLL",(long long)MaxCamImageTools::BILATERAL_TRIANGLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN),-1,-2,1,G__FastAllocString(2048).Format("BILATERAL_TUKEY=%lldLL",(long long)MaxCamImageTools::BILATERAL_TUKEY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBLUR_EDGE_BEHAVIOR),-1,-2,1,G__FastAllocString(2048).Format("RENORMALIZE=%lldLL",(long long)MaxCamImageTools::RENORMALIZE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBLUR_EDGE_BEHAVIOR),-1,-2,1,G__FastAllocString(2048).Format("MIRROR_EDGES=%lldLL",(long long)MaxCamImageTools::MIRROR_EDGES).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBLUR_EDGE_BEHAVIOR),-1,-2,1,G__FastAllocString(2048).Format("EXTEND_EDGES=%lldLL",(long long)MaxCamImageTools::EXTEND_EDGES).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBLUR_EDGE_BEHAVIOR),-1,-2,1,G__FastAllocString(2048).Format("ZERO_EDGES=%lldLL",(long long)MaxCamImageTools::ZERO_EDGES).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLGRADIENT_OPERATOR),-1,-2,1,G__FastAllocString(2048).Format("SOBEL=%lldLL",(long long)MaxCamImageTools::SOBEL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLGRADIENT_OPERATOR),-1,-2,1,G__FastAllocString(2048).Format("PREWITT=%lldLL",(long long)MaxCamImageTools::PREWITT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLGRADIENT_OPERATOR),-1,-2,1,G__FastAllocString(2048).Format("SCHARR=%lldLL",(long long)MaxCamImageTools::SCHARR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLANISOTROPIC_DIFFUSION_FN),-1,-2,1,G__FastAllocString(2048).Format("GAUSSIAN=%lldLL",(long long)MaxCamImageTools::GAUSSIAN).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLANISOTROPIC_DIFFUSION_FN),-1,-2,1,G__FastAllocString(2048).Format("LORENTZIAN=%lldLL",(long long)MaxCamImageTools::LORENTZIAN).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLANISOTROPIC_DIFFUSION_FN),-1,-2,1,G__FastAllocString(2048).Format("TUKEY=%lldLL",(long long)MaxCamImageTools::TUKEY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS),-1,-2,1,G__FastAllocString(2048).Format("ELL_X0=%lldLL",(long long)MaxCamImageTools::ELL_X0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS),-1,-2,1,G__FastAllocString(2048).Format("ELL_Y0=%lldLL",(long long)MaxCamImageTools::ELL_Y0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS),-1,-2,1,G__FastAllocString(2048).Format("ELL_A=%lldLL",(long long)MaxCamImageTools::ELL_A).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS),-1,-2,1,G__FastAllocString(2048).Format("ELL_B=%lldLL",(long long)MaxCamImageTools::ELL_B).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS),-1,-2,1,G__FastAllocString(2048).Format("ELL_PHI=%lldLL",(long long)MaxCamImageTools::ELL_PHI).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMaxCamImageToolsCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMaxCamImageTools(void) {
   /* MaxCamImageTools */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_MaxCamImageTools));
   G__memfunc_setup("setFriendlyRange",1654,G__MaxCamImageToolsCint_781_0_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - img f - - 0 '3.0' nsigma", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, float))(&MaxCamImageTools::setFriendlyRange) ), 0);
   G__memfunc_setup("createYieldHisto",1650,G__MaxCamImageToolsCint_781_0_2, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH1F), -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - h f - - 0 '-1e10' min "
"f - - 0 '1e10' max", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TH1*, float, float))(&MaxCamImageTools::createYieldHisto) ), 0);
   G__memfunc_setup("applyThreshold",1491,G__MaxCamImageToolsCint_781_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - threshold", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, float))(&MaxCamImageTools::applyThreshold) ), 0);
   G__memfunc_setup("applyCeiling",1249,G__MaxCamImageToolsCint_781_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - ceiling", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, float))(&MaxCamImageTools::applyCeiling) ), 0);
   G__memfunc_setup("hasNeighbor",1130,G__MaxCamImageToolsCint_781_0_5, 103, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1F' - 0 - image i - - 0 - xbin "
"f - - 0 - threshold i - - 0 '2' minNeighbors", (char*)NULL, (void*) G__func2void( (bool (*)(TH1F*, int, float, int))(&MaxCamImageTools::hasNeighbor) ), 0);
   G__memfunc_setup("hasNeighbor",1130,G__MaxCamImageToolsCint_781_0_6, 103, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - xbin "
"i - - 0 - ybin f - - 0 - threshold "
"i - - 0 '2' minNeighbors", (char*)NULL, (void*) G__func2void( (bool (*)(TH2*, int, int, float, int))(&MaxCamImageTools::hasNeighbor) ), 0);
   G__memfunc_setup("findNeighbors",1346,G__MaxCamImageToolsCint_781_0_7, 117, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - threshold "
"i - - 0 - ibin", (char*)NULL, (void*) G__func2void( (vector<int> (*)(TH2*, float, int))(&MaxCamImageTools::findNeighbors) ), 0);
   G__memfunc_setup("killPixels",1057,G__MaxCamImageToolsCint_781_0_8, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - threshold "
"U 'vector<int,allocator<int> >' 'vector<int>' 0 'NULL' killedPixels", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, float, vector<int>*))(&MaxCamImageTools::killPixels) ), 0);
   G__memfunc_setup("killLonePixels",1455,G__MaxCamImageToolsCint_781_0_9, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - threshold "
"i - - 0 '2' minNeighbors", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, float, int))(&MaxCamImageTools::killLonePixels) ), 0);
   G__memfunc_setup("killLonePixels2",1505,G__MaxCamImageToolsCint_781_0_10, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - threshold "
"U 'vector<int,allocator<int> >' 'vector<int>' 0 'NULL' killedPixels", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, float, vector<int>*))(&MaxCamImageTools::killLonePixels2) ), 0);
   G__memfunc_setup("findHotCold",1102,G__MaxCamImageToolsCint_781_0_11, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - low "
"f - - 0 - high I - - 0 - cold "
"I - - 0 - hot i - - 1 - ncold "
"i - - 1 - nhot", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, float, float, int*, int*, int&, int&))(&MaxCamImageTools::findHotCold) ), 0);
   G__memfunc_setup("killPixelList",1354,G__MaxCamImageToolsCint_781_0_12, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image u 'vector<int,allocator<int> >' 'vector<int>' 0 - pixellist", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, vector<int>))(&MaxCamImageTools::killPixelList) ), 0);
   G__memfunc_setup("killUnusedPixels",1685,G__MaxCamImageToolsCint_781_0_13, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 0 - image u 'vector<int,allocator<int> >' 'vector<int>' 1 - roi "
"i - - 0 - d u 'TString' - 0 - opt", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, vector<int>&, int, TString))(&MaxCamImageTools::killUnusedPixels) ), 0);
   G__memfunc_setup("killRow",740,G__MaxCamImageToolsCint_781_0_14, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - irow", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, int))(&MaxCamImageTools::killRow) ), 0);
   G__memfunc_setup("killColumn",1050,G__MaxCamImageToolsCint_781_0_15, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - icolumn", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, int))(&MaxCamImageTools::killColumn) ), 0);
   G__memfunc_setup("subtractPedestal",1690,G__MaxCamImageToolsCint_781_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - pedestal", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, float))(&MaxCamImageTools::subtractPedestal) ), 0);
   G__memfunc_setup("killSecondaryClusters",2217,G__MaxCamImageToolsCint_781_0_17, 117, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - threshold", (char*)NULL, (void*) G__func2void( (vector<int> (*)(TH2*, float))(&MaxCamImageTools::killSecondaryClusters) ), 0);
   G__memfunc_setup("calcSkewness",1254,G__MaxCamImageToolsCint_781_0_18, 100, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 0 - strip i - - 0 - minx "
"i - - 0 - maxx d - - 0 '0' bkg", (char*)NULL, (void*) G__func2void( (double (*)(TH1*, int, int, double))(&MaxCamImageTools::calcSkewness) ), 0);
   G__memfunc_setup("calcSkewness2D",1372,G__MaxCamImageToolsCint_781_0_19, 100, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - minbin "
"i - - 0 - maxbin d - - 0 '0' bkg", (char*)NULL, (void*) G__func2void( (double (*)(TH2*, int, int, double))(&MaxCamImageTools::calcSkewness2D) ), 0);
   G__memfunc_setup("calcPixelDistance",1728,G__MaxCamImageToolsCint_781_0_20, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - i "
"i - - 0 - j", (char*)NULL, (void*) G__func2void( (double (*)(TH2*, int, int))(&MaxCamImageTools::calcPixelDistance) ), 0);
   G__memfunc_setup("calcPixelCorrelation",2071,G__MaxCamImageToolsCint_781_0_21, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - i "
"i - - 0 - j", (char*)NULL, (void*) G__func2void( (double (*)(TH2*, int, int))(&MaxCamImageTools::calcPixelCorrelation) ), 0);
   G__memfunc_setup("calcIntensity2D",1488,G__MaxCamImageToolsCint_781_0_22, 100, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - imax "
"i - - 0 - jmax i - - 0 - sidebandBins "
"f - - 1 - bg", (char*)NULL, (void*) G__func2void( (double (*)(TH2*, int, int, int, float&))(&MaxCamImageTools::calcIntensity2D) ), 0);
   G__memfunc_setup("countSegmentLength",1886,G__MaxCamImageToolsCint_781_0_23, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH1' - 0 - project f - - 0 - threshold "
"i - - 0 - pixelsBelowThreshold i - - 1 - iR "
"i - - 1 - iL", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, float, int, int&, int&))(&MaxCamImageTools::countSegmentLength) ), 0);
   G__memfunc_setup("countSegmentLength2D",2004,G__MaxCamImageToolsCint_781_0_24, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 0 - project f - - 0 - threshold "
"i - - 1 - iR i - - 1 - iL", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, float, int&, int&))(&MaxCamImageTools::countSegmentLength2D) ), 0);
   G__memfunc_setup("findClusters",1270,G__MaxCamImageToolsCint_781_0_25, 105, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 0 - image U 'MaxCamCluster' - 2 - array "
"d - - 0 - minsig d - - 0 - maxsig "
"i - - 0 - minsize d - - 0 - mindist", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, MaxCamCluster**, double, double, int, double))(&MaxCamImageTools::findClusters) ), 0);
   G__memfunc_setup("findClustersCI",1410,G__MaxCamImageToolsCint_781_0_26, 105, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 0 - image U 'MaxCamClusterImage' - 0 - clust "
"d - - 0 - minsig d - - 0 - maxsig "
"i - - 0 - minsize d - - 0 - mindist", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, MaxCamClusterImage*, double, double, int, double))(&MaxCamImageTools::findClustersCI) ), 0);
   G__memfunc_setup("findClustersHysteresisGM",2493,G__MaxCamImageToolsCint_781_0_27, 105, -1, -1, 0, 15, 1, 1, 0, 
"U 'TH2' - 10 - image U 'MaxCamClusterImage' - 0 - clust "
"d - - 0 - high_thresh d - - 0 - low_thresh "
"h - - 0 - min_neighbors h - - 0 - minsize "
"d - - 0 - mindist d - - 0 - minrxy_global "
"d - - 0 - minrxy_cluster d - - 0 - maxjoin_residual "
"d - - 0 - least_squares_weight U 'DmtpcGainMap' - 10 - map "
"d - - 0 '2' spacer_width g - - 0 'false' allow_edge_seed "
"g - - 0 'true' allow_outliers", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, MaxCamClusterImage*, double, double, unsigned int, unsigned int, double, double, double, double, double, const DmtpcGainMap*, double, bool, bool))(&MaxCamImageTools::findClustersHysteresisGM) ), 0);
   G__memfunc_setup("findClustersGMRing",1818,G__MaxCamImageToolsCint_781_0_28, 105, -1, -1, 0, 23, 1, 1, 0, 
"U 'TH2' - 10 - image U 'MaxCamClusterImage' - 0 - clust "
"U 'DmtpcStitchInfo' - 10 - sinfo D - - 10 - image_rms "
"D - - 10 - image_means d - - 0 - space_sigma "
"d - - 0 - rms_sigma d - - 0 - core_thresh_high "
"d - - 0 - core_thresh_low d - - 0 - ring_thresh "
"d - - 0 - ring_nsigma h - - 0 - min_size "
"u 'MaxCamImageTools::BILATERAL_VALUE_FN' 'MaxCamImageTools::BILATERAL_VALUE_FN' 0 - fn h - - 0 - - "
"d - - 0 - minJoinDistance d - - 0 - minrxy_global "
"d - - 0 - minrxy_cluster d - - 0 - maxjoin_residual "
"d - - 0 - ls_weight U 'DmtpcGainMap' - 10 '0' map "
"d - - 0 '2' spacer_width C - - 10 '0' debug "
"i - - 0 '7' fast_bilateral_scale_exp", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, MaxCamClusterImage*, const DmtpcStitchInfo*, const double*, const double*, double, double, double, double, double, double, unsigned int, MaxCamImageTools::BILATERAL_VALUE_FN, unsigned int, double, double, double, double, double, const DmtpcGainMap*, double, const char*, int))(&MaxCamImageTools::findClustersGMRing) ), 0);
   G__memfunc_setup("findClustersGMSeed",1803,G__MaxCamImageToolsCint_781_0_29, 105, -1, -1, 0, 19, 1, 1, 0, 
"U 'TH2' - 10 - image U 'MaxCamClusterImage' - 0 - clust "
"d - - 0 - seed_thresh d - - 0 - thresh_pct "
"d - - 0 - max_wrong_p d - - 0 - min_thresh "
"i - - 0 - blur_n d - - 0 - blur_sigma "
"h - - 0 - neighbors_thresh i - - 0 - min_neigh "
"h - - 0 - minsize d - - 0 - minDistance "
"d - - 0 - minrxy_global d - - 0 - minrxy_cluster "
"d - - 0 - maxjoin_residual d - - 0 - ls_weight "
"U 'DmtpcGainMap' - 10 - map d - - 0 '2' spacer_width "
"g - - 0 'true' reproduce_v4_bug", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, MaxCamClusterImage*, double, double, double, double, int, double, unsigned int, int, unsigned int, double, double, double, double, double, const DmtpcGainMap*, double, bool))(&MaxCamImageTools::findClustersGMSeed) ), 0);
   G__memfunc_setup("findClustersGMSeedStitch",2426,G__MaxCamImageToolsCint_781_0_30, 105, -1, -1, 0, 26, 1, 1, 0, 
"U 'TH2' - 10 - image U 'MaxCamClusterImage' - 0 - clust "
"U 'DmtpcStitchInfo' - 10 - sinfo D - - 10 - image_mean "
"D - - 10 - blurred_mean D - - 10 - image_rms "
"D - - 10 - blurred_rms d - - 0 - seed_thresh "
"d - - 0 - red_thresh d - - 0 - thresh_pct "
"d - - 0 - max_wrong_p d - - 0 - min_thresh "
"i - - 0 - blur_n d - - 0 - blur_sigma "
"h - - 0 - neighbors_thresh i - - 0 - min_neigh "
"h - - 0 - minsize d - - 0 - minDistance "
"d - - 0 - minrxy_global d - - 0 - minrxy_cluster "
"d - - 0 - maxjoin_residual d - - 0 - ls_weight "
"U 'DmtpcGainMap' - 10 - map d - - 0 '2' spacer_width "
"C - - 10 '0' debug_outfile g - - 0 'false' reproduce_v4_bug", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, MaxCamClusterImage*, const DmtpcStitchInfo*, const double*, const double*, const double*, const double*, double, double, double, double, double, int, double, unsigned int, int, unsigned int, double, double, double, double, double, const DmtpcGainMap*, double, const char*, bool))(&MaxCamImageTools::findClustersGMSeedStitch) ), 0);
   G__memfunc_setup("findClustersGM",1418,G__MaxCamImageToolsCint_781_0_31, 105, -1, -1, 0, 12, 1, 1, 0, 
"U 'TH2' - 10 - image U 'MaxCamClusterImage' - 0 - clust "
"d - - 0 - minsig d - - 0 - maxsig "
"h - - 0 - minsize d - - 0 - mindist "
"d - - 0 - minrxy_global d - - 0 - minrxy_cluster "
"d - - 0 - maxjoin_residual d - - 0 - least_squares_weight "
"U 'DmtpcGainMap' - 10 - map d - - 0 '2' spacer_width", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, MaxCamClusterImage*, double, double, unsigned int, double, double, double, double, double, const DmtpcGainMap*, double))(&MaxCamImageTools::findClustersGM) ), 0);
   G__memfunc_setup("findClustersNG",1419,G__MaxCamImageToolsCint_781_0_32, 105, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 0 - image U 'MaxCamCluster' - 2 - array "
"d - - 0 - min d - - 0 - max "
"i - - 0 - minsize d - - 0 - mindist", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, MaxCamCluster**, double, double, int, double))(&MaxCamImageTools::findClustersNG) ), 0);
   G__memfunc_setup("findClusterSE",1307,G__MaxCamImageToolsCint_781_0_33, 105, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 0 - image U 'MaxCamCluster' - 2 - array "
"d - - 0 - minsig d - - 0 - maxsig "
"i - - 0 - minsize d - - 0 - mindist", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, MaxCamCluster**, double, double, int, double))(&MaxCamImageTools::findClusterSE) ), 0);
   G__memfunc_setup("makeClusterHist",1560,G__MaxCamImageToolsCint_781_0_34, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusta "
"i - - 0 '3' padding", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, vector<int>, int))(&MaxCamImageTools::makeClusterHist) ), 0);
   G__memfunc_setup("clustWidth",1067,G__MaxCamImageToolsCint_781_0_35, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusta U 'TH2' - 0 - image", (char*)NULL, (void*) G__func2void( (int (*)(vector<int>, TH2*))(&MaxCamImageTools::clustWidth) ), 0);
   G__memfunc_setup("halfway",748,G__MaxCamImageToolsCint_781_0_36, 117, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 4, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusta u 'vector<int,allocator<int> >' 'vector<int>' 0 - clustb "
"U 'TH2' - 0 - image d - - 0 - mindist", (char*)NULL, (void*) G__func2void( (vector<int> (*)(vector<int>, vector<int>, TH2*, double))(&MaxCamImageTools::halfway) ), 0);
   G__memfunc_setup("minDist",728,G__MaxCamImageToolsCint_781_0_37, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - clusta u 'vector<int,allocator<int> >' 'vector<int>' 0 - clustb "
"U 'TH2' - 0 - image", (char*)NULL, (void*) G__func2void( (double (*)(vector<int>, vector<int>, TH2*))(&MaxCamImageTools::minDist) ), 0);
   G__memfunc_setup("blur",437,G__MaxCamImageToolsCint_781_0_38, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - blurn "
"d - - 0 - blurfrac", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, int, double))(&MaxCamImageTools::blur) ), 0);
   G__memfunc_setup("gaussianBlur",1264,G__MaxCamImageToolsCint_781_0_39, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 10 - image i - - 0 - blurn "
"d - - 0 - sigma D - - 2 'NULL' kernel "
"u 'MaxCamImageTools::BLUR_EDGE_BEHAVIOR' 'MaxCamImageTools::BLUR_EDGE_BEHAVIOR' 0 'RENORMALIZE' edge_action", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, int, double, double**, MaxCamImageTools::BLUR_EDGE_BEHAVIOR))(&MaxCamImageTools::gaussianBlur) ), 0);
   G__memfunc_setup("bilateralFilter",1558,G__MaxCamImageToolsCint_781_0_40, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 10 - image d - - 0 - space_sigma "
"d - - 0 - value_sigma d - - 0 '3' nsigma "
"u 'MaxCamImageTools::BILATERAL_VALUE_FN' 'MaxCamImageTools::BILATERAL_VALUE_FN' 0 'BILATERAL_GAUSSIAN' fn", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, double, double, double, MaxCamImageTools::BILATERAL_VALUE_FN))(&MaxCamImageTools::bilateralFilter) ), 0);
   G__memfunc_setup("fastBilateralFilter",1956,G__MaxCamImageToolsCint_781_0_41, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 7, 1, 1, 0, 
"U 'TH2' - 10 - image d - - 0 - space_sigma "
"d - - 0 - value_sigma d - - 0 '3' nsigma "
"u 'MaxCamImageTools::BILATERAL_VALUE_FN' 'MaxCamImageTools::BILATERAL_VALUE_FN' 0 'BILATERAL_GAUSSIAN' fn i - - 0 '8' scale_exp "
"g - - 0 'false' cache_lookup", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, double, double, double, MaxCamImageTools::BILATERAL_VALUE_FN, int, bool))(&MaxCamImageTools::fastBilateralFilter) ), 0);
   G__memfunc_setup("findMaximum",1151,G__MaxCamImageToolsCint_781_0_42, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - project f - - 0 - threshold "
"i - - 0 - minNeighbors", (char*)NULL, (void*) G__func2void( (int (*)(TH1*, float, int))(&MaxCamImageTools::findMaximum) ), 0);
   G__memfunc_setup("findMaximum2D",1269,G__MaxCamImageToolsCint_781_0_43, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - project f - - 0 - threshold "
"i - - 0 - minNeighbors", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, float, int))(&MaxCamImageTools::findMaximum2D) ), 0);
   G__memfunc_setup("countPixelsAboveThreshold",2616,G__MaxCamImageToolsCint_781_0_44, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - threshold", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, float))(&MaxCamImageTools::countPixelsAboveThreshold) ), 0);
   G__memfunc_setup("rotateTCutG",1110,G__MaxCamImageToolsCint_781_0_45, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TCutG' - 0 - cut f - - 0 - ang_rad "
"U 'TPoints' - 0 '0' pt", (char*)NULL, (void*) G__func2void( (void (*)(TCutG*, float, TPoints*))(&MaxCamImageTools::rotateTCutG) ), 0);
   G__memfunc_setup("padImage",792,G__MaxCamImageToolsCint_781_0_46, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 '3' padfactor", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, int))(&MaxCamImageTools::padImage) ), 0);
   G__memfunc_setup("rotatePerfect",1368,G__MaxCamImageToolsCint_781_0_47, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - hin u 'TString' - 0 - dir", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, TString))(&MaxCamImageTools::rotatePerfect) ), 0);
   G__memfunc_setup("rotateRight",1165,G__MaxCamImageToolsCint_781_0_48, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - image", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*))(&MaxCamImageTools::rotateRight) ), 0);
   G__memfunc_setup("rotateLeft",1050,G__MaxCamImageToolsCint_781_0_49, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - image", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*))(&MaxCamImageTools::rotateLeft) ), 0);
   G__memfunc_setup("rotate180",808,G__MaxCamImageToolsCint_781_0_50, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - image", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*))(&MaxCamImageTools::rotate180) ), 0);
   G__memfunc_setup("rotateImg",940,G__MaxCamImageToolsCint_781_0_51, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 0 - img f - 'Float_t' 0 - ang "
"U 'TPoints' - 0 '0' pt i - 'Int_t' 0 '4' ndiv "
"U 'TCutG' - 0 '0' reg", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, Float_t, TPoints*, Int_t, TCutG*))(&MaxCamImageTools::rotateImg) ), 0);
   G__memfunc_setup("rotateInterpolate",1814,G__MaxCamImageToolsCint_781_0_52, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 10 - img d - - 0 - ang "
"d - - 0 '-1' xorig d - - 0 '-1' yorig "
"U 'TH2' - 0 '0' out C - - 10 '\"bilinear\"' interpolation", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, double, double, double, TH2*, const char*))(&MaxCamImageTools::rotateInterpolate) ), 0);
   G__memfunc_setup("rotate",655,G__MaxCamImageToolsCint_781_0_53, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - nrot "
"U 'TVector2' - 0 - xaxis U 'TVector2' - 0 - yaxis "
"f - - 0 - x0 f - - 0 - y0", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, int, TVector2*, TVector2*, float, float))(&MaxCamImageTools::rotate) ), 0);
   G__memfunc_setup("getCenter",929,G__MaxCamImageToolsCint_781_0_54, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TPoints), -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - img", (char*)NULL, (void*) G__func2void( (TPoints* (*)(TH2*))(&MaxCamImageTools::getCenter) ), 0);
   G__memfunc_setup("getCenter",929,G__MaxCamImageToolsCint_781_0_55, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TPoints), -1, 0, 1, 1, 1, 0, "U 'TCutG' - 0 - cut", (char*)NULL, (void*) G__func2void( (TPoints* (*)(TCutG*))(&MaxCamImageTools::getCenter) ), 0);
   G__memfunc_setup("getExtent",952,G__MaxCamImageToolsCint_781_0_56, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TCutG' - 0 - cut U 'TPoints' - 0 - xrng "
"U 'TPoints' - 0 - yrng", (char*)NULL, (void*) G__func2void( (void (*)(TCutG*, TPoints*, TPoints*))(&MaxCamImageTools::getExtent) ), 0);
   G__memfunc_setup("countPix",858,G__MaxCamImageToolsCint_781_0_57, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - img U 'TCutG' - 0 '0' cut "
"g - - 0 'true' cutint", (char*)NULL, (void*) G__func2void( (Int_t (*)(TH2*, TCutG*, bool))(&MaxCamImageTools::countPix) ), 0);
   G__memfunc_setup("makeTCutGRect",1267,G__MaxCamImageToolsCint_781_0_58, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TCutG), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - name f - - 0 - x0 "
"f - - 0 - y0 f - - 0 - x1 "
"f - - 0 - y1", (char*)NULL, (void*) G__func2void( (TCutG* (*)(TString, float, float, float, float))(&MaxCamImageTools::makeTCutGRect) ), 0);
   G__memfunc_setup("makeAnnulusSector",1780,G__MaxCamImageToolsCint_781_0_59, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TCutG), -1, 0, 6, 1, 1, 0, 
"u 'TString' - 0 - name f - 'Float_t' 0 - x0 "
"f - 'Float_t' 0 - y0 f - 'Float_t' 0 - r1 "
"f - 'Float_t' 0 - r2 U 'TH2' - 0 - img", (char*)NULL, (void*) G__func2void( (TCutG* (*)(TString, Float_t, Float_t, Float_t, Float_t, TH2*))(&MaxCamImageTools::makeAnnulusSector) ), 0);
   G__memfunc_setup("edgeDetect",1006,G__MaxCamImageToolsCint_781_0_60, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2C), -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 10 - img d - - 0 - blurlevel "
"d - - 0 - thresh_low d - - 0 - thresh_high "
"u 'MaxCamImageTools::GRADIENT_OPERATOR' 'MaxCamImageTools::GRADIENT_OPERATOR' 0 'SOBEL' g h - - 0 '7' kernel_size", (char*)NULL, (void*) G__func2void( (TH2C* (*)(const TH2*, double, double, double, MaxCamImageTools::GRADIENT_OPERATOR, unsigned int))(&MaxCamImageTools::edgeDetect) ), 0);
   G__memfunc_setup("convolve",876,G__MaxCamImageToolsCint_781_0_61, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 7, 1, 1, 0, 
"U 'TH2' - 10 - img D - - 10 - kernel "
"i - - 0 - width i - - 0 - height "
"g - - 0 'false' separable u 'MaxCamImageTools::BLUR_EDGE_BEHAVIOR' 'MaxCamImageTools::BLUR_EDGE_BEHAVIOR' 0 'RENORMALIZE' edge_behavior "
"C - - 10 '0' new_name", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, const double*, int, int, bool, MaxCamImageTools::BLUR_EDGE_BEHAVIOR, const char*))(&MaxCamImageTools::convolve) ), 0);
   G__memfunc_setup("gradient",846,G__MaxCamImageToolsCint_781_0_62, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 10 - img U 'TH2' - 0 - magnitude "
"U 'TH2S' - 0 - orientation d - - 0 - blurlevel "
"u 'MaxCamImageTools::GRADIENT_OPERATOR' 'MaxCamImageTools::GRADIENT_OPERATOR' 0 'SOBEL' g h - - 0 '7' kernel_size", (char*)NULL, (void*) G__func2void( (void (*)(const TH2*, TH2*, TH2S*, double, MaxCamImageTools::GRADIENT_OPERATOR, unsigned int))(&MaxCamImageTools::gradient) ), 0);
   G__memfunc_setup("maxProjectedStep",1666,G__MaxCamImageToolsCint_781_0_63, 100, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 10 - img c - - 0 '0' axis", (char*)NULL, (void*) G__func2void( (double (*)(const TH2*, char))(&MaxCamImageTools::maxProjectedStep) ), 0);
   G__memfunc_setup("anisotropicDiffusion",2130,G__MaxCamImageToolsCint_781_0_64, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 7, 1, 1, 0, 
"U 'TH2' - 10 - img d - - 0 - lambda "
"d - - 0 - K u 'MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN' 'MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN' 0 'TUKEY' fn "
"d - - 0 '1' gradient_sigma u 'MaxCamImageTools::GRADIENT_OPERATOR' 'MaxCamImageTools::GRADIENT_OPERATOR' 0 'SOBEL' gradop "
"g - - 0 'false' use_diagonals", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, double, double, MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN, double, MaxCamImageTools::GRADIENT_OPERATOR, bool))(&MaxCamImageTools::anisotropicDiffusion) ), 0);
   G__memfunc_setup("convertFitsIntoROOT",1909,G__MaxCamImageToolsCint_781_0_65, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - fitsFile u 'TString' - 0 '\"imageHisto\"' histName "
"i - - 0 '0' imageNumber c - - 0 ''F'' type", (char*)NULL, (void*) G__func2void( (TH2* (*)(TString, TString, int, char))(&MaxCamImageTools::convertFitsIntoROOT) ), 0);
   G__memfunc_setup("getNumberOfImagesInFitsFile",2689,G__MaxCamImageToolsCint_781_0_66, 105, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fitsFile", (char*)NULL, (void*) G__func2void( (int (*)(TString))(&MaxCamImageTools::getNumberOfImagesInFitsFile) ), 0);
   G__memfunc_setup("getTimeStamp",1236,G__MaxCamImageToolsCint_781_0_67, 67, -1, -1, 0, 1, 1, 1, 1, "u 'TString' - 0 - fitsFile", (char*)NULL, (void*) G__func2void( (const char* (*)(TString))(&MaxCamImageTools::getTimeStamp) ), 0);
   G__memfunc_setup("getTimeStampUnix",1656,G__MaxCamImageToolsCint_781_0_68, 108, -1, G__defined_typename("time_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - fitsFile", (char*)NULL, (void*) G__func2void( (time_t (*)(TString))(&MaxCamImageTools::getTimeStampUnix) ), 0);
   G__memfunc_setup("getFitsHeaderValue",1820,G__MaxCamImageToolsCint_781_0_69, 67, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - fitsFile C - - 0 - key", (char*)NULL, (void*) G__func2void( (char* (*)(TString, char*))(&MaxCamImageTools::getFitsHeaderValue) ), 0);
   G__memfunc_setup("getFitsHeaderValueIfExists",2635,G__MaxCamImageToolsCint_781_0_70, 67, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - fitsFile C - - 0 - key", (char*)NULL, (void*) G__func2void( (char* (*)(TString, char*))(&MaxCamImageTools::getFitsHeaderValueIfExists) ), 0);
   G__memfunc_setup("convertIntoFits",1585,G__MaxCamImageToolsCint_781_0_71, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image u 'TString' - 0 - fileName", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, TString))(&MaxCamImageTools::convertIntoFits) ), 0);
   G__memfunc_setup("findClustersADHysteresisGM",2626,G__MaxCamImageToolsCint_781_0_72, 105, -1, -1, 0, 19, 1, 1, 0, 
"U 'TH2' - 10 - image U 'MaxCamClusterImage' - 0 - clust "
"d - - 0 - K d - - 0 - Lambda "
"u 'MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN' 'MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN' 0 - f i - - 0 - ntimes "
"d - - 0 - gradient_sigma u 'MaxCamImageTools::GRADIENT_OPERATOR' 'MaxCamImageTools::GRADIENT_OPERATOR' 0 - g "
"d - - 0 - high_thresh d - - 0 - low_thresh "
"h - - 0 - min_neighbors h - - 0 - minsize "
"d - - 0 - mindist d - - 0 - minrxy_global "
"d - - 0 - minrxy_cluster d - - 0 - maxjoin_residual "
"d - - 0 - least_squares_weight U 'DmtpcGainMap' - 10 - map "
"d - - 0 '2' spacer_width", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, MaxCamClusterImage*, double, double, MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN, int, double, MaxCamImageTools::GRADIENT_OPERATOR, double, double, unsigned int, unsigned int, double, double, double, double, double, const DmtpcGainMap*, double))(&MaxCamImageTools::findClustersADHysteresisGM) ), 0);
   G__memfunc_setup("resizeImage",1141,G__MaxCamImageToolsCint_781_0_73, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - xmin "
"f - - 0 - xmax f - - 0 - ymin "
"f - - 0 - ymax", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, float, float, float, float))(&MaxCamImageTools::resizeImage) ), 0);
   G__memfunc_setup("resizeImage",1141,G__MaxCamImageToolsCint_781_0_74, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH1), -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 0 - image f - - 0 - xmin "
"f - - 0 - xmax", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*, float, float))(&MaxCamImageTools::resizeImage) ), 0);
   G__memfunc_setup("resizeImage",1141,G__MaxCamImageToolsCint_781_0_75, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH1), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - image U 'TH1' - 0 - resize", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*, TH1*))(&MaxCamImageTools::resizeImage) ), 0);
   G__memfunc_setup("principalAxes",1363,G__MaxCamImageToolsCint_781_0_76, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 0 - image f - - 0 - threshold "
"f - - 1 - Ix f - - 1 - Iy", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, float, float&, float&))(&MaxCamImageTools::principalAxes) ), 0);
   G__memfunc_setup("cosRecoil2D",1049,G__MaxCamImageToolsCint_781_0_77, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - imax "
"i - - 0 - jmax", (char*)NULL, (void*) G__func2void( (double (*)(TH2*, int, int))(&MaxCamImageTools::cosRecoil2D) ), 0);
   G__memfunc_setup("makeProfile",1135,G__MaxCamImageToolsCint_781_0_78, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH1F), -1, 0, 7, 1, 1, 0, 
"U 'TGraph' - 0 - graph i - - 0 - nx "
"f - - 0 - minx f - - 0 - maxx "
"f - - 0 - miny f - - 0 - maxy "
"U 'TCanvas' - 0 '0' c", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TGraph*, int, float, float, float, float, TCanvas*))(&MaxCamImageTools::makeProfile) ), 0);
   G__memfunc_setup("findPedestalWithTracks",2263,G__MaxCamImageToolsCint_781_0_79, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - image U 'MaxCamCluster' - 2 - array "
"i - - 0 - ntracks", (char*)NULL, (void*) G__func2void( (double (*)(TH2*, MaxCamCluster**, int))(&MaxCamImageTools::findPedestalWithTracks) ), 0);
   G__memfunc_setup("rmsScale",826,G__MaxCamImageToolsCint_781_0_80, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2F), -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 10 - image U 'DmtpcStitchInfo' - 10 - sinfo "
"D - - 10 - image_rms D - - 10 - image_mean", (char*)NULL, (void*) G__func2void( (TH2F* (*)(const TH2*, const DmtpcStitchInfo*, const double*, const double*))(&MaxCamImageTools::rmsScale) ), 0);
   G__memfunc_setup("getMean",705,G__MaxCamImageToolsCint_781_0_81, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - image U 'TCutG' - 0 '0' cut "
"g - - 0 'true' cutint", (char*)NULL, (void*) G__func2void( (double (*)(const TH2*, TCutG*, bool))(&MaxCamImageTools::getMean) ), 0);
   G__memfunc_setup("getRMS",562,G__MaxCamImageToolsCint_781_0_82, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - image U 'TCutG' - 0 '0' cut "
"g - - 0 'true' cutint", (char*)NULL, (void*) G__func2void( (double (*)(const TH2*, TCutG*, bool))(&MaxCamImageTools::getRMS) ), 0);
   G__memfunc_setup("meanRMSNoOutliers",1703,G__MaxCamImageToolsCint_781_0_83, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - image d - - 1 - mean "
"d - - 1 - rms", (char*)NULL, (void*) G__func2void( (void (*)(const TH2*, double&, double&))(&MaxCamImageTools::meanRMSNoOutliers) ), 0);
   G__memfunc_setup("pixelHist",954,G__MaxCamImageToolsCint_781_0_84, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH1F), -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 0 - image i - 'Int_t' 0 '100' nbins "
"f - 'Float_t' 0 '9999' minVal f - 'Float_t' 0 '-9999' maxVal "
"U 'TCutG' - 0 '0' cut g - - 0 'true' cutint", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TH2*, Int_t, Float_t, Float_t, TCutG*, bool))(&MaxCamImageTools::pixelHist) ), 0);
   G__memfunc_setup("distanceToImageEdge",1894,G__MaxCamImageToolsCint_781_0_85, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - image i - - 0 - ibin", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, int))(&MaxCamImageTools::distanceToImageEdge) ), 0);
   G__memfunc_setup("TH2Fkappasigmaclip",1754,G__MaxCamImageToolsCint_781_0_86, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 7, 1, 1, 0, 
"U 'DmtpcDataset' - 0 - d i - - 0 - cameraNum "
"i - - 0 - start i - - 0 - stop "
"f - - 0 - sigmas i - - 0 - iter "
"f - - 0 - change", (char*)NULL, (void*) G__func2void( (TH2* (*)(DmtpcDataset*, int, int, int, float, int, float))(&MaxCamImageTools::TH2Fkappasigmaclip) ), 0);
   G__memfunc_setup("houghTransformLine",1887,G__MaxCamImageToolsCint_781_0_87, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 0 - in U 'TH2' - 0 '0' out "
"d - - 0 '1' min h - - 0 '512' - "
"h - - 0 '512' -", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, TH2*, double, unsigned int, unsigned int))(&MaxCamImageTools::houghTransformLine) ), 0);
   G__memfunc_setup("houghTransformEllipse",2213,G__MaxCamImageToolsCint_781_0_88, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_THnSparse), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - in U 'THnSparse' - 0 - out "
"d - - 0 '1' min", (char*)NULL, (void*) G__func2void( (THnSparse* (*)(TH2*, THnSparse*, double))(&MaxCamImageTools::houghTransformEllipse) ), 0);
   G__memfunc_setup("houghTransformCircle",2089,G__MaxCamImageToolsCint_781_0_89, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH3), -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 0 - in U 'TH3' - 0 - out "
"d - - 0 '1' min 1 - 'void (*)(int row) ' 0 '0' progressFn", (char*)NULL, (void*) G__func2void( (TH3* (*)(TH2*, TH3*, double, void (*)(int row) ))(&MaxCamImageTools::houghTransformCircle) ), 0);
   G__memfunc_setup("nonMaximumSuppress",1934,G__MaxCamImageToolsCint_781_0_90, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 10 - in i - - 0 '1' n "
"d - - 0 '0' setval C - - 10 '\"_suppressed\"' suffix", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, int, double, const char*))(&MaxCamImageTools::nonMaximumSuppress) ), 0);
   G__memfunc_setup("medianFilter",1236,G__MaxCamImageToolsCint_781_0_91, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - in h - - 0 '3' - "
"h - - 0 '1' -", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, unsigned int, unsigned int))(&MaxCamImageTools::medianFilter) ), 0);
   G__memfunc_setup("laplacian",933,G__MaxCamImageToolsCint_781_0_92, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 1, 1, 1, 0, "U 'TH2' - 10 - in", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*))(&MaxCamImageTools::laplacian) ), 0);
   G__memfunc_setup("laplacianOfGaussian",1941,G__MaxCamImageToolsCint_781_0_93, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - in d - - 0 - sigma "
"i - - 0 - width", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, double, int))(&MaxCamImageTools::laplacianOfGaussian) ), 0);
   G__memfunc_setup("toPolarCoordinates",1884,G__MaxCamImageToolsCint_781_0_94, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 8, 1, 1, 0, 
"U 'TH2' - 0 - in h - - 0 '256' - "
"h - - 0 '256' - d - - 0 '0' centerx "
"d - - 0 '0' centery c - - 0 ''D'' type "
"C - - 10 '\"bilinear\"' interpolation C - - 10 '0' name", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, unsigned int, unsigned int, double, double, char, const char*, const char*))(&MaxCamImageTools::toPolarCoordinates) ), 0);
   G__memfunc_setup("montage",747,G__MaxCamImageToolsCint_781_0_95, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 12 - in U 'DmtpcStitchInfo' - 0 - info "
"C - - 10 - name C - - 10 '\"bilinear\"' interpolation "
"c - - 0 ''F'' histType", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2**, DmtpcStitchInfo*, const char*, const char*, char))(&MaxCamImageTools::montage) ), 0);
   G__memfunc_setup("selectPixelsAbove",1762,G__MaxCamImageToolsCint_781_0_96, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels "
"d - - 0 - thresh", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, set<int>*, double))(&MaxCamImageTools::selectPixelsAbove) ), 0);
   G__memfunc_setup("selectPixelsBelow",1774,G__MaxCamImageToolsCint_781_0_97, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels "
"d - - 0 - thresh", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, set<int>*, double))(&MaxCamImageTools::selectPixelsBelow) ), 0);
   G__memfunc_setup("selectPixelsBetween",1983,G__MaxCamImageToolsCint_781_0_98, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels "
"d - - 0 - thresh_low d - - 0 - thresh_high", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, set<int>*, double, double))(&MaxCamImageTools::selectPixelsBetween) ), 0);
   G__memfunc_setup("getInversePixels",1681,G__MaxCamImageToolsCint_781_0_99, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 10 - in "
"U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - out", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, const set<int>*, set<int>*))(&MaxCamImageTools::getInversePixels) ), 0);
   G__memfunc_setup("selectPixelsInsideBox",2170,G__MaxCamImageToolsCint_781_0_100, 105, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels "
"d - - 0 - xmin d - - 0 - ymin "
"d - - 0 - xmax d - - 0 - ymax", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, set<int>*, double, double, double, double))(&MaxCamImageTools::selectPixelsInsideBox) ), 0);
   G__memfunc_setup("selectPixelsInsideCircle",2467,G__MaxCamImageToolsCint_781_0_101, 105, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels "
"d - - 0 - x0 d - - 0 - y0 "
"d - - 0 - r", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, set<int>*, double, double, double))(&MaxCamImageTools::selectPixelsInsideCircle) ), 0);
   G__memfunc_setup("selectPixelsAboveWithAtLeastNNeighbors",3867,G__MaxCamImageToolsCint_781_0_102, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels "
"d - - 0 - thresh i - - 0 - n", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, set<int>*, double, int))(&MaxCamImageTools::selectPixelsAboveWithAtLeastNNeighbors) ), 0);
   G__memfunc_setup("getNeighborsAboveThreshold",2683,G__MaxCamImageToolsCint_781_0_103, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 10 - img i - - 0 - bin "
"U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels d - - 0 - thresh", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, int, set<int>*, double))(&MaxCamImageTools::getNeighborsAboveThreshold) ), 0);
   G__memfunc_setup("dilate",627,G__MaxCamImageToolsCint_781_0_104, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, set<int>*))(&MaxCamImageTools::dilate) ), 0);
   G__memfunc_setup("erode",527,G__MaxCamImageToolsCint_781_0_105, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - pixels", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, set<int>*))(&MaxCamImageTools::erode) ), 0);
   G__memfunc_setup("fillPixels",1052,G__MaxCamImageToolsCint_781_0_106, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 10 - pixels "
"d - - 0 - val", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, const set<int>*, double))(&MaxCamImageTools::fillPixels) ), 0);
   G__memfunc_setup("innerBorder",1146,G__MaxCamImageToolsCint_781_0_107, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 10 - pixels "
"U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - out", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, const set<int>*, set<int>*))(&MaxCamImageTools::innerBorder) ), 0);
   G__memfunc_setup("outerBorder",1165,G__MaxCamImageToolsCint_781_0_108, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - img U 'set<int,less<int>,allocator<int> >' 'set<int>' 10 - pixels "
"U 'set<int,less<int>,allocator<int> >' 'set<int>' 0 - out", (char*)NULL, (void*) G__func2void( (int (*)(const TH2*, const set<int>*, set<int>*))(&MaxCamImageTools::outerBorder) ), 0);
   G__memfunc_setup("rectIntersectionArea",2078,G__MaxCamImageToolsCint_781_0_109, 100, -1, -1, 0, 4, 1, 1, 0, 
"D - - 0 - xcoords1 D - - 0 - ycoords1 "
"D - - 0 - xcoords2 D - - 0 - ycoords2", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*, double*, double*))(&MaxCamImageTools::rectIntersectionArea) ), 0);
   G__memfunc_setup("polygonArea",1153,G__MaxCamImageToolsCint_781_0_110, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - n D - - 10 - x "
"D - - 10 - y g - - 0 'true' ordered", (char*)NULL, (void*) G__func2void( (double (*)(int, const double*, const double*, bool))(&MaxCamImageTools::polygonArea) ), 0);
   G__memfunc_setup("interpolateBicubic",1880,G__MaxCamImageToolsCint_781_0_111, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - in d - - 0 - x "
"d - - 0 - y", (char*)NULL, (void*) G__func2void( (double (*)(const TH2*, double, double))(&MaxCamImageTools::interpolateBicubic) ), 0);
   G__memfunc_setup("binaryThreshold",1586,G__MaxCamImageToolsCint_781_0_112, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2C), -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 10 - in d - - 0 - thresh", (char*)NULL, (void*) G__func2void( (TH2C* (*)(const TH2*, double))(&MaxCamImageTools::binaryThreshold) ), 0);
   G__memfunc_setup("distanceTransform",1799,G__MaxCamImageToolsCint_781_0_113, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2I), -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 10 - in U 'set<int,less<int>,allocator<int> >' 'set<int>' 10 - pixels", (char*)NULL, (void*) G__func2void( (TH2I* (*)(const TH2*, const set<int>*))(&MaxCamImageTools::distanceTransform) ), 0);
   G__memfunc_setup("fillEdges",911,G__MaxCamImageToolsCint_781_0_114, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - in h - - 0 '1' - "
"d - - 0 '0' setval", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, unsigned int, double))(&MaxCamImageTools::fillEdges) ), 0);
   G__memfunc_setup("interpolate",1191,G__MaxCamImageToolsCint_781_0_115, 100, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 10 - in d - - 0 - x "
"d - - 0 - y C - - 10 '\"bilinear\"' method", (char*)NULL, (void*) G__func2void( (double (*)(const TH2*, double, double, const char*))(&MaxCamImageTools::interpolate) ), 0);
   G__memfunc_setup("testInterpolate",1607,G__MaxCamImageToolsCint_781_0_116, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) G__func2void( (bool (*)(const char*))(&MaxCamImageTools::testInterpolate) ), 0);
   G__memfunc_setup("neighborRatio",1357,G__MaxCamImageToolsCint_781_0_117, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 10 - in g - - 0 'false' abs "
"g - - 0 'false' median g - - 0 'false' difference", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, bool, bool, bool))(&MaxCamImageTools::neighborRatio) ), 0);
   G__memfunc_setup("killLonePixelsMedianDifference",3048,G__MaxCamImageToolsCint_781_0_118, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - tokill d - - 0 - threshold", (char*)NULL, (void*) G__func2void( (int (*)(TH2*, double))(&MaxCamImageTools::killLonePixelsMedianDifference) ), 0);
   G__memfunc_setup("projectAlongLine",1648,G__MaxCamImageToolsCint_781_0_119, 121, -1, -1, 0, 9, 1, 1, 0, 
"U 'TH2' - 10 - img U 'TH1' - 2 - longi "
"U 'TH1' - 2 - tranv d - - 0 - x0 "
"d - - 0 - y0 d - - 0 - x1 "
"d - - 0 - y1 d - - 0 - width "
"C - - 10 '\"bilinear\"' interpolation_method", (char*)NULL, (void*) G__func2void( (void (*)(const TH2*, TH1**, TH1**, double, double, double, double, double, const char*))(&MaxCamImageTools::projectAlongLine) ), 0);
   G__memfunc_setup("radonTransform",1488,G__MaxCamImageToolsCint_781_0_120, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2D), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - img i - - 0 '360' nbinstheta "
"i - - 0 '-1' nprojbins", (char*)NULL, (void*) G__func2void( (TH2D* (*)(const TH2*, int, int))(&MaxCamImageTools::radonTransform) ), 0);
   G__memfunc_setup("median",622,G__MaxCamImageToolsCint_781_0_121, 100, -1, -1, 0, 1, 1, 1, 0, "U 'TH2' - 10 - img", (char*)NULL, (void*) G__func2void( (double (*)(const TH2*))(&MaxCamImageTools::median) ), 0);
   G__memfunc_setup("crop",436,G__MaxCamImageToolsCint_781_0_122, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 5, 1, 1, 0, 
"U 'TH2' - 10 - img i - - 0 - xbinmin "
"i - - 0 - xbinmax i - - 0 - ybinmin "
"i - - 0 - ybinmax", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, int, int, int, int))(&MaxCamImageTools::crop) ), 0);
   G__memfunc_setup("WienerGaussDeconvolve",2178,G__MaxCamImageToolsCint_781_0_123, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 10 - in d - - 0 - gauss_sigma "
"d - - 0 - noise_sigma", (char*)NULL, (void*) G__func2void( (TH2* (*)(const TH2*, double, double))(&MaxCamImageTools::WienerGaussDeconvolve) ), 0);
   G__memfunc_setup("hist_apply",1085,G__MaxCamImageToolsCint_781_0_124, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - in 1 - 'double (*) (double)' 0 - fn", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, double (*) (double)))(&MaxCamImageTools::hist_apply) ), 0);
   G__memfunc_setup("hist_apply",1085,G__MaxCamImageToolsCint_781_0_125, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - in 1 - 'double (*) (double,double)' 0 - fn "
"d - - 0 - arg", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, double (*) (double,double), double))(&MaxCamImageTools::hist_apply) ), 0);
   G__memfunc_setup("hist_sqrt",993,G__MaxCamImageToolsCint_781_0_126, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - in", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*))(&MaxCamImageTools::hist_sqrt) ), 0);
   G__memfunc_setup("hist_abs",845,G__MaxCamImageToolsCint_781_0_127, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - in", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*))(&MaxCamImageTools::hist_abs) ), 0);
   G__memfunc_setup("hist_pow",877,G__MaxCamImageToolsCint_781_0_128, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - in d - - 0 - b", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, double))(&MaxCamImageTools::hist_pow) ), 0);
   G__memfunc_setup("fftshift",862,G__MaxCamImageToolsCint_781_0_129, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 4, 1, 1, 0, 
"U 'TH2' - 0 - in d - - 0 '1' scalex "
"d - - 0 '1' scaley g - - 0 'false' normalize", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, double, double, bool))(&MaxCamImageTools::fftshift) ), 0);
   G__memfunc_setup("addGaussianNoise",1634,G__MaxCamImageToolsCint_781_0_130, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2' - 0 - in d - - 0 '1' sigma", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, double))(&MaxCamImageTools::addGaussianNoise) ), 0);
   G__memfunc_setup("zeroPad",725,G__MaxCamImageToolsCint_781_0_131, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 6, 1, 1, 0, 
"U 'TH2' - 0 - in i - - 0 - newx "
"i - - 0 - newy f - - 0 '0' newxpos "
"f - - 0 '0' newypos C - - 10 '\"_zeropad\"' name", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, int, int, float, float, const char*))(&MaxCamImageTools::zeroPad) ), 0);
   G__memfunc_setup("zeroPadSquare",1350,G__MaxCamImageToolsCint_781_0_132, 85, G__get_linked_tagnum(&G__MaxCamImageToolsCintLN_TH2), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - in f - - 0 '0' newpos "
"C - - 10 '\"_zeropad\"' name", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*, float, const char*))(&MaxCamImageTools::zeroPadSquare) ), 0);
   G__memfunc_setup("countUniqueValues",1808,G__MaxCamImageToolsCint_781_0_133, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 10 - in", (char*)NULL, (void*) G__func2void( (int (*)(const TH1*))(&MaxCamImageTools::countUniqueValues) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMaxCamImageToolsCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMaxCamImageToolsCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMaxCamImageToolsCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MaxCamImageToolsCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH2C = { "TH2C" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH2S = { "TH2S" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH2I = { "TH2I" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TH3 = { "TH3" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_THnSparse = { "THnSparse" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_MaxCamCluster = { "MaxCamCluster" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_DmtpcStitchInfo = { "DmtpcStitchInfo" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR = { "vector<TH2F*,allocator<TH2F*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH2F*,allocator<TH2F*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_DmtpcGainMap = { "DmtpcGainMap" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_MaxCamClusterImage = { "MaxCamClusterImage" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR = { "vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<char,allocator<char> >,allocator<vector<char,allocator<char> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_listlETGraphmUcOallocatorlETGraphmUgRsPgR = { "list<TGraph*,allocator<TGraph*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgR = { "vector<SimpleConfigStore_t,allocator<SimpleConfigStore_t> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<SimpleConfigStore_t,allocator<SimpleConfigStore_t> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR = { "vector<TH1F*,allocator<TH1F*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1F*,allocator<TH1F*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_DmtpcDataset = { "DmtpcDataset" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_MaxCamImageTools = { "MaxCamImageTools" , 110 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_TPoints = { "TPoints" , 99 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN = { "MaxCamImageTools::BILATERAL_VALUE_FN" , 101 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBLUR_EDGE_BEHAVIOR = { "MaxCamImageTools::BLUR_EDGE_BEHAVIOR" , 101 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLGRADIENT_OPERATOR = { "MaxCamImageTools::GRADIENT_OPERATOR" , 101 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLANISOTROPIC_DIFFUSION_FN = { "MaxCamImageTools::ANISOTROPIC_DIFFUSION_FN" , 101 , -1 };
G__linked_taginfo G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS = { "MaxCamImageTools::ELLIPSE_PARAMETERS" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMaxCamImageToolsCint() {
  G__MaxCamImageToolsCintLN_TString.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH1.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH1F.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH2.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH2C.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH2S.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH2I.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH2F.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH2D.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TH3.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_THnSparse.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_MaxCamCluster.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_DmtpcStitchInfo.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TVector2.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_DmtpcGainMap.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TGraph.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TCutG.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_MaxCamClusterImage.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_listlETGraphmUcOallocatorlETGraphmUgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TCanvas.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_DmtpcDataset.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_MaxCamImageTools.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_TPoints.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBLUR_EDGE_BEHAVIOR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLGRADIENT_OPERATOR.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLANISOTROPIC_DIFFUSION_FN.tagnum = -1 ;
  G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMaxCamImageToolsCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TString);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH1);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH2);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH2C);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH2S);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH2I);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH2D);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TH3);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_THnSparse);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_MaxCamCluster);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_DmtpcStitchInfo);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlETH2FmUcOallocatorlETH2FmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH2FmUcOallocatorlETH2FmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TVector2);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_DmtpcGainMap);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TGraph);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TCutG);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_MaxCamClusterImage);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEcharcOallocatorlEchargRsPgRcOallocatorlEvectorlEcharcOallocatorlEchargRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_listlETGraphmUcOallocatorlETGraphmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlESimpleConfigStore_tcOallocatorlESimpleConfigStore_tgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_DmtpcDataset);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_MaxCamImageTools),0,-1,0,(char*)NULL,G__setup_memvarMaxCamImageTools,G__setup_memfuncMaxCamImageTools);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_TPoints);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBILATERAL_VALUE_FN);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLBLUR_EDGE_BEHAVIOR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLGRADIENT_OPERATOR);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLANISOTROPIC_DIFFUSION_FN);
   G__get_linked_tagnum_fwd(&G__MaxCamImageToolsCintLN_MaxCamImageToolscLcLELLIPSE_PARAMETERS);
}
extern "C" void G__cpp_setupMaxCamImageToolsCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMaxCamImageToolsCint()");
  G__set_cpp_environmentMaxCamImageToolsCint();
  G__cpp_setup_tagtableMaxCamImageToolsCint();

  G__cpp_setup_inheritanceMaxCamImageToolsCint();

  G__cpp_setup_typetableMaxCamImageToolsCint();

  G__cpp_setup_memvarMaxCamImageToolsCint();

  G__cpp_setup_memfuncMaxCamImageToolsCint();
  G__cpp_setup_globalMaxCamImageToolsCint();
  G__cpp_setup_funcMaxCamImageToolsCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMaxCamImageToolsCint();
  return;
}
class G__cpp_setup_initMaxCamImageToolsCint {
  public:
    G__cpp_setup_initMaxCamImageToolsCint() { G__add_setup_func("MaxCamImageToolsCint",(G__incsetup)(&G__cpp_setupMaxCamImageToolsCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMaxCamImageToolsCint() { G__remove_setup_func("MaxCamImageToolsCint"); }
};
G__cpp_setup_initMaxCamImageToolsCint G__cpp_setup_initializerMaxCamImageToolsCint;

