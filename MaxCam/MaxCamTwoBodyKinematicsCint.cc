//
// File generated by rootcint at Fri Jul 15 15:52:24 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MaxCamTwoBodyKinematicsCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MaxCamTwoBodyKinematicsCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace MaxCamTwoBodyKinematics {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MaxCamTwoBodyKinematics_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MaxCamTwoBodyKinematics", 0 /*version*/, "./MaxCamTwoBodyKinematics.hh", 8,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MaxCamTwoBodyKinematics_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MaxCamTwoBodyKinematics_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

/********************************************************
* MaxCamTwoBodyKinematicsCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMaxCamTwoBodyKinematicsCint();

extern "C" void G__set_cpp_environmentMaxCamTwoBodyKinematicsCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MaxCamTwoBodyKinematics.hh");
  G__cpp_reset_tagtableMaxCamTwoBodyKinematicsCint();
}
#include <new>
extern "C" int G__cpp_dllrevMaxCamTwoBodyKinematicsCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MaxCamTwoBodyKinematics */
static int G__MaxCamTwoBodyKinematicsCint_209_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamTwoBodyKinematics::calcCosRecoilFromRecoilEnergy((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamTwoBodyKinematicsCint_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamTwoBodyKinematics::calcRecoilEnergyFromCosRecoil((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamTwoBodyKinematicsCint_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamTwoBodyKinematics::calcRecoilEnergyFromCosScatterCMS((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamTwoBodyKinematicsCint_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamTwoBodyKinematics::calcCosScatterCMSFromRecoilEnergy((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamTwoBodyKinematicsCint_209_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamTwoBodyKinematics::calcCosScatterFromRecoilEnergy((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamTwoBodyKinematicsCint_209_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamTwoBodyKinematics::Legendre((double) G__double(libp->para[0]), (double*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MaxCamTwoBodyKinematics */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMaxCamTwoBodyKinematicsCint {
 public:
  G__Sizep2memfuncMaxCamTwoBodyKinematicsCint(): p(&G__Sizep2memfuncMaxCamTwoBodyKinematicsCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMaxCamTwoBodyKinematicsCint::*p)();
};

size_t G__get_sizep2memfuncMaxCamTwoBodyKinematicsCint()
{
  G__Sizep2memfuncMaxCamTwoBodyKinematicsCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMaxCamTwoBodyKinematicsCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMaxCamTwoBodyKinematicsCint() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MaxCamTwoBodyKinematics */
static void G__setup_memvarMaxCamTwoBodyKinematics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_MaxCamTwoBodyKinematics));
   {
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMaxCamTwoBodyKinematicsCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMaxCamTwoBodyKinematics(void) {
   /* MaxCamTwoBodyKinematics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MaxCamTwoBodyKinematicsCintLN_MaxCamTwoBodyKinematics));
   G__memfunc_setup("calcCosRecoilFromRecoilEnergy",2930,G__MaxCamTwoBodyKinematicsCint_209_0_1, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - P d - - 0 - p0 "
"d - - 0 - M d - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&MaxCamTwoBodyKinematics::calcCosRecoilFromRecoilEnergy) ), 0);
   G__memfunc_setup("calcRecoilEnergyFromCosRecoil",2930,G__MaxCamTwoBodyKinematicsCint_209_0_2, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - cosTheta d - - 0 - p0 "
"d - - 0 - M d - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&MaxCamTwoBodyKinematics::calcRecoilEnergyFromCosRecoil) ), 0);
   G__memfunc_setup("calcRecoilEnergyFromCosScatterCMS",3277,G__MaxCamTwoBodyKinematicsCint_209_0_3, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - cosTheta d - - 0 - p0 "
"d - - 0 - M d - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&MaxCamTwoBodyKinematics::calcRecoilEnergyFromCosScatterCMS) ), 0);
   G__memfunc_setup("calcCosScatterCMSFromRecoilEnergy",3277,G__MaxCamTwoBodyKinematicsCint_209_0_4, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - P d - - 0 - p0 "
"d - - 0 - M d - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&MaxCamTwoBodyKinematics::calcCosScatterCMSFromRecoilEnergy) ), 0);
   G__memfunc_setup("calcCosScatterFromRecoilEnergy",3050,G__MaxCamTwoBodyKinematicsCint_209_0_5, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - E_M d - - 0 - E0 "
"d - - 0 - M d - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&MaxCamTwoBodyKinematics::calcCosScatterFromRecoilEnergy) ), 0);
   G__memfunc_setup("Legendre",806,G__MaxCamTwoBodyKinematicsCint_209_0_6, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x D - - 0 - par "
"i - - 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, double*, int))(&MaxCamTwoBodyKinematics::Legendre) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMaxCamTwoBodyKinematicsCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMaxCamTwoBodyKinematicsCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMaxCamTwoBodyKinematicsCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MaxCamTwoBodyKinematicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamTwoBodyKinematicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamTwoBodyKinematicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MaxCamTwoBodyKinematicsCintLN_MaxCamTwoBodyKinematics = { "MaxCamTwoBodyKinematics" , 110 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMaxCamTwoBodyKinematicsCint() {
  G__MaxCamTwoBodyKinematicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamTwoBodyKinematicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamTwoBodyKinematicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MaxCamTwoBodyKinematicsCintLN_MaxCamTwoBodyKinematics.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMaxCamTwoBodyKinematicsCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MaxCamTwoBodyKinematicsCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamTwoBodyKinematicsCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamTwoBodyKinematicsCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamTwoBodyKinematicsCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MaxCamTwoBodyKinematicsCintLN_MaxCamTwoBodyKinematics),0,-1,0,(char*)NULL,G__setup_memvarMaxCamTwoBodyKinematics,G__setup_memfuncMaxCamTwoBodyKinematics);
}
extern "C" void G__cpp_setupMaxCamTwoBodyKinematicsCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMaxCamTwoBodyKinematicsCint()");
  G__set_cpp_environmentMaxCamTwoBodyKinematicsCint();
  G__cpp_setup_tagtableMaxCamTwoBodyKinematicsCint();

  G__cpp_setup_inheritanceMaxCamTwoBodyKinematicsCint();

  G__cpp_setup_typetableMaxCamTwoBodyKinematicsCint();

  G__cpp_setup_memvarMaxCamTwoBodyKinematicsCint();

  G__cpp_setup_memfuncMaxCamTwoBodyKinematicsCint();
  G__cpp_setup_globalMaxCamTwoBodyKinematicsCint();
  G__cpp_setup_funcMaxCamTwoBodyKinematicsCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMaxCamTwoBodyKinematicsCint();
  return;
}
class G__cpp_setup_initMaxCamTwoBodyKinematicsCint {
  public:
    G__cpp_setup_initMaxCamTwoBodyKinematicsCint() { G__add_setup_func("MaxCamTwoBodyKinematicsCint",(G__incsetup)(&G__cpp_setupMaxCamTwoBodyKinematicsCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMaxCamTwoBodyKinematicsCint() { G__remove_setup_func("MaxCamTwoBodyKinematicsCint"); }
};
G__cpp_setup_initMaxCamTwoBodyKinematicsCint G__cpp_setup_initializerMaxCamTwoBodyKinematicsCint;

