//
// File generated by rootcint at Fri Jul 15 15:52:05 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MaxCamMCCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MaxCamMCCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MaxCamMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MaxCamMC(void *p = 0);
   static void *newArray_MaxCamMC(Long_t size, void *p);
   static void delete_MaxCamMC(void *p);
   static void deleteArray_MaxCamMC(void *p);
   static void destruct_MaxCamMC(void *p);
   static void streamer_MaxCamMC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MaxCamMC*)
   {
      ::MaxCamMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MaxCamMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MaxCamMC", ::MaxCamMC::Class_Version(), "./MaxCamMC.hh", 24,
                  typeid(::MaxCamMC), DefineBehavior(ptr, ptr),
                  &::MaxCamMC::Dictionary, isa_proxy, 0,
                  sizeof(::MaxCamMC) );
      instance.SetNew(&new_MaxCamMC);
      instance.SetNewArray(&newArray_MaxCamMC);
      instance.SetDelete(&delete_MaxCamMC);
      instance.SetDeleteArray(&deleteArray_MaxCamMC);
      instance.SetDestructor(&destruct_MaxCamMC);
      instance.SetStreamerFunc(&streamer_MaxCamMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MaxCamMC*)
   {
      return GenerateInitInstanceLocal((::MaxCamMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MaxCamMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MaxCamMC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MaxCamMC::Class_Name()
{
   return "MaxCamMC";
}

//______________________________________________________________________________
const char *MaxCamMC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MaxCamMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MaxCamMC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MaxCamMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MaxCamMC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MaxCamMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MaxCamMC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MaxCamMC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MaxCamMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class MaxCamMC.

   MaxCamSRIM::Streamer(R__b);
   MaxCamDataset::Streamer(R__b);
}

//______________________________________________________________________________
void MaxCamMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MaxCamMC.
      TClass *R__cl = ::MaxCamMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_rnd", &_rnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_projectile", &_projectile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_recoil", &_recoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_recoilCoord", &_recoilCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_rotation", &_rotation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_trackImage", &_trackImage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_wireImage", &_wireImage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_ccdImage", &_ccdImage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_minEnergy", &_minEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_stepSize", &_stepSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_totalPhotons", &_totalPhotons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_stragglingOn", &_stragglingOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_calibration", (void*)&_calibration);
      R__insp.InspectMember("MaxCamMC::Calibration", (void*)&_calibration, "_calibration.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_spacerListX", (void*)&_spacerListX);
      R__insp.InspectMember("vector<double>", (void*)&_spacerListX, "_spacerListX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_spacerListY", (void*)&_spacerListY);
      R__insp.InspectMember("vector<double>", (void*)&_spacerListY, "_spacerListY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_spacerDiameter", &_spacerDiameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_anodeWireListX", (void*)&_anodeWireListX);
      R__insp.InspectMember("vector<double>", (void*)&_anodeWireListX, "_anodeWireListX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_anodeWireListY", (void*)&_anodeWireListY);
      R__insp.InspectMember("vector<double>", (void*)&_anodeWireListY, "_anodeWireListY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_elf", &_elf);
      MaxCamSRIM::ShowMembers(R__insp);
      MaxCamDataset::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MaxCamMC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MaxCamMC : new ::MaxCamMC;
   }
   static void *newArray_MaxCamMC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MaxCamMC[nElements] : new ::MaxCamMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_MaxCamMC(void *p) {
      delete ((::MaxCamMC*)p);
   }
   static void deleteArray_MaxCamMC(void *p) {
      delete [] ((::MaxCamMC*)p);
   }
   static void destruct_MaxCamMC(void *p) {
      typedef ::MaxCamMC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MaxCamMC(TBuffer &buf, void *obj) {
      ((::MaxCamMC*)obj)->::MaxCamMC::Streamer(buf);
   }
} // end of namespace ROOT for class ::MaxCamMC

/********************************************************
* MaxCamMCCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMaxCamMCCint();

extern "C" void G__set_cpp_environmentMaxCamMCCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MaxCamMC.hh");
  G__cpp_reset_tagtableMaxCamMCCint();
}
#include <new>
extern "C" int G__cpp_dllrevMaxCamMCCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MaxCamMC */
static int G__MaxCamMCCint_659_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamMC(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) MaxCamMC(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MaxCamMC[n];
       } else {
         p = new((void*) gvp) MaxCamMC[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MaxCamMC;
       } else {
         p = new((void*) gvp) MaxCamMC;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MaxCamMC(*(MaxCamMC*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MaxCamMC(*(MaxCamMC*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setProjectile((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getProjectile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setIsotropicProjectile((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setRecoil((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamMC*) G__getstructoffset())->makeRecoil((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamMC*) G__getstructoffset())->setRecoilEnergy((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamMC*) G__getstructoffset())->setRecoilEnergyAngle((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setRecoilMass((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->calcCosRecoil((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getRecoil());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MaxCamMC*) G__getstructoffset())->propagateRecoil());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setPressure((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setRecoilCoord((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getRecoilCoord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MaxCamMC*) G__getstructoffset())->setRandomRecoilCoord((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MaxCamMC*) G__getstructoffset())->setRandomRecoilCoord((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MaxCamMC*) G__getstructoffset())->setRandomRecoilCoord((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MaxCamMC*) G__getstructoffset())->setRandomRecoilCoord((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MaxCamMC*) G__getstructoffset())->setRandomRecoilCoord((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamMC*) G__getstructoffset())->setRandomRecoilCoord((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamMC*) G__getstructoffset())->setRandomRecoilCoord();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MaxCamMC*) G__getstructoffset())->event((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamMC*) G__getstructoffset())->event();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setStepSize((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getStepSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setStraggling((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MaxCamMC*) G__getstructoffset())->getStraggling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getTrackImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MaxCamMC*) G__getstructoffset())->setTrackImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MaxCamMC*) G__getstructoffset())->setTrackImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MaxCamMC*) G__getstructoffset())->setTrackImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MaxCamMC*) G__getstructoffset())->setTrackImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MaxCamMC*) G__getstructoffset())->setTrackImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamMC*) G__getstructoffset())->setTrackImage((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamMC*) G__getstructoffset())->setTrackImage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getWireImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MaxCamMC*) G__getstructoffset())->setWireImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MaxCamMC*) G__getstructoffset())->setWireImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MaxCamMC*) G__getstructoffset())->setWireImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MaxCamMC*) G__getstructoffset())->setWireImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MaxCamMC*) G__getstructoffset())->setWireImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamMC*) G__getstructoffset())->setWireImage((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamMC*) G__getstructoffset())->setWireImage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getAnodeImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MaxCamMC*) G__getstructoffset())->setAnodeImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MaxCamMC*) G__getstructoffset())->setAnodeImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MaxCamMC*) G__getstructoffset())->setAnodeImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MaxCamMC*) G__getstructoffset())->setAnodeImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MaxCamMC*) G__getstructoffset())->setAnodeImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamMC*) G__getstructoffset())->setAnodeImage((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamMC*) G__getstructoffset())->setAnodeImage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getCCDImage());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MaxCamMC*) G__getstructoffset())->setCCDImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MaxCamMC*) G__getstructoffset())->setCCDImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MaxCamMC*) G__getstructoffset())->setCCDImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MaxCamMC*) G__getstructoffset())->setCCDImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MaxCamMC*) G__getstructoffset())->setCCDImage((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamMC*) G__getstructoffset())->setCCDImage((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamMC*) G__getstructoffset())->setCCDImage();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->applyDiffusion((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->applyBiasADC((TH2F*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->applyRadialEffect((TH2F*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getNumPhotons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->applyAvalancheWidth((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>* pobj;
         const vector<double> xobj = ((const MaxCamMC*) G__getstructoffset())->getAnodeWireListX();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>* pobj;
         const vector<double> xobj = ((const MaxCamMC*) G__getstructoffset())->getAnodeWireListY();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>* pobj;
         const vector<double> xobj = ((const MaxCamMC*) G__getstructoffset())->getSpacerListX();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>* pobj;
         const vector<double> xobj = ((const MaxCamMC*) G__getstructoffset())->getSpacerListY();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MaxCamMC*) G__getstructoffset())->addWire((double) G__double(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamMC*) G__getstructoffset())->addWire((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MaxCamMC*) G__getstructoffset())->clearWireList(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamMC*) G__getstructoffset())->clearWireList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MaxCamMC*) G__getstructoffset())->addSpacer((double) G__double(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamMC*) G__getstructoffset())->addSpacer((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MaxCamMC*) G__getstructoffset())->clearSpacerList(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamMC*) G__getstructoffset())->clearSpacerList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MaxCamMC*) G__getstructoffset())->getSpacerDiameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setSpacerDiameter((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->applySpacers((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getRangeVsEnergyProject(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getRangeVsEnergyProject());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getEnergyVsRangeProject(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 85, (long) ((MaxCamMC*) G__getstructoffset())->getEnergyVsRangeProject());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setNoiseADC((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getNoiseADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setElecScintillation((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getElecScintillation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setNuclScintillation((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getNuclScintillation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setPixelsPermm((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getPixelsPermm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setPhotonsPerkeV((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getPhotonsPerkeV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setAvalancheWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getAvalancheWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setDiffusionConstTerm((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getDiffusionConstTerm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->setDiffusionDzTerm((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MaxCamMC*) G__getstructoffset())->getDiffusionDzTerm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MaxCamMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamMCCint_659_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MaxCamMC G__TMaxCamMC;
static int G__MaxCamMCCint_659_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MaxCamMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MaxCamMC*) (soff+(sizeof(MaxCamMC)*i)))->~G__TMaxCamMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MaxCamMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MaxCamMC*) (soff))->~G__TMaxCamMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MaxCamMCCint_659_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamMC* dest = (MaxCamMC*) G__getstructoffset();
   *dest = *(MaxCamMC*) libp->para[0].ref;
   const MaxCamMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MaxCamMC */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMaxCamMCCint {
 public:
  G__Sizep2memfuncMaxCamMCCint(): p(&G__Sizep2memfuncMaxCamMCCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMaxCamMCCint::*p)();
};

size_t G__get_sizep2memfuncMaxCamMCCint()
{
  G__Sizep2memfuncMaxCamMCCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMaxCamMCCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC))) {
     MaxCamMC *G__Lderived;
     G__Lderived=(MaxCamMC*)0x1000;
     {
       MaxCamSRIM *G__Lpbase=(MaxCamSRIM*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC),G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamSRIM),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MaxCamDataset *G__Lpbase=(MaxCamDataset*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC),G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamDataset),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMaxCamMCCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Wire>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MaxCamElectricField::Wire>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamMCCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MaxCamMC */
static void G__setup_memvarMaxCamMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC));
   { MaxCamMC *p; p=(MaxCamMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TRandom2),-1,-1,4,"_rnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TLorentzVector),-1,-1,4,"_projectile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TLorentzVector),-1,-1,4,"_recoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TVector3),-1,-1,4,"_recoilCoord=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TRotation),-1,-1,4,"_rotation=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TH2F),-1,-1,4,"_trackImage=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TH2F),-1,-1,4,"_wireImage=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TH2F),-1,-1,4,"_ccdImage=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_minEnergy=",0,"energy cutoff in simulation");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_stepSize=",0,"step size in SRIM simulation");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_totalPhotons=",0,"count of photons per track");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_stragglingOn=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMCcLcLCalibration),-1,-1,4,"_calibration=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"_spacerListX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"_spacerListY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_spacerDiameter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"_anodeWireListX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"_anodeWireListY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamElectricField),-1,-1,4,"_elf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamMCCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMaxCamMCCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMaxCamMC(void) {
   /* MaxCamMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC));
   G__memfunc_setup("MaxCamMC",711,G__MaxCamMCCint_659_0_1, 105, G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxCamMC",711,G__MaxCamMCCint_659_0_2, 105, G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC), -1, 0, 1, 1, 1, 0, "u 'MaxCamMC' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setProjectile",1373,G__MaxCamMCCint_659_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - Ex d - - 0 - Ey "
"d - - 0 - Ez d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getProjectile",1361,G__MaxCamMCCint_659_0_4, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsotropicProjectile",2329,G__MaxCamMCCint_659_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - Ekin d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRecoil",938,G__MaxCamMCCint_659_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - Ex d - - 0 - Ey "
"d - - 0 - Ez d - - 0 - M", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeRecoil",1020,G__MaxCamMCCint_659_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - E d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRecoilEnergy",1556,G__MaxCamMCCint_659_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRecoilEnergyAngle",2043,G__MaxCamMCCint_659_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - E d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRecoilMass",1342,G__MaxCamMCCint_659_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - M", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcCosRecoil",1302,G__MaxCamMCCint_659_0_11, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecoil",926,G__MaxCamMCCint_659_0_12, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("propagateRecoil",1569,G__MaxCamMCCint_659_0_13, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPressure",1189,G__MaxCamMCCint_659_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - PressureInTorrs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRecoilCoord",1441,G__MaxCamMCCint_659_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecoilCoord",1429,G__MaxCamMCCint_659_0_16, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRandomRecoilCoord",2050,G__MaxCamMCCint_659_0_17, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 '0' x1 d - - 0 '0' x2 "
"d - - 0 '0' y1 d - - 0 '0' y2 "
"d - - 0 '0' z1 d - - 0 '0' z2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event",546,G__MaxCamMCCint_659_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' resetImage", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStepSize",1155,G__MaxCamMCCint_659_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStepSize",1143,G__MaxCamMCCint_659_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStraggling",1374,G__MaxCamMCCint_659_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStraggling",1362,G__MaxCamMCCint_659_0_22, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackImage",1304,G__MaxCamMCCint_659_0_23, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackImage",1316,G__MaxCamMCCint_659_0_24, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 '400' nx f - - 0 '-20' minx "
"f - - 0 '20' maxx i - - 0 '400' ny "
"f - - 0 '-20' miny f - - 0 '20' maxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWireImage",1210,G__MaxCamMCCint_659_0_25, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWireImage",1222,G__MaxCamMCCint_659_0_26, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 '330' nx f - - 0 '-20' minx "
"f - - 0 '20' maxx i - - 0 '330' ny "
"f - - 0 '-20' miny f - - 0 '20' maxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnodeImage",1290,G__MaxCamMCCint_659_0_27, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAnodeImage",1302,G__MaxCamMCCint_659_0_28, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 '330' nx f - - 0 '-20' minx "
"f - - 0 '20' maxx i - - 0 '330' ny "
"f - - 0 '-20' miny f - - 0 '20' maxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCCDImage",1005,G__MaxCamMCCint_659_0_29, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCCDImage",1017,G__MaxCamMCCint_659_0_30, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 '96' nx f - - 0 '0' minx "
"f - - 0 '768' maxx i - - 0 '64' ny "
"f - - 0 '0' miny f - - 0 '512' maxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("applyDiffusion",1485,G__MaxCamMCCint_659_0_31, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("applyBiasADC",1133,G__MaxCamMCCint_659_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("applyRadialEffect",1728,G__MaxCamMCCint_659_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumPhotons",1371,G__MaxCamMCCint_659_0_34, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("applyAvalancheWidth",1961,G__MaxCamMCCint_659_0_35, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnodeWireListX",1714,G__MaxCamMCCint_659_0_36, 117, G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnodeWireListY",1715,G__MaxCamMCCint_659_0_37, 117, G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpacerListX",1426,G__MaxCamMCCint_659_0_38, 117, G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpacerListY",1427,G__MaxCamMCCint_659_0_39, 117, G__get_linked_tagnum(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addWire",704,G__MaxCamMCCint_659_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - r u 'TString' - 0 '\"y\"' which", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearWireList",1338,G__MaxCamMCCint_659_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"y\"' which", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addSpacer",903,G__MaxCamMCCint_659_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - r u 'TString' - 0 '\"y\"' which", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearSpacerList",1537,G__MaxCamMCCint_659_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"y\"' which", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpacerDiameter",1737,G__MaxCamMCCint_659_0_44, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSpacerDiameter",1749,G__MaxCamMCCint_659_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - diam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("applySpacers",1271,G__MaxCamMCCint_659_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - image", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__MaxCamMCCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getRangeVsEnergyProject",2359,G__MaxCamMCCint_659_0_48, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TGraph), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"long\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyVsRangeProject",2359,G__MaxCamMCCint_659_0_49, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TGraph), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"long\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNoiseADC",1042,G__MaxCamMCCint_659_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - noise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNoiseADC",1030,G__MaxCamMCCint_659_0_51, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setElecScintillation",2082,G__MaxCamMCCint_659_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getElecScintillation",2070,G__MaxCamMCCint_659_0_53, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNuclScintillation",2107,G__MaxCamMCCint_659_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNuclScintillation",2095,G__MaxCamMCCint_659_0_55, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPixelsPermm",1474,G__MaxCamMCCint_659_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPixelsPermm",1462,G__MaxCamMCCint_659_0_57, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhotonsPerkeV",1668,G__MaxCamMCCint_659_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhotonsPerkeV",1656,G__MaxCamMCCint_659_0_59, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAvalancheWidth",1743,G__MaxCamMCCint_659_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAvalancheWidth",1731,G__MaxCamMCCint_659_0_61, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDiffusionConstTerm",2194,G__MaxCamMCCint_659_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiffusionConstTerm",2182,G__MaxCamMCCint_659_0_63, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDiffusionDzTerm",1865,G__MaxCamMCCint_659_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiffusionDzTerm",1853,G__MaxCamMCCint_659_0_65, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findClosestWire",1557,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"d - - 0 - r u 'vector<double,allocator<double> >' 'vector<double>' 1 - wireList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findAnodeWire",1311,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 4, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 1 - xw d - - 1 - yw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findAnodeWire",1311,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"d - - 1 - x d - - 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("driftElectrons",1480,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - npho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MaxCamMCCint_659_0_70, 85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MaxCamMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MaxCamMCCint_659_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MaxCamMCCint_659_0_72, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MaxCamMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MaxCamMCCint_659_0_73, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MaxCamMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MaxCamMCCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MaxCamMCCint_659_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MaxCamMCCint_659_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MaxCamMCCint_659_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MaxCamMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MaxCamMCCint_659_0_80, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MaxCamMCCint_659_0_81, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MaxCamMC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MaxCamMC", 837, G__MaxCamMCCint_659_0_82, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MaxCamMCCint_659_0_83, (int) ('u'), G__get_linked_tagnum(&G__MaxCamMCCintLN_MaxCamMC), -1, 1, 1, 1, 1, 0, "u 'MaxCamMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMaxCamMCCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMaxCamMCCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMaxCamMCCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MaxCamMCCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_MaxCamSRIM = { "MaxCamSRIM" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_MaxCamDataset = { "MaxCamDataset" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_MaxCamElectricField = { "MaxCamElectricField" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_vectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgR = { "vector<MaxCamElectricField::Wire,allocator<MaxCamElectricField::Wire> >" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_reverse_iteratorlEvectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MaxCamElectricField::Wire,allocator<MaxCamElectricField::Wire> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TRandom2 = { "TRandom2" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TRotation = { "TRotation" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_MaxCamMC = { "MaxCamMC" , 99 , -1 };
G__linked_taginfo G__MaxCamMCCintLN_MaxCamMCcLcLCalibration = { "MaxCamMC::Calibration" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMaxCamMCCint() {
  G__MaxCamMCCintLN_TClass.tagnum = -1 ;
  G__MaxCamMCCintLN_TBuffer.tagnum = -1 ;
  G__MaxCamMCCintLN_TMemberInspector.tagnum = -1 ;
  G__MaxCamMCCintLN_TString.tagnum = -1 ;
  G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__MaxCamMCCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MaxCamMCCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamMCCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MaxCamMCCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__MaxCamMCCintLN_TGraph.tagnum = -1 ;
  G__MaxCamMCCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MaxCamMCCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TH2.tagnum = -1 ;
  G__MaxCamMCCintLN_TH2F.tagnum = -1 ;
  G__MaxCamMCCintLN_MaxCamSRIM.tagnum = -1 ;
  G__MaxCamMCCintLN_MaxCamDataset.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_MaxCamElectricField.tagnum = -1 ;
  G__MaxCamMCCintLN_vectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgR.tagnum = -1 ;
  G__MaxCamMCCintLN_reverse_iteratorlEvectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TRandom2.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MaxCamMCCintLN_TRotation.tagnum = -1 ;
  G__MaxCamMCCintLN_TVector3.tagnum = -1 ;
  G__MaxCamMCCintLN_TLorentzVector.tagnum = -1 ;
  G__MaxCamMCCintLN_MaxCamMC.tagnum = -1 ;
  G__MaxCamMCCintLN_MaxCamMCcLcLCalibration.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMaxCamMCCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TString);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TGraph);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TH2);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_MaxCamSRIM);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_MaxCamDataset);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_MaxCamElectricField);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_vectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_reverse_iteratorlEvectorlEMaxCamElectricFieldcLcLWirecOallocatorlEMaxCamElectricFieldcLcLWiregRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TRandom2);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TRotation);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_MaxCamMC),sizeof(MaxCamMC),-1,1792,(char*)NULL,G__setup_memvarMaxCamMC,G__setup_memfuncMaxCamMC);
   G__get_linked_tagnum_fwd(&G__MaxCamMCCintLN_MaxCamMCcLcLCalibration);
}
extern "C" void G__cpp_setupMaxCamMCCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMaxCamMCCint()");
  G__set_cpp_environmentMaxCamMCCint();
  G__cpp_setup_tagtableMaxCamMCCint();

  G__cpp_setup_inheritanceMaxCamMCCint();

  G__cpp_setup_typetableMaxCamMCCint();

  G__cpp_setup_memvarMaxCamMCCint();

  G__cpp_setup_memfuncMaxCamMCCint();
  G__cpp_setup_globalMaxCamMCCint();
  G__cpp_setup_funcMaxCamMCCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMaxCamMCCint();
  return;
}
class G__cpp_setup_initMaxCamMCCint {
  public:
    G__cpp_setup_initMaxCamMCCint() { G__add_setup_func("MaxCamMCCint",(G__incsetup)(&G__cpp_setupMaxCamMCCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMaxCamMCCint() { G__remove_setup_func("MaxCamMCCint"); }
};
G__cpp_setup_initMaxCamMCCint G__cpp_setup_initializerMaxCamMCCint;

