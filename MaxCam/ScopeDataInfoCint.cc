//
// File generated by rootcint at Tue Aug 16 18:39:50 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ScopeDataInfoCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ScopeDataInfoCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ScopeDataInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ScopeDataInfo(void *p = 0);
   static void *newArray_ScopeDataInfo(Long_t size, void *p);
   static void delete_ScopeDataInfo(void *p);
   static void deleteArray_ScopeDataInfo(void *p);
   static void destruct_ScopeDataInfo(void *p);
   static void streamer_ScopeDataInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ScopeDataInfo*)
   {
      ::ScopeDataInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ScopeDataInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ScopeDataInfo", ::ScopeDataInfo::Class_Version(), "./ScopeDataInfo.hh", 14,
                  typeid(::ScopeDataInfo), DefineBehavior(ptr, ptr),
                  &::ScopeDataInfo::Dictionary, isa_proxy, 0,
                  sizeof(::ScopeDataInfo) );
      instance.SetNew(&new_ScopeDataInfo);
      instance.SetNewArray(&newArray_ScopeDataInfo);
      instance.SetDelete(&delete_ScopeDataInfo);
      instance.SetDeleteArray(&deleteArray_ScopeDataInfo);
      instance.SetDestructor(&destruct_ScopeDataInfo);
      instance.SetStreamerFunc(&streamer_ScopeDataInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ScopeDataInfo*)
   {
      return GenerateInitInstanceLocal((::ScopeDataInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ScopeDataInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *ScopeDataInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ScopeDataInfo::Class_Name()
{
   return "ScopeDataInfo";
}

//______________________________________________________________________________
const char *ScopeDataInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ScopeDataInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScopeDataInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ScopeDataInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScopeDataInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ScopeDataInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScopeDataInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ScopeDataInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ScopeDataInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class ScopeDataInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> _samplingRate;
      R__b >> _voltageMin;
      R__b >> _voltageMax;
      R__b >> _voltageStep;
      R__b >> _nTriggers;
      R__b >> _triggerLevelVolts;
      void *ptr__triggerSlope = (void*)&_triggerSlope;
      R__b >> *reinterpret_cast<Int_t*>(ptr__triggerSlope);
      void *ptr__inputCoupling = (void*)&_inputCoupling;
      R__b >> *reinterpret_cast<Int_t*>(ptr__inputCoupling);
      R__b >> _inputImpedance;
      R__b >> _channelId;
      R__b >> _scopeNumber;
      R__b.CheckByteCount(R__s, R__c, ScopeDataInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(ScopeDataInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << _samplingRate;
      R__b << _voltageMin;
      R__b << _voltageMax;
      R__b << _voltageStep;
      R__b << _nTriggers;
      R__b << _triggerLevelVolts;
      R__b << (Int_t)_triggerSlope;
      R__b << (Int_t)_inputCoupling;
      R__b << _inputImpedance;
      R__b << _channelId;
      R__b << _scopeNumber;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ScopeDataInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ScopeDataInfo.
      TClass *R__cl = ::ScopeDataInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_samplingRate", &_samplingRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_voltageMin", &_voltageMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_voltageMax", &_voltageMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_voltageStep", &_voltageStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nTriggers", &_nTriggers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_triggerLevelVolts", &_triggerLevelVolts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_triggerSlope", &_triggerSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_inputCoupling", &_inputCoupling);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_inputImpedance", &_inputImpedance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channelId", &_channelId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_scopeNumber", &_scopeNumber);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ScopeDataInfo(void *p) {
      return  p ? new(p) ::ScopeDataInfo : new ::ScopeDataInfo;
   }
   static void *newArray_ScopeDataInfo(Long_t nElements, void *p) {
      return p ? new(p) ::ScopeDataInfo[nElements] : new ::ScopeDataInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_ScopeDataInfo(void *p) {
      delete ((::ScopeDataInfo*)p);
   }
   static void deleteArray_ScopeDataInfo(void *p) {
      delete [] ((::ScopeDataInfo*)p);
   }
   static void destruct_ScopeDataInfo(void *p) {
      typedef ::ScopeDataInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ScopeDataInfo(TBuffer &buf, void *obj) {
      ((::ScopeDataInfo*)obj)->::ScopeDataInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::ScopeDataInfo

/********************************************************
* ScopeDataInfoCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableScopeDataInfoCint();

extern "C" void G__set_cpp_environmentScopeDataInfoCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("ScopeDataInfo.hh");
  G__cpp_reset_tagtableScopeDataInfoCint();
}
#include <new>
extern "C" int G__cpp_dllrevScopeDataInfoCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ScopeDataInfo */
static int G__ScopeDataInfoCint_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScopeDataInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScopeDataInfo[n];
     } else {
       p = new((void*) gvp) ScopeDataInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScopeDataInfo;
     } else {
       p = new((void*) gvp) ScopeDataInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setSamplingRate((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setVoltageRange((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setVoltageMin((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setVoltageMax((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setInputCoupling((ScopeInputCoupling) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setInputImpedance((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setChannelId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setNTriggers((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setScopeNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setVoltageStep((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setTriggerLevel((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->setTriggerSlope((ScopeTriggerSlope) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ScopeDataInfo*) G__getstructoffset())->getSamplingRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ScopeDataInfo*) G__getstructoffset())->getVoltageMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ScopeDataInfo*) G__getstructoffset())->getVoltageMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ScopeDataInfo*) G__getstructoffset())->getChannelId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ScopeDataInfo*) G__getstructoffset())->getInputImpedance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ScopeDataInfo*) G__getstructoffset())->getScopeNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ScopeDataInfo*) G__getstructoffset())->getNTriggers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ScopeDataInfo*) G__getstructoffset())->getInputCoupling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ScopeDataInfo*) G__getstructoffset())->getVoltageStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ScopeDataInfo*) G__getstructoffset())->getTriggerLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ScopeDataInfo*) G__getstructoffset())->getTriggerSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ScopeDataInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScopeDataInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ScopeDataInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ScopeDataInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScopeDataInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScopeDataInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScopeDataInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScopeDataInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ScopeDataInfoCint_169_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScopeDataInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ScopeDataInfoCint_169_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ScopeDataInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ScopeDataInfo(*(ScopeDataInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ScopeDataInfo G__TScopeDataInfo;
static int G__ScopeDataInfoCint_169_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ScopeDataInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ScopeDataInfo*) (soff+(sizeof(ScopeDataInfo)*i)))->~G__TScopeDataInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ScopeDataInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ScopeDataInfo*) (soff))->~G__TScopeDataInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ScopeDataInfoCint_169_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScopeDataInfo* dest = (ScopeDataInfo*) G__getstructoffset();
   *dest = *(ScopeDataInfo*) libp->para[0].ref;
   const ScopeDataInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ScopeDataInfo */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncScopeDataInfoCint {
 public:
  G__Sizep2memfuncScopeDataInfoCint(): p(&G__Sizep2memfuncScopeDataInfoCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncScopeDataInfoCint::*p)();
};

size_t G__get_sizep2memfuncScopeDataInfoCint()
{
  G__Sizep2memfuncScopeDataInfoCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceScopeDataInfoCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo))) {
     ScopeDataInfo *G__Lderived;
     G__Lderived=(ScopeDataInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo),G__get_linked_tagnum(&G__ScopeDataInfoCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableScopeDataInfoCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ScopeDataInfo */
static void G__setup_memvarScopeDataInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo));
   { ScopeDataInfo *p; p=(ScopeDataInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_samplingRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_voltageMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_voltageMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_voltageStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_nTriggers=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_triggerLevelVolts=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeTriggerSlope),-1,-1,4,"_triggerSlope=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeInputCoupling),-1,-1,4,"_inputCoupling=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"_inputImpedance=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_channelId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_scopeNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ScopeDataInfoCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarScopeDataInfoCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncScopeDataInfo(void) {
   /* ScopeDataInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo));
   G__memfunc_setup("ScopeDataInfo",1280,G__ScopeDataInfoCint_169_0_1, 105, G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSamplingRate",1555,G__ScopeDataInfoCint_169_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - sr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVoltageRange",1547,G__ScopeDataInfoCint_169_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - vmin f - - 0 - vmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVoltageMin",1346,G__ScopeDataInfoCint_169_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - vmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVoltageMax",1348,G__ScopeDataInfoCint_169_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - vmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputCoupling",1693,G__ScopeDataInfoCint_169_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i 'ScopeInputCoupling' - 0 - ic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputImpedance",1762,G__ScopeDataInfoCint_169_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - imped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChannelId",1202,G__ScopeDataInfoCint_169_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - chanId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTriggers",1249,G__ScopeDataInfoCint_169_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setScopeNumber",1455,G__ScopeDataInfoCint_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - isco", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVoltageStep",1466,G__ScopeDataInfoCint_169_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - dv", "voltage resolution", (void*) NULL, 0);
   G__memfunc_setup("setTriggerLevel",1560,G__ScopeDataInfoCint_169_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - tl", "trigger level in *volts*", (void*) NULL, 0);
   G__memfunc_setup("setTriggerSlope",1571,G__ScopeDataInfoCint_169_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i 'ScopeTriggerSlope' - 0 - sts", "trigger slope", (void*) NULL, 0);
   G__memfunc_setup("getSamplingRate",1543,G__ScopeDataInfoCint_169_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVoltageMin",1334,G__ScopeDataInfoCint_169_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVoltageMax",1336,G__ScopeDataInfoCint_169_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannelId",1190,G__ScopeDataInfoCint_169_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputImpedance",1750,G__ScopeDataInfoCint_169_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScopeNumber",1443,G__ScopeDataInfoCint_169_0_19, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNTriggers",1237,G__ScopeDataInfoCint_169_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputCoupling",1681,G__ScopeDataInfoCint_169_0_21, 105, G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeInputCoupling), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVoltageStep",1454,G__ScopeDataInfoCint_169_0_22, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerLevel",1548,G__ScopeDataInfoCint_169_0_23, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerSlope",1559,G__ScopeDataInfoCint_169_0_24, 105, G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeTriggerSlope), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ScopeDataInfoCint_169_0_26, 85, G__get_linked_tagnum(&G__ScopeDataInfoCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ScopeDataInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ScopeDataInfoCint_169_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScopeDataInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ScopeDataInfoCint_169_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ScopeDataInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ScopeDataInfoCint_169_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ScopeDataInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ScopeDataInfoCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ScopeDataInfoCint_169_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ScopeDataInfoCint_169_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScopeDataInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ScopeDataInfoCint_169_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScopeDataInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ScopeDataInfoCint_169_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScopeDataInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ScopeDataInfoCint_169_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScopeDataInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScopeDataInfo", 1280, G__ScopeDataInfoCint_169_0_38, (int) ('i'), G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo), -1, 0, 1, 1, 1, 0, "u 'ScopeDataInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScopeDataInfo", 1406, G__ScopeDataInfoCint_169_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ScopeDataInfoCint_169_0_40, (int) ('u'), G__get_linked_tagnum(&G__ScopeDataInfoCintLN_ScopeDataInfo), -1, 1, 1, 1, 1, 0, "u 'ScopeDataInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncScopeDataInfoCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalScopeDataInfoCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcScopeDataInfoCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ScopeDataInfoCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_ScopeInputCoupling = { "ScopeInputCoupling" , 101 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_ScopeTriggerSlope = { "ScopeTriggerSlope" , 101 , -1 };
G__linked_taginfo G__ScopeDataInfoCintLN_ScopeDataInfo = { "ScopeDataInfo" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableScopeDataInfoCint() {
  G__ScopeDataInfoCintLN_TClass.tagnum = -1 ;
  G__ScopeDataInfoCintLN_TBuffer.tagnum = -1 ;
  G__ScopeDataInfoCintLN_TMemberInspector.tagnum = -1 ;
  G__ScopeDataInfoCintLN_TObject.tagnum = -1 ;
  G__ScopeDataInfoCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ScopeDataInfoCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ScopeDataInfoCintLN_ScopeInputCoupling.tagnum = -1 ;
  G__ScopeDataInfoCintLN_ScopeTriggerSlope.tagnum = -1 ;
  G__ScopeDataInfoCintLN_ScopeDataInfo.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableScopeDataInfoCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_ScopeInputCoupling);
   G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_ScopeTriggerSlope);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ScopeDataInfoCintLN_ScopeDataInfo),sizeof(ScopeDataInfo),-1,29952,(char*)NULL,G__setup_memvarScopeDataInfo,G__setup_memfuncScopeDataInfo);
}
extern "C" void G__cpp_setupScopeDataInfoCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupScopeDataInfoCint()");
  G__set_cpp_environmentScopeDataInfoCint();
  G__cpp_setup_tagtableScopeDataInfoCint();

  G__cpp_setup_inheritanceScopeDataInfoCint();

  G__cpp_setup_typetableScopeDataInfoCint();

  G__cpp_setup_memvarScopeDataInfoCint();

  G__cpp_setup_memfuncScopeDataInfoCint();
  G__cpp_setup_globalScopeDataInfoCint();
  G__cpp_setup_funcScopeDataInfoCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncScopeDataInfoCint();
  return;
}
class G__cpp_setup_initScopeDataInfoCint {
  public:
    G__cpp_setup_initScopeDataInfoCint() { G__add_setup_func("ScopeDataInfoCint",(G__incsetup)(&G__cpp_setupScopeDataInfoCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initScopeDataInfoCint() { G__remove_setup_func("ScopeDataInfoCint"); }
};
G__cpp_setup_initScopeDataInfoCint G__cpp_setup_initializerScopeDataInfoCint;

