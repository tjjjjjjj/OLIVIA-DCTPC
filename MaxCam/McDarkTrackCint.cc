//
// File generated by rootcint at Fri Jul 15 15:53:47 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME McDarkTrackCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "McDarkTrackCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void McDarkTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_McDarkTrack(void *p = 0);
   static void *newArray_McDarkTrack(Long_t size, void *p);
   static void delete_McDarkTrack(void *p);
   static void deleteArray_McDarkTrack(void *p);
   static void destruct_McDarkTrack(void *p);
   static void streamer_McDarkTrack(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::McDarkTrack*)
   {
      ::McDarkTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::McDarkTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("McDarkTrack", ::McDarkTrack::Class_Version(), "./McDarkTrack.hh", 9,
                  typeid(::McDarkTrack), DefineBehavior(ptr, ptr),
                  &::McDarkTrack::Dictionary, isa_proxy, 0,
                  sizeof(::McDarkTrack) );
      instance.SetNew(&new_McDarkTrack);
      instance.SetNewArray(&newArray_McDarkTrack);
      instance.SetDelete(&delete_McDarkTrack);
      instance.SetDeleteArray(&deleteArray_McDarkTrack);
      instance.SetDestructor(&destruct_McDarkTrack);
      instance.SetStreamerFunc(&streamer_McDarkTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::McDarkTrack*)
   {
      return GenerateInitInstanceLocal((::McDarkTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::McDarkTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *McDarkTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *McDarkTrack::Class_Name()
{
   return "McDarkTrack";
}

//______________________________________________________________________________
const char *McDarkTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::McDarkTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int McDarkTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::McDarkTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void McDarkTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::McDarkTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *McDarkTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::McDarkTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void McDarkTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class McDarkTrack.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> _index;
      R__b >> _motherIndex;
      _P4.Streamer(R__b);
      R__b >> _quenchedEnergy;
      R__b >> _PDGIndex;
      R__b >> _Ekine;
      _begPoint.Streamer(R__b);
      _endPoint.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, McDarkTrack::IsA());
   } else {
      R__c = R__b.WriteVersion(McDarkTrack::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << _index;
      R__b << _motherIndex;
      _P4.Streamer(R__b);
      R__b << _quenchedEnergy;
      R__b << _PDGIndex;
      R__b << _Ekine;
      _begPoint.Streamer(R__b);
      _endPoint.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void McDarkTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class McDarkTrack.
      TClass *R__cl = ::McDarkTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_index", &_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_motherIndex", &_motherIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_P4", &_P4);
      R__insp.InspectMember(_P4, "_P4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_quenchedEnergy", &_quenchedEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_PDGIndex", &_PDGIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Ekine", &_Ekine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_begPoint", &_begPoint);
      R__insp.InspectMember(_begPoint, "_begPoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_endPoint", &_endPoint);
      R__insp.InspectMember(_endPoint, "_endPoint.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_McDarkTrack(void *p) {
      return  p ? new(p) ::McDarkTrack : new ::McDarkTrack;
   }
   static void *newArray_McDarkTrack(Long_t nElements, void *p) {
      return p ? new(p) ::McDarkTrack[nElements] : new ::McDarkTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_McDarkTrack(void *p) {
      delete ((::McDarkTrack*)p);
   }
   static void deleteArray_McDarkTrack(void *p) {
      delete [] ((::McDarkTrack*)p);
   }
   static void destruct_McDarkTrack(void *p) {
      typedef ::McDarkTrack current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_McDarkTrack(TBuffer &buf, void *obj) {
      ((::McDarkTrack*)obj)->::McDarkTrack::Streamer(buf);
   }
} // end of namespace ROOT for class ::McDarkTrack

/********************************************************
* McDarkTrackCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMcDarkTrackCint();

extern "C" void G__set_cpp_environmentMcDarkTrackCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("McDarkTrack.hh");
  G__cpp_reset_tagtableMcDarkTrackCint();
}
#include <new>
extern "C" int G__cpp_dllrevMcDarkTrackCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* McDarkTrack */
static int G__McDarkTrackCint_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   McDarkTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new McDarkTrack[n];
     } else {
       p = new((void*) gvp) McDarkTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new McDarkTrack;
     } else {
       p = new((void*) gvp) McDarkTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   McDarkTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new McDarkTrack(*(McDarkTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) McDarkTrack(*(McDarkTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((McDarkTrack*) G__getstructoffset())->index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->setIndex((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((McDarkTrack*) G__getstructoffset())->motherIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->setMotherIndex((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((McDarkTrack*) G__getstructoffset())->PDGIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->setPDGIndex((ULong_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((McDarkTrack*) G__getstructoffset())->P4();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->setP4(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->setP4((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->setQuenchedEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((McDarkTrack*) G__getstructoffset())->quenchedEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((McDarkTrack*) G__getstructoffset())->mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((McDarkTrack*) G__getstructoffset())->Ekine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((McDarkTrack*) G__getstructoffset())->begPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->setBegPoint(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((McDarkTrack*) G__getstructoffset())->endPoint();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->setEndPoint(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) McDarkTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) McDarkTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) McDarkTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      McDarkTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((McDarkTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) McDarkTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) McDarkTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) McDarkTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__McDarkTrackCint_219_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) McDarkTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef McDarkTrack G__TMcDarkTrack;
static int G__McDarkTrackCint_219_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (McDarkTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((McDarkTrack*) (soff+(sizeof(McDarkTrack)*i)))->~G__TMcDarkTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (McDarkTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((McDarkTrack*) (soff))->~G__TMcDarkTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__McDarkTrackCint_219_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   McDarkTrack* dest = (McDarkTrack*) G__getstructoffset();
   *dest = *(McDarkTrack*) libp->para[0].ref;
   const McDarkTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* McDarkTrack */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMcDarkTrackCint {
 public:
  G__Sizep2memfuncMcDarkTrackCint(): p(&G__Sizep2memfuncMcDarkTrackCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMcDarkTrackCint::*p)();
};

size_t G__get_sizep2memfuncMcDarkTrackCint()
{
  G__Sizep2memfuncMcDarkTrackCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMcDarkTrackCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack))) {
     McDarkTrack *G__Lderived;
     G__Lderived=(McDarkTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack),G__get_linked_tagnum(&G__McDarkTrackCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMcDarkTrackCint() {

   /* Setting up typedef entry */
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__McDarkTrackCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__McDarkTrackCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__McDarkTrackCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__McDarkTrackCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__McDarkTrackCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* McDarkTrack */
static void G__setup_memvarMcDarkTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack));
   { McDarkTrack *p; p=(McDarkTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_index=",0,"index in Geant's track table");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_motherIndex=",0,"points to mother's index");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__McDarkTrackCintLN_TLorentzVector),-1,-1,4,"_P4=",0,"4-momentum");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_quenchedEnergy=",0,"ionization energy in senstive volume");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"_PDGIndex=",0,"PDG particle index");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_Ekine=",0,"precomputed kinetic energy (from 4-vector)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__McDarkTrackCintLN_TVector3),-1,-1,4,"_begPoint=",0,"1st point on the track");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__McDarkTrackCintLN_TVector3),-1,-1,4,"_endPoint=",0,"last point on the track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__McDarkTrackCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMcDarkTrackCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMcDarkTrack(void) {
   /* McDarkTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack));
   G__memfunc_setup("McDarkTrack",1063,G__McDarkTrackCint_219_0_1, 105, G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("McDarkTrack",1063,G__McDarkTrackCint_219_0_2, 105, G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack), -1, 0, 1, 1, 1, 0, "u 'McDarkTrack' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("index",536,G__McDarkTrackCint_219_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIndex",836,G__McDarkTrackCint_219_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("motherIndex",1159,G__McDarkTrackCint_219_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMotherIndex",1459,G__McDarkTrackCint_219_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDGIndex",723,G__McDarkTrackCint_219_0_7, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPDGIndex",1055,G__McDarkTrackCint_219_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ULong_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P4",132,G__McDarkTrackCint_219_0_9, 117, G__get_linked_tagnum(&G__McDarkTrackCintLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setP4",464,G__McDarkTrackCint_219_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setP4",464,G__McDarkTrackCint_219_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuenchedEnergy",1763,G__McDarkTrackCint_219_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - qEn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quenchedEnergy",1463,G__McDarkTrackCint_219_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mass",436,G__McDarkTrackCint_219_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ekine",492,G__McDarkTrackCint_219_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begPoint",824,G__McDarkTrackCint_219_0_16, 117, G__get_linked_tagnum(&G__McDarkTrackCintLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBegPoint",1124,G__McDarkTrackCint_219_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - point", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endPoint",833,G__McDarkTrackCint_219_0_18, 117, G__get_linked_tagnum(&G__McDarkTrackCintLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEndPoint",1133,G__McDarkTrackCint_219_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - point", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__McDarkTrackCint_219_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__McDarkTrackCint_219_0_21, 85, G__get_linked_tagnum(&G__McDarkTrackCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&McDarkTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__McDarkTrackCint_219_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&McDarkTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__McDarkTrackCint_219_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&McDarkTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__McDarkTrackCint_219_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&McDarkTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__McDarkTrackCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__McDarkTrackCint_219_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__McDarkTrackCint_219_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&McDarkTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__McDarkTrackCint_219_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&McDarkTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__McDarkTrackCint_219_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&McDarkTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__McDarkTrackCint_219_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&McDarkTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~McDarkTrack", 1189, G__McDarkTrackCint_219_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__McDarkTrackCint_219_0_34, (int) ('u'), G__get_linked_tagnum(&G__McDarkTrackCintLN_McDarkTrack), -1, 1, 1, 1, 1, 0, "u 'McDarkTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMcDarkTrackCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMcDarkTrackCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMcDarkTrackCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__McDarkTrackCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__McDarkTrackCintLN_McDarkTrack = { "McDarkTrack" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMcDarkTrackCint() {
  G__McDarkTrackCintLN_TClass.tagnum = -1 ;
  G__McDarkTrackCintLN_TBuffer.tagnum = -1 ;
  G__McDarkTrackCintLN_TMemberInspector.tagnum = -1 ;
  G__McDarkTrackCintLN_TObject.tagnum = -1 ;
  G__McDarkTrackCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__McDarkTrackCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__McDarkTrackCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__McDarkTrackCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__McDarkTrackCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__McDarkTrackCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__McDarkTrackCintLN_TVector3.tagnum = -1 ;
  G__McDarkTrackCintLN_TLorentzVector.tagnum = -1 ;
  G__McDarkTrackCintLN_McDarkTrack.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMcDarkTrackCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__McDarkTrackCintLN_McDarkTrack),sizeof(McDarkTrack),-1,30464,(char*)NULL,G__setup_memvarMcDarkTrack,G__setup_memfuncMcDarkTrack);
}
extern "C" void G__cpp_setupMcDarkTrackCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMcDarkTrackCint()");
  G__set_cpp_environmentMcDarkTrackCint();
  G__cpp_setup_tagtableMcDarkTrackCint();

  G__cpp_setup_inheritanceMcDarkTrackCint();

  G__cpp_setup_typetableMcDarkTrackCint();

  G__cpp_setup_memvarMcDarkTrackCint();

  G__cpp_setup_memfuncMcDarkTrackCint();
  G__cpp_setup_globalMcDarkTrackCint();
  G__cpp_setup_funcMcDarkTrackCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMcDarkTrackCint();
  return;
}
class G__cpp_setup_initMcDarkTrackCint {
  public:
    G__cpp_setup_initMcDarkTrackCint() { G__add_setup_func("McDarkTrackCint",(G__incsetup)(&G__cpp_setupMcDarkTrackCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMcDarkTrackCint() { G__remove_setup_func("McDarkTrackCint"); }
};
G__cpp_setup_initMcDarkTrackCint G__cpp_setup_initializerMcDarkTrackCint;

