******************************
***        MCCosMix        ***
*** author: A. Kaboth      ***
*** date: 30 June 2011     ***
******************************


Purpose: This program takes an output file in the DmtpcDataset style
generated by (any) Monte Carlo and combines it with real ccd data to
better model the ccd noise.


Monte Carlo Requirements: The burden is on the user to make sure that
the MC-generated images are a match for the data they are to be combined
with. Special attention should be paid to making sure that length
scales, energy scales, and number of pixels are the same. There are a
few requirements.

1) The MC data set should have the serial number of the camera set,
   which is not true by default in Viper. In Viper, the serial number should be
   set using the command 'SerialNumber [camIDNum] [camSerialNum]' in
   the camera properties file. Not doing so will cause a failure in the
   program. This number should also match a serial number in the desired
   ccd data set. If no match is found between the MC serial number and a
   ccd data file serial number, the program will not run.

2) There should be no MC generated noise in the images. This will not
   prevent the program from running, but it will generate bad results. 

3) The MC data set should have the same number or fewer events than a
   typical ccd data set. This is to ensure that the bias frames will
   match as part of a whole run for appropriate noise subtraction.

Command Line Arguments:

./MCCosMix [input MC file (incl. path)] [input data file (incl. path)]
[percentage of blank frames (optional)] [output file path (optional)]

The program takes up to four arguments. The first two are the input
Monte Carlo file and the input ccd data file, both with full paths to
them (relative or absolute). The third is the percentage of "blank"
frames, where the MC recoil(s) are not added to the ccd data image, as a
sort of prescaling. This argument should take a value in [0,1]. The
fourth argument is the directory path for the output file. By default,
the program will output the mixed file to the MC input file's
directory. The name of the output file is [name of input]_mixed.root.


Choosing A Random Input Data File:

There is a script, randomCosMix.py, that allows the user to select a set
of runs using various criteria from (currently) the 10L run
databaseâ€”though the script is easy enough to modify for a different
DB. A random run is then drawn from this set of runs and the MCCosMix
program is run using this random run. The various selection options are
viewable by running './randomCosMix.py -h'. 

Example:

./randomCosMix.py -k COSMIC -l WIPP -d '2011-05-01' -b 0.02 -o mix/ dmtpc_mc_00001.root

This will draw from the run database all runs with the keyword COSMIC
(-k COSMIC), location WIPP (-l WIPP), with a date on or after May 01,
2011 (-d '2011-05-01') , select a random run from that list and combine
it with the MC run dmtpc_mc_00001.root (located in the current
directory), with 2% non-combined/ccd data only frames (-b 0.02) and
outputs the combined file to the mix directory (-o mix/).


Output File:

The output file contains all of the information from the Monte Carlo
file, including the camera, runInfo, chamber, and Simulation trees, as
well as the combined data tree. There is an additional tree, called
"mixing" that contains branches for the run and event numbers of the
original data tree, as well as a boolean variable ("mixed") that records
whether or not the event has been combined.

Questions, Comments, Bugs? akaboth@mit.edu