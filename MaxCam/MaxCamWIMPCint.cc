//
// File generated by rootcint at Fri Jul 15 15:52:29 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MaxCamWIMPCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MaxCamWIMPCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace MaxCamWIMP {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MaxCamWIMP_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MaxCamWIMP", 0 /*version*/, "./MaxCamWIMP.hh", 8,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MaxCamWIMP_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MaxCamWIMP_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

/********************************************************
* MaxCamWIMPCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMaxCamWIMPCint();

extern "C" void G__set_cpp_environmentMaxCamWIMPCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MaxCamWIMP.hh");
  G__cpp_reset_tagtableMaxCamWIMPCint();
}
#include <new>
extern "C" int G__cpp_dllrevMaxCamWIMPCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MaxCamWIMP */
static int G__MaxCamWIMPCint_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) MaxCamWIMP::R0((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) MaxCamWIMP::R0((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MaxCamWIMP::R0((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MaxCamWIMP::R0((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])));
      break;
   case 7:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6])));
      break;
   case 6:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE_ERange(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8])));
      break;
   case 8:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE_ERange(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])));
      break;
   case 7:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE_ERange(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6])));
      break;
   case 6:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE_ERange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE_ERange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) MaxCamWIMP::dRdE_ERange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MaxCamWIMP::Maxwell(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MaxCamWIMP::Maxwell(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      MaxCamWIMP::generateMaxwellWIMP(*(TVector3*) libp->para[0].ref, *((TVector3*) G__int(libp->para[1]))
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MaxCamWIMP::generateMaxwellWIMP(*(TVector3*) libp->para[0].ref, *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamWIMP::getCygnusDirection(*(TVector3*) libp->para[0].ref, (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamWIMP::nuclearFormFactor((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamWIMP::CwSquared((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamWIMP::r((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamWIMPCint_246_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MaxCamWIMP::muSquared((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MaxCamWIMP */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMaxCamWIMPCint {
 public:
  G__Sizep2memfuncMaxCamWIMPCint(): p(&G__Sizep2memfuncMaxCamWIMPCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMaxCamWIMPCint::*p)();
};

size_t G__get_sizep2memfuncMaxCamWIMPCint()
{
  G__Sizep2memfuncMaxCamWIMPCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMaxCamWIMPCint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMaxCamWIMPCint() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MaxCamWIMPCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MaxCamWIMP */
static void G__setup_memvarMaxCamWIMP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MaxCamWIMPCintLN_MaxCamWIMP));
   {
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMaxCamWIMPCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMaxCamWIMP(void) {
   /* MaxCamWIMP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MaxCamWIMPCintLN_MaxCamWIMP));
   G__memfunc_setup("R0",130,G__MaxCamWIMPCint_246_0_1, 100, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - MD d - - 0 - MT "
"d - - 0 '1' sigma d - - 0 '0.4' rhoD "
"d - - 0 '230' v0", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double, double))(&MaxCamWIMP::R0) ), 0);
   G__memfunc_setup("dRdE",351,G__MaxCamWIMPCint_246_0_2, 100, -1, -1, 0, 8, 1, 1, 0, 
"d - - 0 - ER d - - 0 - MD "
"d - - 0 - MT d - - 0 '1' sigma "
"d - - 0 '0.4' rhoD d - - 0 '230' v0 "
"d - - 0 '0.751' c1 d - - 0 '0.561' c2", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double, double, double, double, double))(&MaxCamWIMP::dRdE) ), 0);
   G__memfunc_setup("dRdE_ERange",1008,G__MaxCamWIMPCint_246_0_3, 100, -1, -1, 0, 9, 1, 1, 0, 
"d - - 0 - E1 d - - 0 - E2 "
"d - - 0 - MD d - - 0 - MT "
"d - - 0 '1' sigma d - - 0 '0.4' rhoD "
"d - - 0 '230' v0 d - - 0 '0.751' c1 "
"d - - 0 '0.561' c2", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double, double, double, double, double, double))(&MaxCamWIMP::dRdE_ERange) ), 0);
   G__memfunc_setup("Maxwell",730,G__MaxCamWIMPCint_246_0_4, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 0 - v u 'TVector3' - 0 - vE "
"d - - 0 '230' v0", (char*)NULL, (void*) G__func2void( (double (*)(TVector3, TVector3, double))(&MaxCamWIMP::Maxwell) ), 0);
   G__memfunc_setup("generateMaxwellWIMP",1890,G__MaxCamWIMPCint_246_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 1 - v u 'TVector3' - 0 - vE "
"d - - 0 '230' v0", (char*)NULL, (void*) G__func2void( (void (*)(TVector3&, TVector3, double))(&MaxCamWIMP::generateMaxwellWIMP) ), 0);
   G__memfunc_setup("getCygnusDirection",1882,G__MaxCamWIMPCint_246_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 1 - v f - - 0 - timeOfDay", (char*)NULL, (void*) G__func2void( (void (*)(TVector3&, float))(&MaxCamWIMP::getCygnusDirection) ), 0);
   G__memfunc_setup("nuclearFormFactor",1757,G__MaxCamWIMPCint_246_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - q", (char*)NULL, (void*) G__func2void( (double (*)(double))(&MaxCamWIMP::nuclearFormFactor) ), 0);
   G__memfunc_setup("CwSquared",911,G__MaxCamWIMPCint_246_0_8, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - Z i - - 0 - A", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&MaxCamWIMP::CwSquared) ), 0);
   G__memfunc_setup("r",114,G__MaxCamWIMPCint_246_0_9, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - MD d - - 0 - MT", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&MaxCamWIMP::r) ), 0);
   G__memfunc_setup("muSquared",951,G__MaxCamWIMPCint_246_0_10, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - MD d - - 0 - MT", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&MaxCamWIMP::muSquared) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMaxCamWIMPCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMaxCamWIMPCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMaxCamWIMPCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MaxCamWIMPCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__MaxCamWIMPCintLN_MaxCamWIMP = { "MaxCamWIMP" , 110 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMaxCamWIMPCint() {
  G__MaxCamWIMPCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MaxCamWIMPCintLN_TVector3.tagnum = -1 ;
  G__MaxCamWIMPCintLN_MaxCamWIMP.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMaxCamWIMPCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MaxCamWIMPCintLN_MaxCamWIMP),0,-1,0,(char*)NULL,G__setup_memvarMaxCamWIMP,G__setup_memfuncMaxCamWIMP);
}
extern "C" void G__cpp_setupMaxCamWIMPCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMaxCamWIMPCint()");
  G__set_cpp_environmentMaxCamWIMPCint();
  G__cpp_setup_tagtableMaxCamWIMPCint();

  G__cpp_setup_inheritanceMaxCamWIMPCint();

  G__cpp_setup_typetableMaxCamWIMPCint();

  G__cpp_setup_memvarMaxCamWIMPCint();

  G__cpp_setup_memfuncMaxCamWIMPCint();
  G__cpp_setup_globalMaxCamWIMPCint();
  G__cpp_setup_funcMaxCamWIMPCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMaxCamWIMPCint();
  return;
}
class G__cpp_setup_initMaxCamWIMPCint {
  public:
    G__cpp_setup_initMaxCamWIMPCint() { G__add_setup_func("MaxCamWIMPCint",(G__incsetup)(&G__cpp_setupMaxCamWIMPCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMaxCamWIMPCint() { G__remove_setup_func("MaxCamWIMPCint"); }
};
G__cpp_setup_initMaxCamWIMPCint G__cpp_setup_initializerMaxCamWIMPCint;

