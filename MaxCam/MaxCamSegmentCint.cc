//
// File generated by rootcint at Fri Jul 15 15:52:38 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MaxCamSegmentCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MaxCamSegmentCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MaxCamSegment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MaxCamSegment(void *p = 0);
   static void *newArray_MaxCamSegment(Long_t size, void *p);
   static void delete_MaxCamSegment(void *p);
   static void deleteArray_MaxCamSegment(void *p);
   static void destruct_MaxCamSegment(void *p);
   static void streamer_MaxCamSegment(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MaxCamSegment*)
   {
      ::MaxCamSegment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MaxCamSegment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MaxCamSegment", ::MaxCamSegment::Class_Version(), "./MaxCamSegment.hh", 6,
                  typeid(::MaxCamSegment), DefineBehavior(ptr, ptr),
                  &::MaxCamSegment::Dictionary, isa_proxy, 0,
                  sizeof(::MaxCamSegment) );
      instance.SetNew(&new_MaxCamSegment);
      instance.SetNewArray(&newArray_MaxCamSegment);
      instance.SetDelete(&delete_MaxCamSegment);
      instance.SetDeleteArray(&deleteArray_MaxCamSegment);
      instance.SetDestructor(&destruct_MaxCamSegment);
      instance.SetStreamerFunc(&streamer_MaxCamSegment);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MaxCamSegment*)
   {
      return GenerateInitInstanceLocal((::MaxCamSegment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MaxCamSegment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MaxCamSegment::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MaxCamSegment::Class_Name()
{
   return "MaxCamSegment";
}

//______________________________________________________________________________
const char *MaxCamSegment::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MaxCamSegment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MaxCamSegment::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MaxCamSegment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MaxCamSegment::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MaxCamSegment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MaxCamSegment::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MaxCamSegment*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MaxCamSegment::Streamer(TBuffer &R__b)
{
   // Stream an object of class MaxCamSegment.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> _energy;
      R__b >> _energyErr;
      R__b >> _npixels;
      R__b >> _nsegments;
      R__b >> _correlation;
      R__b >> _length;
      R__b >> _lengthErr;
      R__b >> _width;
      R__b >> _widthErr;
      R__b >> _amplitude;
      R__b >> _amplitudeErr;
      R__b >> _bgLevel;
      R__b >> _bgLevelErr;
      R__b >> _mean;
      R__b >> _meanErr;
      R__b >> _isDischarge;
      R__b >> _isBorderline;
      R__b >> _skewness;
      R__b >> _Ix;
      R__b >> _Iy;
      R__b >> _cosRecoil;
      R__b.CheckByteCount(R__s, R__c, MaxCamSegment::IsA());
   } else {
      R__c = R__b.WriteVersion(MaxCamSegment::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << _energy;
      R__b << _energyErr;
      R__b << _npixels;
      R__b << _nsegments;
      R__b << _correlation;
      R__b << _length;
      R__b << _lengthErr;
      R__b << _width;
      R__b << _widthErr;
      R__b << _amplitude;
      R__b << _amplitudeErr;
      R__b << _bgLevel;
      R__b << _bgLevelErr;
      R__b << _mean;
      R__b << _meanErr;
      R__b << _isDischarge;
      R__b << _isBorderline;
      R__b << _skewness;
      R__b << _Ix;
      R__b << _Iy;
      R__b << _cosRecoil;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void MaxCamSegment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MaxCamSegment.
      TClass *R__cl = ::MaxCamSegment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energy", &_energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_energyErr", &_energyErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_npixels", &_npixels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nsegments", &_nsegments);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_correlation", &_correlation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_length", &_length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_lengthErr", &_lengthErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_width", &_width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_widthErr", &_widthErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_amplitude", &_amplitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_amplitudeErr", &_amplitudeErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_bgLevel", &_bgLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_bgLevelErr", &_bgLevelErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_mean", &_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_meanErr", &_meanErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isDischarge", &_isDischarge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isBorderline", &_isBorderline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_skewness", &_skewness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Ix", &_Ix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Iy", &_Iy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cosRecoil", &_cosRecoil);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MaxCamSegment(void *p) {
      return  p ? new(p) ::MaxCamSegment : new ::MaxCamSegment;
   }
   static void *newArray_MaxCamSegment(Long_t nElements, void *p) {
      return p ? new(p) ::MaxCamSegment[nElements] : new ::MaxCamSegment[nElements];
   }
   // Wrapper around operator delete
   static void delete_MaxCamSegment(void *p) {
      delete ((::MaxCamSegment*)p);
   }
   static void deleteArray_MaxCamSegment(void *p) {
      delete [] ((::MaxCamSegment*)p);
   }
   static void destruct_MaxCamSegment(void *p) {
      typedef ::MaxCamSegment current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MaxCamSegment(TBuffer &buf, void *obj) {
      ((::MaxCamSegment*)obj)->::MaxCamSegment::Streamer(buf);
   }
} // end of namespace ROOT for class ::MaxCamSegment

/********************************************************
* MaxCamSegmentCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMaxCamSegmentCint();

extern "C" void G__set_cpp_environmentMaxCamSegmentCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MaxCamSegment.hh");
  G__cpp_reset_tagtableMaxCamSegmentCint();
}
#include <new>
extern "C" int G__cpp_dllrevMaxCamSegmentCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MaxCamSegment */
static int G__MaxCamSegmentCint_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamSegment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamSegment[n];
     } else {
       p = new((void*) gvp) MaxCamSegment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamSegment;
     } else {
       p = new((void*) gvp) MaxCamSegment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamSegment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MaxCamSegment(*(MaxCamSegment*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MaxCamSegment(*(MaxCamSegment*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setEnergy((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->EErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setNPixels((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamSegment*) G__getstructoffset())->n());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setNSegments((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamSegment*) G__getstructoffset())->nseg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setCorrelation((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->correlation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setLength((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->L());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->LErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setWidth((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->W());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->WErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setAmplitude((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->A());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->AErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setBackground((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->B());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->BErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setMean((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->Mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->MeanErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MaxCamSegment*) G__getstructoffset())->setDischarge((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamSegment*) G__getstructoffset())->setDischarge();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MaxCamSegment*) G__getstructoffset())->isDischarge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MaxCamSegment*) G__getstructoffset())->setBorderline((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamSegment*) G__getstructoffset())->setBorderline();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MaxCamSegment*) G__getstructoffset())->isBorderline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setSkewness((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->skewness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setIxy((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->Ix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->Iy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->setCosRecoil((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamSegment*) G__getstructoffset())->cosRecoil());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamSegment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamSegment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MaxCamSegment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamSegment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamSegment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamSegment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamSegment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamSegment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamSegmentCint_162_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamSegment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MaxCamSegment G__TMaxCamSegment;
static int G__MaxCamSegmentCint_162_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MaxCamSegment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MaxCamSegment*) (soff+(sizeof(MaxCamSegment)*i)))->~G__TMaxCamSegment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MaxCamSegment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MaxCamSegment*) (soff))->~G__TMaxCamSegment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MaxCamSegmentCint_162_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamSegment* dest = (MaxCamSegment*) G__getstructoffset();
   *dest = *(MaxCamSegment*) libp->para[0].ref;
   const MaxCamSegment& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MaxCamSegment */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMaxCamSegmentCint {
 public:
  G__Sizep2memfuncMaxCamSegmentCint(): p(&G__Sizep2memfuncMaxCamSegmentCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMaxCamSegmentCint::*p)();
};

size_t G__get_sizep2memfuncMaxCamSegmentCint()
{
  G__Sizep2memfuncMaxCamSegmentCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMaxCamSegmentCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment))) {
     MaxCamSegment *G__Lderived;
     G__Lderived=(MaxCamSegment*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment),G__get_linked_tagnum(&G__MaxCamSegmentCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMaxCamSegmentCint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MaxCamSegment */
static void G__setup_memvarMaxCamSegment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment));
   { MaxCamSegment *p; p=(MaxCamSegment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_energyErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_npixels=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_nsegments=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_correlation=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_length=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_lengthErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_width=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_widthErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_amplitude=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_amplitudeErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_bgLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_bgLevelErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_meanErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_isDischarge=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_isBorderline=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_skewness=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Ix=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Iy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_cosRecoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamSegmentCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMaxCamSegmentCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMaxCamSegment(void) {
   /* MaxCamSegment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment));
   G__memfunc_setup("MaxCamSegment",1290,G__MaxCamSegmentCint_162_0_1, 105, G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxCamSegment",1290,G__MaxCamSegmentCint_162_0_2, 105, G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment), -1, 0, 1, 1, 1, 0, "u 'MaxCamSegment' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__MaxCamSegmentCint_162_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - E f - 'Float_t' 0 - EErr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E",69,G__MaxCamSegmentCint_162_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EErr",366,G__MaxCamSegmentCint_162_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPixels",1039,G__MaxCamSegmentCint_162_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n",110,G__MaxCamSegmentCint_162_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSegments",1248,G__MaxCamSegmentCint_162_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nseg",429,G__MaxCamSegmentCint_162_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCorrelation",1486,G__MaxCamSegmentCint_162_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correlation",1186,G__MaxCamSegmentCint_162_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLength",942,G__MaxCamSegmentCint_162_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - E f - 'Float_t' 0 - EErr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("L",76,G__MaxCamSegmentCint_162_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LErr",373,G__MaxCamSegmentCint_162_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWidth",844,G__MaxCamSegmentCint_162_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - w f - 'Float_t' 0 - we", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("W",87,G__MaxCamSegmentCint_162_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WErr",384,G__MaxCamSegmentCint_162_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAmplitude",1265,G__MaxCamSegmentCint_162_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - a f - 'Float_t' 0 - ae", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A",65,G__MaxCamSegmentCint_162_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AErr",362,G__MaxCamSegmentCint_162_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBackground",1356,G__MaxCamSegmentCint_162_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - b f - 'Float_t' 0 - be", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("B",66,G__MaxCamSegmentCint_162_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BErr",363,G__MaxCamSegmentCint_162_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMean",717,G__MaxCamSegmentCint_162_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - m f - 'Float_t' 0 - me", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mean",385,G__MaxCamSegmentCint_162_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MeanErr",682,G__MaxCamSegmentCint_162_0_26, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__MaxCamSegmentCint_162_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDischarge",1238,G__MaxCamSegmentCint_162_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDischarge",1126,G__MaxCamSegmentCint_162_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBorderline",1362,G__MaxCamSegmentCint_162_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBorderline",1250,G__MaxCamSegmentCint_162_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSkewness",1183,G__MaxCamSegmentCint_162_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("skewness",883,G__MaxCamSegmentCint_162_0_33, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__MaxCamSegmentCint_162_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIxy",646,G__MaxCamSegmentCint_162_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - ix f - - 0 - iy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ix",193,G__MaxCamSegmentCint_162_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Iy",194,G__MaxCamSegmentCint_162_0_37, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCosRecoil",1231,G__MaxCamSegmentCint_162_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosRecoil",931,G__MaxCamSegmentCint_162_0_39, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MaxCamSegmentCint_162_0_40, 85, G__get_linked_tagnum(&G__MaxCamSegmentCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MaxCamSegment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MaxCamSegmentCint_162_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamSegment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MaxCamSegmentCint_162_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MaxCamSegment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MaxCamSegmentCint_162_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MaxCamSegment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MaxCamSegmentCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MaxCamSegmentCint_162_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MaxCamSegmentCint_162_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamSegment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MaxCamSegmentCint_162_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MaxCamSegment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MaxCamSegmentCint_162_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamSegment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MaxCamSegmentCint_162_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MaxCamSegment::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MaxCamSegment", 1416, G__MaxCamSegmentCint_162_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MaxCamSegmentCint_162_0_53, (int) ('u'), G__get_linked_tagnum(&G__MaxCamSegmentCintLN_MaxCamSegment), -1, 1, 1, 1, 1, 0, "u 'MaxCamSegment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMaxCamSegmentCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMaxCamSegmentCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMaxCamSegmentCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MaxCamSegmentCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MaxCamSegmentCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MaxCamSegmentCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MaxCamSegmentCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MaxCamSegmentCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamSegmentCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamSegmentCintLN_MaxCamSegment = { "MaxCamSegment" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMaxCamSegmentCint() {
  G__MaxCamSegmentCintLN_TClass.tagnum = -1 ;
  G__MaxCamSegmentCintLN_TBuffer.tagnum = -1 ;
  G__MaxCamSegmentCintLN_TMemberInspector.tagnum = -1 ;
  G__MaxCamSegmentCintLN_TObject.tagnum = -1 ;
  G__MaxCamSegmentCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamSegmentCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamSegmentCintLN_MaxCamSegment.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMaxCamSegmentCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MaxCamSegmentCintLN_MaxCamSegment),sizeof(MaxCamSegment),-1,30464,(char*)NULL,G__setup_memvarMaxCamSegment,G__setup_memfuncMaxCamSegment);
}
extern "C" void G__cpp_setupMaxCamSegmentCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMaxCamSegmentCint()");
  G__set_cpp_environmentMaxCamSegmentCint();
  G__cpp_setup_tagtableMaxCamSegmentCint();

  G__cpp_setup_inheritanceMaxCamSegmentCint();

  G__cpp_setup_typetableMaxCamSegmentCint();

  G__cpp_setup_memvarMaxCamSegmentCint();

  G__cpp_setup_memfuncMaxCamSegmentCint();
  G__cpp_setup_globalMaxCamSegmentCint();
  G__cpp_setup_funcMaxCamSegmentCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMaxCamSegmentCint();
  return;
}
class G__cpp_setup_initMaxCamSegmentCint {
  public:
    G__cpp_setup_initMaxCamSegmentCint() { G__add_setup_func("MaxCamSegmentCint",(G__incsetup)(&G__cpp_setupMaxCamSegmentCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMaxCamSegmentCint() { G__remove_setup_func("MaxCamSegmentCint"); }
};
G__cpp_setup_initMaxCamSegmentCint G__cpp_setup_initializerMaxCamSegmentCint;

