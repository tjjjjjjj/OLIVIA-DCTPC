//
// File generated by rootcint at Tue Aug  2 13:53:30 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MaxCamReadCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MaxCamReadCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MaxCamRead_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MaxCamRead(void *p = 0);
   static void *newArray_MaxCamRead(Long_t size, void *p);
   static void delete_MaxCamRead(void *p);
   static void deleteArray_MaxCamRead(void *p);
   static void destruct_MaxCamRead(void *p);
   static void streamer_MaxCamRead(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MaxCamRead*)
   {
      ::MaxCamRead *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MaxCamRead >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MaxCamRead", ::MaxCamRead::Class_Version(), "./MaxCamRead.hh", 30,
                  typeid(::MaxCamRead), DefineBehavior(ptr, ptr),
                  &::MaxCamRead::Dictionary, isa_proxy, 0,
                  sizeof(::MaxCamRead) );
      instance.SetNew(&new_MaxCamRead);
      instance.SetNewArray(&newArray_MaxCamRead);
      instance.SetDelete(&delete_MaxCamRead);
      instance.SetDeleteArray(&deleteArray_MaxCamRead);
      instance.SetDestructor(&destruct_MaxCamRead);
      instance.SetStreamerFunc(&streamer_MaxCamRead);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MaxCamRead*)
   {
      return GenerateInitInstanceLocal((::MaxCamRead*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MaxCamRead*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MaxCamRead::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MaxCamRead::Class_Name()
{
   return "MaxCamRead";
}

//______________________________________________________________________________
const char *MaxCamRead::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MaxCamRead*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MaxCamRead::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MaxCamRead*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MaxCamRead::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MaxCamRead*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MaxCamRead::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MaxCamRead*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MaxCamRead::Streamer(TBuffer &R__b)
{
   // Stream an object of class MaxCamRead.

   MaxCamDataset::Streamer(R__b);
}

//______________________________________________________________________________
void MaxCamRead::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MaxCamRead.
      TClass *R__cl = ::MaxCamRead::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireList", (void*)&wireList);
      R__insp.InspectMember("vector<double>", (void*)&wireList, "wireList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireBinList", (void*)&wireBinList);
      R__insp.InspectMember("vector<int>", (void*)&wireBinList, "wireBinList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireIdList", (void*)&wireIdList);
      R__insp.InspectMember("vector<int>", (void*)&wireIdList, "wireIdList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Wire", &Wire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Wires", (void*)&Wires);
      R__insp.InspectMember("MaxCamRead::wireChamberData", (void*)&Wires, "Wires.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nt", &nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireMinROI", &wireMinROI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireMaxROI", &wireMaxROI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_cutSG", &_cutSG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_cutBG", &_cutBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_xaxis", &_xaxis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_yaxis", &_yaxis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_imageth", &_imageth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_biasFrame", &_biasFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_x0", &_x0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_x1", &_x1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_y0", &_y0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_y1", &_y1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hotPixels", (void*)&_hotPixels);
      R__insp.InspectMember("vector<int>", (void*)&_hotPixels, "_hotPixels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_fun", &_fun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_fStopping", &_fStopping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_T0", &_T0);
      R__insp.InspectMember(_T0, "_T0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_recoil", &_recoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_projectile", &_projectile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_xproj", &_xproj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_verbose", &_verbose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ndischarge", &_ndischarge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_segment", &_segment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_outputFile", &_outputFile);
      MaxCamDataset::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MaxCamRead(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MaxCamRead : new ::MaxCamRead;
   }
   static void *newArray_MaxCamRead(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MaxCamRead[nElements] : new ::MaxCamRead[nElements];
   }
   // Wrapper around operator delete
   static void delete_MaxCamRead(void *p) {
      delete ((::MaxCamRead*)p);
   }
   static void deleteArray_MaxCamRead(void *p) {
      delete [] ((::MaxCamRead*)p);
   }
   static void destruct_MaxCamRead(void *p) {
      typedef ::MaxCamRead current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MaxCamRead(TBuffer &buf, void *obj) {
      ((::MaxCamRead*)obj)->::MaxCamRead::Streamer(buf);
   }
} // end of namespace ROOT for class ::MaxCamRead

/********************************************************
* MaxCamReadCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMaxCamReadCint();

extern "C" void G__set_cpp_environmentMaxCamReadCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MaxCamRead.hh");
  G__cpp_reset_tagtableMaxCamReadCint();
}
#include <new>
extern "C" int G__cpp_dllrevMaxCamReadCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MaxCamRead */
static int G__MaxCamReadCint_545_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamRead* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamRead(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) MaxCamRead(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MaxCamRead(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) MaxCamRead(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MaxCamRead[n];
       } else {
         p = new((void*) gvp) MaxCamRead[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MaxCamRead;
       } else {
         p = new((void*) gvp) MaxCamRead;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->getEvent((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((MaxCamRead*) G__getstructoffset())->NEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->setROI((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->makeYieldHisto((TH2F*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->makeYieldHisto((TH2F*) G__int(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->makeYieldHisto((TH2F*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->makeYieldHisto());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamRead*) G__getstructoffset())->convertIntoFits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->readBiasFrame();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->deleteBiasFrame();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->findHotPixels(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MaxCamRead*) G__getstructoffset())->findHotPixels((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MaxCamRead*) G__getstructoffset())->findHotPixels((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamRead*) G__getstructoffset())->findHotPixels((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MaxCamRead*) G__getstructoffset())->findHotPixels();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->deleteHotPixels();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->addHotPixel((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->addRun(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->addWire((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->removeWire((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MaxCamRead*) G__getstructoffset())->findWires((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MaxCamRead*) G__getstructoffset())->findWires((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((MaxCamRead*) G__getstructoffset())->findWires((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MaxCamRead*) G__getstructoffset())->findWires((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->wireYield((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->wireYield((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->wireYield((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->findSegmentLength((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4]))));
      break;
   case 4:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->findSegmentLength((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->mergeWireStrips((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->mergeWireStrips((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->mergeWireStrips((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->getImageTh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->fillWireBasic(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamRead*) G__getstructoffset())->getWidthL((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MaxCamRead*) G__getstructoffset())->getWidthR((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->copyShapeToAntishape((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MaxCamRead*) G__getstructoffset())->makeNtuple((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])));
      G__setnull(result7);
      break;
   case 4:
      ((MaxCamRead*) G__getstructoffset())->makeNtuple((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MaxCamRead*) G__getstructoffset())->makeNtuple((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->accumulatePressure((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->accumulatePressure((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->accumulatePressure((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->accumulatePressure((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->accumulatePressure((float) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MaxCamRead*) G__getstructoffset())->setRectangularCut((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), *((TString*) G__int(libp->para[5])));
      G__setnull(result7);
      break;
   case 5:
      ((MaxCamRead*) G__getstructoffset())->setRectangularCut((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MaxCamRead*) G__getstructoffset())->select((TH2F*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((MaxCamRead*) G__getstructoffset())->select((TH2F*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->rotate((TH2F*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->rotate((TH2F*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamRead*) G__getstructoffset())->getRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->setEventInfo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->setFitNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->getProfileFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->getStoppingFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->setVerbose((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamRead*) G__getstructoffset())->getVerbose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->resetDischargeCounter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MaxCamRead*) G__getstructoffset())->getDischargeCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((MaxCamRead*) G__getstructoffset())->isDischargeEvent((float) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MaxCamRead*) G__getstructoffset())->isDischargeEvent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MaxCamRead*) G__getstructoffset())->hasSegments(*(int*) G__Intref(&libp->para[0]), *(int*) G__Intref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MaxCamRead*) G__getstructoffset())->hasTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MaxCamRead*) G__getstructoffset())->segment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->closeOutputFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MaxCamRead*) G__getstructoffset())->isMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MaxCamRead::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamRead::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MaxCamRead::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MaxCamRead::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MaxCamRead*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamRead::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamRead::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MaxCamRead::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MaxCamReadCint_545_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MaxCamRead::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MaxCamReadCint_545_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MaxCamRead* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MaxCamRead(*(MaxCamRead*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MaxCamRead G__TMaxCamRead;
static int G__MaxCamReadCint_545_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MaxCamRead*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MaxCamRead*) (soff+(sizeof(MaxCamRead)*i)))->~G__TMaxCamRead();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MaxCamRead*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MaxCamRead*) (soff))->~G__TMaxCamRead();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MaxCamReadCint_545_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MaxCamRead* dest = (MaxCamRead*) G__getstructoffset();
   *dest = *(MaxCamRead*) libp->para[0].ref;
   const MaxCamRead& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MaxCamRead */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMaxCamReadCint {
 public:
  G__Sizep2memfuncMaxCamReadCint(): p(&G__Sizep2memfuncMaxCamReadCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMaxCamReadCint::*p)();
};

size_t G__get_sizep2memfuncMaxCamReadCint()
{
  G__Sizep2memfuncMaxCamReadCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMaxCamReadCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead))) {
     MaxCamRead *G__Lderived;
     G__Lderived=(MaxCamRead*)0x1000;
     {
       MaxCamDataset *G__Lpbase=(MaxCamDataset*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead),G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamDataset),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMaxCamReadCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MaxCamRead */
static void G__setup_memvarMaxCamRead(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead));
   { MaxCamRead *p; p=(MaxCamRead*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->wireList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"wireList=",0,"list of wires (coordinates)");
   G__memvar_setup((void*)((long)(&p->wireBinList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"wireBinList=",0,"list of wires (bins)");
   G__memvar_setup((void*)((long)(&p->wireIdList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"wireIdList=",0,"list of wires to be merged; ");
   G__memvar_setup((void*)((long)(&p->Wire)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamReadcLcLwireData),-1,-1,1,"Wire=",0,"extracted information for wire");
   G__memvar_setup((void*)((long)(&p->Wires)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamReadcLcLwireChamberData),-1,-1,1,"Wires=",0,"extracted information for wire chamber");
   G__memvar_setup((void*)((long)(&p->nt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TTree),-1,-1,1,"nt=",0,"ntuple with fit information");
   G__memvar_setup((void*)((long)(&p->wireMinROI)-(long)(p)),105,0,0,-1,-1,-1,1,"wireMinROI=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wireMaxROI)-(long)(p)),105,0,0,-1,-1,-1,1,"wireMaxROI=",0,(char*)NULL);
   G__memvar_setup((void*)(&MaxCamRead::srim),85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamMC),-1,-2,1,"srim=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TCutG),-1,-1,4,"_cutSG=",0,"rectangular cut in image for sg");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TCutG),-1,-1,4,"_cutBG=",0,"rectangular cut for bg");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TVector2),-1,-1,4,"_xaxis=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TVector2),-1,-1,4,"_yaxis=",0,"axes of cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TH2F),-1,-1,4,"_imageth=",0,"analysis image.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TH2F),-1,-1,4,"_biasFrame=",0,"bias frame.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_x0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_x1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_y0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_y1=",0,"ROI");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"_hotPixels=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TF1),-1,-1,4,"_fun=",0,"Profile perpendicular to wire: a gaussian + flat bg");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TF1),-1,-1,4,"_fStopping=",0,"Profile along wire: dEdx from SRIM + flat background");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TDatime),-1,-1,4,"_T0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TLorentzVector),-1,-1,4,"_recoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TLorentzVector),-1,-1,4,"_projectile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TH1D),-1,-1,4,"_xproj=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_verbose=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ndischarge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamSegment),-1,-1,4,"_segment=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TFile),-1,-1,4,"_outputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MaxCamReadCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMaxCamReadCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMaxCamRead(void) {
   /* MaxCamRead */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead));
   G__memfunc_setup("MaxCamRead",947,G__MaxCamReadCint_545_0_1, 105, G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"test.root\"' filePath u 'TString' - 0 '\"\"' outfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__MaxCamReadCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getEvent",834,G__MaxCamReadCint_545_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NEvents",707,G__MaxCamReadCint_545_0_4, 108, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setROI",566,G__MaxCamReadCint_545_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - x0 i - - 0 - x1 "
"i - - 0 - y0 i - - 0 - y1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeYieldHisto",1436,G__MaxCamReadCint_545_0_6, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TH1F), -1, 0, 3, 1, 1, 0, 
"U 'TH2F' - 0 '0' img f - - 0 '-1' min "
"f - - 0 '-1' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertIntoFits",1585,G__MaxCamReadCint_545_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readBiasFrame",1286,G__MaxCamReadCint_545_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteBiasFrame",1501,G__MaxCamReadCint_545_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findHotPixels",1345,G__MaxCamReadCint_545_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - hotFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findHotPixels",1345,G__MaxCamReadCint_545_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 '100' nevents f - - 0 '3' th "
"f - - 0 '0.05' rate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteHotPixels",1555,G__MaxCamReadCint_545_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHotPixel",1110,G__MaxCamReadCint_545_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - binx i - - 0 - biny", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addRun",606,G__MaxCamReadCint_545_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addWire",704,G__MaxCamReadCint_545_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - xwire", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeWire",1061,G__MaxCamReadCint_545_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iwire", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findWires",939,G__MaxCamReadCint_545_0_17, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - - 0 - sigma f - - 0 - threshold "
"i - - 0 '-1' nev u 'TString' - 0 '\"x\"' opt "
"f - - 0 '-1' maxAvgSum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("wireYield",942,G__MaxCamReadCint_545_0_18, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TH1D), -1, 0, 4, 1, 1, 0, 
"i - - 0 - iwire i - - 0 - dwire "
"i - - 0 '0' type u 'TString' - 0 '\"x\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findSegmentLength",1750,G__MaxCamReadCint_545_0_19, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TH1F), -1, 0, 5, 1, 1, 0, 
"i - - 0 - iwire i - - 0 - dwire "
"f - - 0 - threshold i - - 0 - pixelsBelowThreshold "
"u 'TString' - 0 '\"x\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mergeWireStrips",1580,G__MaxCamReadCint_545_0_20, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TH1F), -1, 0, 4, 1, 1, 0, 
"i - - 0 - dwire0 i - - 0 - dwire1 "
"u 'TString' - 0 '\"x\"' opt u 'TString' - 0 '\"project\"' hname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getImageTh",991,G__MaxCamReadCint_545_0_21, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillWireBasic",1312,G__MaxCamReadCint_545_0_22, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - - 0 - id f - - 0 - y "
"f - - 0 - yerr f - - 0 - ampl "
"f - - 0 - mean f - - 0 - width "
"f - - 0 - chi2 f - - 0 - widthL", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWidthL",908,G__MaxCamReadCint_545_0_23, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWidthR",914,G__MaxCamReadCint_545_0_24, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyShapeToAntishape",2060,G__MaxCamReadCint_545_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeNtuple",1046,G__MaxCamReadCint_545_0_26, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - minwire i - - 0 - maxwire "
"i - - 0 - width i - - 0 '0' type "
"u 'TString' - 0 '\"x\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("accumulatePressure",1917,G__MaxCamReadCint_545_0_27, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TH2F), -1, 0, 5, 1, 1, 0, 
"f - - 0 - pressure f - - 0 '-1e10' avgmin "
"f - - 0 '1e10' avgmax i - - 0 '-1' fst "
"i - - 0 '-1' nev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRectangularCut",1776,G__MaxCamReadCint_545_0_28, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - - 0 - x0 f - - 0 - y0 "
"f - - 0 - x1 f - - 0 - y1 "
"f - - 0 - d u 'TString' - 0 '\"sg\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__MaxCamReadCint_545_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2F' - 0 - image u 'TString' - 0 '\"sg\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotate",655,G__MaxCamReadCint_545_0_30, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TH2F), -1, 0, 2, 1, 1, 0, 
"U 'TH2F' - 0 - image i - - 0 '20' nrot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunNumber",1246,G__MaxCamReadCint_545_0_31, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventInfo",1242,G__MaxCamReadCint_545_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFitNumber",1240,G__MaxCamReadCint_545_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ifit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getProfileFunction",1879,G__MaxCamReadCint_545_0_34, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStoppingFunction",2010,G__MaxCamReadCint_545_0_35, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbose",1058,G__MaxCamReadCint_545_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVerbose",1046,G__MaxCamReadCint_545_0_37, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetDischargeCounter",2189,G__MaxCamReadCint_545_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDischargeCounter",1962,G__MaxCamReadCint_545_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDischargeEvent",1640,G__MaxCamReadCint_545_0_40, 103, -1, -1, 0, 1, 1, 1, 0, "f - - 0 '20' threshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasSegments",1154,G__MaxCamReadCint_545_0_41, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 1 - imax i - - 1 - jmax "
"f - - 1 - threshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasTracks",932,G__MaxCamReadCint_545_0_42, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("segment",755,G__MaxCamReadCint_545_0_43, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamSegment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeOutputFile",1575,G__MaxCamReadCint_545_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMC",364,G__MaxCamReadCint_545_0_45, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createWireBinList",1728,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MaxCamReadCint_545_0_47, 85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MaxCamRead::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MaxCamReadCint_545_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamRead::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MaxCamReadCint_545_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MaxCamRead::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MaxCamReadCint_545_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MaxCamRead::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MaxCamReadCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MaxCamReadCint_545_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MaxCamReadCint_545_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamRead::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MaxCamReadCint_545_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MaxCamRead::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MaxCamReadCint_545_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MaxCamRead::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MaxCamReadCint_545_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MaxCamRead::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MaxCamRead", 947, G__MaxCamReadCint_545_0_59, (int) ('i'), G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead), -1, 0, 1, 1, 1, 0, "u 'MaxCamRead' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MaxCamRead", 1073, G__MaxCamReadCint_545_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MaxCamReadCint_545_0_61, (int) ('u'), G__get_linked_tagnum(&G__MaxCamReadCintLN_MaxCamRead), -1, 1, 1, 1, 1, 0, "u 'MaxCamRead' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMaxCamReadCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMaxCamReadCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMaxCamReadCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MaxCamReadCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_MaxCamDataset = { "MaxCamDataset" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_MaxCamMC = { "MaxCamMC" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_MaxCamSegment = { "MaxCamSegment" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_MaxCamRead = { "MaxCamRead" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_MaxCamReadcLcLwireData = { "MaxCamRead::wireData" , 115 , -1 };
G__linked_taginfo G__MaxCamReadCintLN_MaxCamReadcLcLwireChamberData = { "MaxCamRead::wireChamberData" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMaxCamReadCint() {
  G__MaxCamReadCintLN_TClass.tagnum = -1 ;
  G__MaxCamReadCintLN_TBuffer.tagnum = -1 ;
  G__MaxCamReadCintLN_TMemberInspector.tagnum = -1 ;
  G__MaxCamReadCintLN_TString.tagnum = -1 ;
  G__MaxCamReadCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__MaxCamReadCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MaxCamReadCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamReadCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MaxCamReadCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamReadCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MaxCamReadCintLN_TDatime.tagnum = -1 ;
  G__MaxCamReadCintLN_TFile.tagnum = -1 ;
  G__MaxCamReadCintLN_TTree.tagnum = -1 ;
  G__MaxCamReadCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MaxCamReadCintLN_TH2F.tagnum = -1 ;
  G__MaxCamReadCintLN_MaxCamDataset.tagnum = -1 ;
  G__MaxCamReadCintLN_MaxCamMC.tagnum = -1 ;
  G__MaxCamReadCintLN_MaxCamSegment.tagnum = -1 ;
  G__MaxCamReadCintLN_TH1F.tagnum = -1 ;
  G__MaxCamReadCintLN_TH1D.tagnum = -1 ;
  G__MaxCamReadCintLN_TF1.tagnum = -1 ;
  G__MaxCamReadCintLN_TCutG.tagnum = -1 ;
  G__MaxCamReadCintLN_TVector2.tagnum = -1 ;
  G__MaxCamReadCintLN_TLorentzVector.tagnum = -1 ;
  G__MaxCamReadCintLN_MaxCamRead.tagnum = -1 ;
  G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MaxCamReadCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MaxCamReadCintLN_MaxCamReadcLcLwireData.tagnum = -1 ;
  G__MaxCamReadCintLN_MaxCamReadcLcLwireChamberData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMaxCamReadCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TString);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TDatime);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TTree);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_MaxCamDataset);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_MaxCamMC);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_MaxCamSegment);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TF1);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TCutG);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TVector2);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_MaxCamRead),sizeof(MaxCamRead),-1,1280,(char*)NULL,G__setup_memvarMaxCamRead,G__setup_memfuncMaxCamRead);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_MaxCamReadcLcLwireData);
   G__get_linked_tagnum_fwd(&G__MaxCamReadCintLN_MaxCamReadcLcLwireChamberData);
}
extern "C" void G__cpp_setupMaxCamReadCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMaxCamReadCint()");
  G__set_cpp_environmentMaxCamReadCint();
  G__cpp_setup_tagtableMaxCamReadCint();

  G__cpp_setup_inheritanceMaxCamReadCint();

  G__cpp_setup_typetableMaxCamReadCint();

  G__cpp_setup_memvarMaxCamReadCint();

  G__cpp_setup_memfuncMaxCamReadCint();
  G__cpp_setup_globalMaxCamReadCint();
  G__cpp_setup_funcMaxCamReadCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMaxCamReadCint();
  return;
}
class G__cpp_setup_initMaxCamReadCint {
  public:
    G__cpp_setup_initMaxCamReadCint() { G__add_setup_func("MaxCamReadCint",(G__incsetup)(&G__cpp_setupMaxCamReadCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMaxCamReadCint() { G__remove_setup_func("MaxCamReadCint"); }
};
G__cpp_setup_initMaxCamReadCint G__cpp_setup_initializerMaxCamReadCint;

