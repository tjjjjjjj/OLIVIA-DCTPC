//
// File generated by rootcint at Tue Jul 12 17:20:38 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME DmtpcSkimRunSummaryCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DmtpcSkimRunSummaryCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void DmtpcSkimRunSummary_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DmtpcSkimRunSummary(void *p = 0);
   static void *newArray_DmtpcSkimRunSummary(Long_t size, void *p);
   static void delete_DmtpcSkimRunSummary(void *p);
   static void deleteArray_DmtpcSkimRunSummary(void *p);
   static void destruct_DmtpcSkimRunSummary(void *p);
   static void streamer_DmtpcSkimRunSummary(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DmtpcSkimRunSummary*)
   {
      ::DmtpcSkimRunSummary *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DmtpcSkimRunSummary >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DmtpcSkimRunSummary", ::DmtpcSkimRunSummary::Class_Version(), "./DmtpcSkimRunSummary.hh", 18,
                  typeid(::DmtpcSkimRunSummary), DefineBehavior(ptr, ptr),
                  &::DmtpcSkimRunSummary::Dictionary, isa_proxy, 0,
                  sizeof(::DmtpcSkimRunSummary) );
      instance.SetNew(&new_DmtpcSkimRunSummary);
      instance.SetNewArray(&newArray_DmtpcSkimRunSummary);
      instance.SetDelete(&delete_DmtpcSkimRunSummary);
      instance.SetDeleteArray(&deleteArray_DmtpcSkimRunSummary);
      instance.SetDestructor(&destruct_DmtpcSkimRunSummary);
      instance.SetStreamerFunc(&streamer_DmtpcSkimRunSummary);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DmtpcSkimRunSummary*)
   {
      return GenerateInitInstanceLocal((::DmtpcSkimRunSummary*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DmtpcSkimRunSummary*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *DmtpcSkimRunSummary::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DmtpcSkimRunSummary::Class_Name()
{
   return "DmtpcSkimRunSummary";
}

//______________________________________________________________________________
const char *DmtpcSkimRunSummary::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DmtpcSkimRunSummary*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DmtpcSkimRunSummary::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DmtpcSkimRunSummary*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DmtpcSkimRunSummary::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DmtpcSkimRunSummary*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DmtpcSkimRunSummary::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DmtpcSkimRunSummary*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void DmtpcSkimRunSummary::Streamer(TBuffer &R__b)
{
   // Stream an object of class DmtpcSkimRunSummary.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> nevents;
      R__b >> ncam;
      key.Streamer(R__b);
      outdir.Streamer(R__b);
      outname.Streamer(R__b);
      {
         vector<double> &R__stl =  imageRMS;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  imageMean;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  maxPixel;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  totalSparks;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  totalBurnin;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  totalTracks;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  ntracks;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  nburnin;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  nkilled;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  aveMean;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  aveRMS;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  aveMaxPixel;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, DmtpcSkimRunSummary::IsA());
   } else {
      R__c = R__b.WriteVersion(DmtpcSkimRunSummary::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << nevents;
      R__b << ncam;
      key.Streamer(R__b);
      outdir.Streamer(R__b);
      outname.Streamer(R__b);
      {
         vector<double> &R__stl =  imageRMS;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  imageMean;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  maxPixel;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  totalSparks;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  totalBurnin;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  totalTracks;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  ntracks;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  nburnin;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  nkilled;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  aveMean;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  aveRMS;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  aveMaxPixel;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void DmtpcSkimRunSummary::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DmtpcSkimRunSummary.
      TClass *R__cl = ::DmtpcSkimRunSummary::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outfile", &outfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevents", &nevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncam", &ncam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "key", &key);
      R__insp.InspectMember(key, "key.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outdir", &outdir);
      R__insp.InspectMember(outdir, "outdir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outname", &outname);
      R__insp.InspectMember(outname, "outname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "imageRMS", (void*)&imageRMS);
      R__insp.InspectMember("vector<double>", (void*)&imageRMS, "imageRMS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "imageMean", (void*)&imageMean);
      R__insp.InspectMember("vector<double>", (void*)&imageMean, "imageMean.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxPixel", (void*)&maxPixel);
      R__insp.InspectMember("vector<double>", (void*)&maxPixel, "maxPixel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalSparks", (void*)&totalSparks);
      R__insp.InspectMember("vector<int>", (void*)&totalSparks, "totalSparks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalBurnin", (void*)&totalBurnin);
      R__insp.InspectMember("vector<int>", (void*)&totalBurnin, "totalBurnin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalTracks", (void*)&totalTracks);
      R__insp.InspectMember("vector<int>", (void*)&totalTracks, "totalTracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntracks", (void*)&ntracks);
      R__insp.InspectMember("vector<int>", (void*)&ntracks, "ntracks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nburnin", (void*)&nburnin);
      R__insp.InspectMember("vector<int>", (void*)&nburnin, "nburnin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nkilled", (void*)&nkilled);
      R__insp.InspectMember("vector<int>", (void*)&nkilled, "nkilled.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aveMean", (void*)&aveMean);
      R__insp.InspectMember("vector<double>", (void*)&aveMean, "aveMean.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aveRMS", (void*)&aveRMS);
      R__insp.InspectMember("vector<double>", (void*)&aveRMS, "aveRMS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aveMaxPixel", (void*)&aveMaxPixel);
      R__insp.InspectMember("vector<double>", (void*)&aveMaxPixel, "aveMaxPixel.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DmtpcSkimRunSummary(void *p) {
      return  p ? new(p) ::DmtpcSkimRunSummary : new ::DmtpcSkimRunSummary;
   }
   static void *newArray_DmtpcSkimRunSummary(Long_t nElements, void *p) {
      return p ? new(p) ::DmtpcSkimRunSummary[nElements] : new ::DmtpcSkimRunSummary[nElements];
   }
   // Wrapper around operator delete
   static void delete_DmtpcSkimRunSummary(void *p) {
      delete ((::DmtpcSkimRunSummary*)p);
   }
   static void deleteArray_DmtpcSkimRunSummary(void *p) {
      delete [] ((::DmtpcSkimRunSummary*)p);
   }
   static void destruct_DmtpcSkimRunSummary(void *p) {
      typedef ::DmtpcSkimRunSummary current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_DmtpcSkimRunSummary(TBuffer &buf, void *obj) {
      ((::DmtpcSkimRunSummary*)obj)->::DmtpcSkimRunSummary::Streamer(buf);
   }
} // end of namespace ROOT for class ::DmtpcSkimRunSummary

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* DmtpcSkimRunSummaryCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDmtpcSkimRunSummaryCint();

extern "C" void G__set_cpp_environmentDmtpcSkimRunSummaryCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("DmtpcSkimRunSummary.hh");
  G__cpp_reset_tagtableDmtpcSkimRunSummaryCint();
}
#include <new>
extern "C" int G__cpp_dllrevDmtpcSkimRunSummaryCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* DmtpcSkimRunSummary */
static int G__DmtpcSkimRunSummaryCint_395_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DmtpcSkimRunSummary* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DmtpcSkimRunSummary[n];
     } else {
       p = new((void*) gvp) DmtpcSkimRunSummary[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DmtpcSkimRunSummary;
     } else {
       p = new((void*) gvp) DmtpcSkimRunSummary;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DmtpcSkimRunSummary* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DmtpcSkimRunSummary((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) DmtpcSkimRunSummary((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->setNEvents((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->setOutDir(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((DmtpcSkimRunSummary*) G__getstructoffset())->getOutDir();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->setOutName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((DmtpcSkimRunSummary*) G__getstructoffset())->getOutName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->setImageKey(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->openFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->openFile(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->closeFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->setStyle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->setImageRMS((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->setImageMean((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->setNTracks((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->setNburnin((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->setMaxPixel((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->fillSpark((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->fillBurnin((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->createImages((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->outputCamera((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->beginFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->endFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->outputAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->makeTeXFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->makeTeXFile(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->pdfLatex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->tar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((DmtpcSkimRunSummary*) G__getstructoffset())->cleanup((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((DmtpcSkimRunSummary*) G__getstructoffset())->cleanup((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((DmtpcSkimRunSummary*) G__getstructoffset())->cleanup((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((DmtpcSkimRunSummary*) G__getstructoffset())->cleanup();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->runAll((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->runAll((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->runAll((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((DmtpcSkimRunSummary*) G__getstructoffset())->runAll());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DmtpcSkimRunSummary::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DmtpcSkimRunSummary::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DmtpcSkimRunSummary::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DmtpcSkimRunSummary::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DmtpcSkimRunSummary*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DmtpcSkimRunSummary::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DmtpcSkimRunSummary::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DmtpcSkimRunSummary::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcSkimRunSummaryCint_395_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DmtpcSkimRunSummary::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcSkimRunSummaryCint_395_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DmtpcSkimRunSummary* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DmtpcSkimRunSummary(*(DmtpcSkimRunSummary*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DmtpcSkimRunSummary G__TDmtpcSkimRunSummary;
static int G__DmtpcSkimRunSummaryCint_395_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DmtpcSkimRunSummary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DmtpcSkimRunSummary*) (soff+(sizeof(DmtpcSkimRunSummary)*i)))->~G__TDmtpcSkimRunSummary();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DmtpcSkimRunSummary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DmtpcSkimRunSummary*) (soff))->~G__TDmtpcSkimRunSummary();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcSkimRunSummaryCint_395_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DmtpcSkimRunSummary* dest = (DmtpcSkimRunSummary*) G__getstructoffset();
   *dest = *(DmtpcSkimRunSummary*) libp->para[0].ref;
   const DmtpcSkimRunSummary& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* DmtpcSkimRunSummary */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDmtpcSkimRunSummaryCint {
 public:
  G__Sizep2memfuncDmtpcSkimRunSummaryCint(): p(&G__Sizep2memfuncDmtpcSkimRunSummaryCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDmtpcSkimRunSummaryCint::*p)();
};

size_t G__get_sizep2memfuncDmtpcSkimRunSummaryCint()
{
  G__Sizep2memfuncDmtpcSkimRunSummaryCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDmtpcSkimRunSummaryCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary))) {
     DmtpcSkimRunSummary *G__Lderived;
     G__Lderived=(DmtpcSkimRunSummary*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary),G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDmtpcSkimRunSummaryCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* DmtpcSkimRunSummary */
static void G__setup_memvarDmtpcSkimRunSummary(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary));
   { DmtpcSkimRunSummary *p; p=(DmtpcSkimRunSummary*)0x1000; if (p) { }
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"outfile=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ncam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TString),-1,-1,4,"key=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TString),-1,-1,4,"outdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TString),-1,-1,4,"outname=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"imageRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"imageMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"maxPixel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"totalSparks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"totalBurnin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"totalTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"ntracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"nburnin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"nkilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"aveMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"aveRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"aveMaxPixel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDmtpcSkimRunSummaryCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDmtpcSkimRunSummary(void) {
   /* DmtpcSkimRunSummary */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary));
   G__memfunc_setup("DmtpcSkimRunSummary",1967,G__DmtpcSkimRunSummaryCint_395_0_1, 105, G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DmtpcSkimRunSummary",1967,G__DmtpcSkimRunSummaryCint_395_0_2, 105, G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary), -1, 0, 2, 1, 1, 0, 
"i - - 0 - cam i - - 0 - nev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setNEvents",1039,G__DmtpcSkimRunSummaryCint_395_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ncamera i - - 0 - nev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutDir",931,G__DmtpcSkimRunSummaryCint_395_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutDir",919,G__DmtpcSkimRunSummaryCint_395_0_6, 117, G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutName",1029,G__DmtpcSkimRunSummaryCint_395_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutName",1017,G__DmtpcSkimRunSummaryCint_395_0_8, 117, G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setImageKey",1112,G__DmtpcSkimRunSummaryCint_395_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openFile",818,G__DmtpcSkimRunSummaryCint_395_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openFile",818,G__DmtpcSkimRunSummaryCint_395_0_11, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - dir u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeFile",918,G__DmtpcSkimRunSummaryCint_395_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStyle",861,G__DmtpcSkimRunSummaryCint_395_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setImageRMS",1057,G__DmtpcSkimRunSummaryCint_395_0_14, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - cam i - - 0 - n "
"d - - 0 - rms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setImageMean",1200,G__DmtpcSkimRunSummaryCint_395_0_15, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - cam i - - 0 - n "
"d - - 0 - mean", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTracks",1026,G__DmtpcSkimRunSummaryCint_395_0_16, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - cam i - - 0 - n "
"i - - 0 - nt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNburnin",1064,G__DmtpcSkimRunSummaryCint_395_0_17, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - cam i - - 0 - n "
"i - - 0 - nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxPixel",1140,G__DmtpcSkimRunSummaryCint_395_0_18, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - cam i - - 0 - n "
"d - - 0 - mp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillSpark",936,G__DmtpcSkimRunSummaryCint_395_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - cam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillBurnin",1045,G__DmtpcSkimRunSummaryCint_395_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - cam i - - 0 - rbi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createImages",1226,G__DmtpcSkimRunSummaryCint_395_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - cam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outputCamera",1274,G__DmtpcSkimRunSummaryCint_395_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - cam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("beginFile",901,G__DmtpcSkimRunSummaryCint_395_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endFile",695,G__DmtpcSkimRunSummaryCint_395_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outputAll",970,G__DmtpcSkimRunSummaryCint_395_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeTeXFile",1071,G__DmtpcSkimRunSummaryCint_395_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeTeXFile",1071,G__DmtpcSkimRunSummaryCint_395_0_27, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - dir u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdfLatex",824,G__DmtpcSkimRunSummaryCint_395_0_28, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tar",327,G__DmtpcSkimRunSummaryCint_395_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cleanup",744,G__DmtpcSkimRunSummaryCint_395_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 'false' deletePics g - - 0 'false' deleteTeX "
"g - - 0 'false' deletePDF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runAll",622,G__DmtpcSkimRunSummaryCint_395_0_31, 105, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 'false' deletePics g - - 0 'false' deleteTeX "
"g - - 0 'false' deletePDF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcSkimRunSummaryCint_395_0_32, 85, G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DmtpcSkimRunSummary::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcSkimRunSummaryCint_395_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DmtpcSkimRunSummary::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcSkimRunSummaryCint_395_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DmtpcSkimRunSummary::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcSkimRunSummaryCint_395_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DmtpcSkimRunSummary::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcSkimRunSummaryCint_395_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcSkimRunSummaryCint_395_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DmtpcSkimRunSummary::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcSkimRunSummaryCint_395_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DmtpcSkimRunSummary::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcSkimRunSummaryCint_395_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DmtpcSkimRunSummary::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcSkimRunSummaryCint_395_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DmtpcSkimRunSummary::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DmtpcSkimRunSummary", 1967, G__DmtpcSkimRunSummaryCint_395_0_44, (int) ('i'), G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary), -1, 0, 1, 1, 1, 0, "u 'DmtpcSkimRunSummary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DmtpcSkimRunSummary", 2093, G__DmtpcSkimRunSummaryCint_395_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcSkimRunSummaryCint_395_0_46, (int) ('u'), G__get_linked_tagnum(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary), -1, 1, 1, 1, 1, 0, "u 'DmtpcSkimRunSummary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDmtpcSkimRunSummaryCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDmtpcSkimRunSummaryCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDmtpcSkimRunSummaryCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary = { "DmtpcSkimRunSummary" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDmtpcSkimRunSummaryCint() {
  G__DmtpcSkimRunSummaryCintLN_TClass.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TBuffer.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMemberInspector.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TObject.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TString.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDmtpcSkimRunSummaryCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TString);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_DmtpcSkimRunSummary),sizeof(DmtpcSkimRunSummary),-1,62720,(char*)NULL,G__setup_memvarDmtpcSkimRunSummary,G__setup_memfuncDmtpcSkimRunSummary);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcSkimRunSummaryCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDmtpcSkimRunSummaryCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDmtpcSkimRunSummaryCint()");
  G__set_cpp_environmentDmtpcSkimRunSummaryCint();
  G__cpp_setup_tagtableDmtpcSkimRunSummaryCint();

  G__cpp_setup_inheritanceDmtpcSkimRunSummaryCint();

  G__cpp_setup_typetableDmtpcSkimRunSummaryCint();

  G__cpp_setup_memvarDmtpcSkimRunSummaryCint();

  G__cpp_setup_memfuncDmtpcSkimRunSummaryCint();
  G__cpp_setup_globalDmtpcSkimRunSummaryCint();
  G__cpp_setup_funcDmtpcSkimRunSummaryCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDmtpcSkimRunSummaryCint();
  return;
}
class G__cpp_setup_initDmtpcSkimRunSummaryCint {
  public:
    G__cpp_setup_initDmtpcSkimRunSummaryCint() { G__add_setup_func("DmtpcSkimRunSummaryCint",(G__incsetup)(&G__cpp_setupDmtpcSkimRunSummaryCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDmtpcSkimRunSummaryCint() { G__remove_setup_func("DmtpcSkimRunSummaryCint"); }
};
G__cpp_setup_initDmtpcSkimRunSummaryCint G__cpp_setup_initializerDmtpcSkimRunSummaryCint;

