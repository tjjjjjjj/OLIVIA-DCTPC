#ifndef MAXCAM_CHANNEL_CONFIG_HH
#define MAXCAM_CHANNEL_CONFIG_HH

#include "SimpleConfig.hh"

/** MAXCAM_REF_T can be used to select the analog input reference mode
   for an ADC. 

   DIFF corresponds to differential mode (AREF_DIFF in comedi)
   COMMON corresponds to AREF_COMMON in comedi (a.k.a NRSE mode for the NI cards)
   GROUND corresponds to AREF_GROUND in comedi (a.k.a RSE mode for NI cards)
   
   If the wrong mode is used, you will not get the voltages you want. 

   Note that the order here matches the order of the comedi enum.
*/

typedef enum 
{
   GROUND,
   COMMON,
   DIFF

}MAXCAM_REF_T; 


/** MAXCAM_CALIBRATION_METHOD_T can be used to select the calibration modes for 
   analog channels. 

   NONE performs no calibration.
   HARDCAL loads a hardware calibration profile generated by comedi_calibrate
     (for cards with onboard CALDACS). This can either be specified or otherwise
     the default for the card is used. 
   SOFTCAL loads a software calibration profile generated by comedi_soft_calibrate
     (for boards without onboard CALDACS). This can either be specified or otherweise
     the default for the card is ued. 
   OFFSET applies a given read and write offset for each input and output operation (given in VOLTS). 

*/
typedef enum
{
  NONE, 
  HARDCAL,
  SOFTCAL, 
  OFFSET 
}MAXCAM_CALIBRATION_METHOD_T; 

/** MAXCAM_RAMP_ALGORITHM_T can be used to select the ramp algorithm for an analog channel. 
   
   DIRECT sets the output voltage to the requested value and waits until the read channel 
   reads the same value. 

   FOLLOW will vary the output voltage until the desired value is read in. 
*/

typedef enum
{
  DIRECT,
  FOLLOW 
}MAXCAM_RAMP_ALGORITHM_T; 


/** MC_HV_TYPE_T is used to select the type of HV 
   Currently the possible types are 
	COMEDI  for anything using the comedi driver to drive an HV
	CAEN   for N1470 (and possibly other) devices
  MCC3101   For an MCC3101 USB device. Output only. Input is assumed to be COMEDI

  \warning be careful because the units are probably not the same
*/ 
typedef enum 
{
 COMEDI, 
 CAEN,
 MCC3101
}MAXCAM_HV_TYPE_T ;


/** MAXCAM_DIO_DIRECTION_T is used to select the direction for a digital line 
 *  or NONE if the line should be analog. (INPUT and OUTPUT match the comedi enum)
 *
 */
typedef enum
{
 INPUT, 
 OUTPUT,
 NOT_DIGITAL
}MAXCAM_DIO_DIRECTION_T;

/**
 * The MaxCamChannelConfig class stores and parses configuration informatino 
 * for a MaxCamChannel
 */
class MaxCamChannelConfig : public SimpleConfig
{

  public:

    /** Load the channel configuration for the channel named "name". This is typically 
     * found in a file with the same name. If no directory
       is passed or the diretory passed is null, the value of the environmental 
       variable MCCHANNELCFGS is used as the directory containing the configurations

       If a parameter is not specified in the file, the default is used.

       Here is a table of fields and defaults. field names and enum values
       are not case sensitive. Values should not be quotes although they may be
       here for clarity. 

       <pre>

        Field            |  Default      |   Description
        ------------------------------------------------------------------------
        device           | /dev/comedi0  | For analog channels, this is the
                         |               | comedi device to use. 
        ------------------------------------------------------------------------
        serial           | /dev/ttyS4    | For serial channels, this is the 
                         |               | serial device
        ------------------------------------------------------------------------
        ref              | diff          | The analog reference mode. May be
                         |               | "diff" for AREF_DIFF, 
                         |               | "ground" for AREF_GROUND 
                         |               | "common" for AREF_COMMON 
        ------------------------------------------------------------------------
        readChannel      |  -1           | Analog channel to read. -1 for none
        ------------------------------------------------------------------------
        writeChannel     |  -1           | Analog channel to write. -1 for none
        ------------------------------------------------------------------------
        readRange        |  0            | comedi read range
        ------------------------------------------------------------------------
        writeRange       |  0            | comedi/mcc write range
        ------------------------------------------------------------------------
        readSubdev       |  0            | comedi read subdevice
        ------------------------------------------------------------------------
        writeSubdev      |  1            | comedi write subdevice
        ------------------------------------------------------------------------
        calibrationMethod| none          | Calibration method. May be:
                         |               | "none" for no calibration
                         |               | "hardcal" for hardware calibration
                         |               |           (this will tell comedi to
                         |               |           apply the calibration)
                         |               | "softcal" for comedi software 
                         |               |           calibration
                         |               | "offset" for manual offset calibration
        ------------------------------------------------------------------------
        readOffset       |  0            | If using "offset" calibration method
                         |               | this is the read offset to apply
        ------------------------------------------------------------------------
        writeOffset      |  0            | If using "offset" calibration method
                         |               | this is the write offset to apply
        ------------------------------------------------------------------------
        calibrationFile  |               | Use this to specify a calibration file
                         |               | for "softcal" or "hardcal" calibration.
                         |               | Leaving unspecified uses the default 
                         |               | file for the device (specified by 
                         |               | comedi)
        ------------------------------------------------------------------------
        rampAlgorithm    |  direct       | Specifies the ramp algorithm. May be: 
                         |               | "direct": Write out desired value 
                         |               |           and wait until read channel
                         |               |           reads that value.   
                         |               | "follow": Adjust write value until 
                         |               |           read channel reads the
                         |               |           desired value. Uses the
                         |               |           "offset_guesses" table to 
                         |               |           store believed offset. 
        ------------------------------------------------------------------------
        dv               |  0.001        | Amount to step voltage by for "follow" 
        ------------------------------------------------------------------------
        dt               |  200          | Amount to wait between steps for 
                         |               | "follow". In msecs. 
        ------------------------------------------------------------------------
        epsilon          |  0.001        | Tolerance for "follow" read/write 
                         |               | comparison. 
        ------------------------------------------------------------------------
        epsilonZero      |  0.005        | Tolerance for "follow" read/write 
                         |               | comparison when comparing to 0
        ------------------------------------------------------------------------
        invert           | false         | Reverse read polarity. 
        ------------------------------------------------------------------------
        title            | (same as      | Title of channel. By default this is 
                         |  name)        | set to the name. 
        ------------------------------------------------------------------------
        dbaccess         | /etc/         | Location of dbaccess file. 
                         | dbaccess.txt  | 
        ------------------------------------------------------------------------
        hvType           | comedi        | specifies what type of device is used 
                         |               | for reading and writing voltages in 
                         |               | setDAC and readADC
                         |               | May be:
                         |               | comedi:  for a set up with a DAQ 
                         |               |          connected to an analog
                         |               |          high voltage supply. 
                         |               |          The comedi library is used
                         |               |          to talk to the dAQ
                         |               | caen:  to use a CAEN serial over
                         |               |        usb high voltage. The values
                         |               |        are set and read over serial.
                         |               | mcc3101: to use MCC 3101 usb DAC. 
                         |               |        Input uses comedi
        ------------------------------------------------------------------------
        dioDirection     |  not_digital  | specifies the digital IO direction. 
                         |               |  May be: input, output or not_digital
                         |               |  if it is an analog channel. 
        ------------------------------------------------------------------------
        hardLimit        |  1e99         | The maximum output setValue in the physical
                         |               | units of the adc 
        -------------------------------------------------------------------------
        offsetLimit      |  -1           | The maximum offset. Negative for none
        ------------------------------------------------------------------------
        offsetWait       |  3000         | Wait amount before adjusting offset (in ms)
        -------------------------------------------------------------------------
        writeMultiply    |  1            | Multiplication factor for output 
        -------------------------------------------------------------------------
        maxStep          |  -1           | If positive, the largest step used

         
       </pre>


       @param name the channnel / file name to load the documentation for
       @param dir the directory to search in or NULL to use the value of MCCHANNELCFGS
       @return the MaxCamChannelConfig from the file
    */
    static MaxCamChannelConfig * loadConfig(const char * name, const char * dir = NULL); 

    /** Creates a default config with the given name and title
     *
     * The defaults are specified under loadConfig. 
     *
     * @param name the ROOT name of the channel
     * @param title the ROOT title of the channel
     * @see loadConfig()
     * */
    MaxCamChannelConfig(char * name = "", char * title = ""); 

    /* Destructors */
    ~MaxCamChannelConfig(); 

    //Setters   
   
    /** Set the device to use for this channel. This will usually
     * be /dev/comedi0. Serial devices are handled with a separate 
     * field. 
     *
     * The MaxCamChannelConfig object does not make its own copy
     * so try not to delete the memory. 
     * 
     * @param dev the name of the device.
     */
    void setDevice(char * dev) { _dev = dev; } 

    /** Set the reference type for a DAQ
     *
     * @param the reference type
     * @see MAXCAM_REF_T
     */ 
    void setRef(MAXCAM_REF_T aref) { _aref = aref; } 

    /** Set the read channel number
     * @param read channel
     */
    void setReadChannel(unsigned int readChannel) { _readChannel = readChannel; }

    /** Set the write channel number
     * @param write channel
     */
    void setWriteChannel(unsigned int writeChannel) { _writeChannel = writeChannel; }

    /** Set the read range number. See DAQ card documentation.
     * @param read range
     */
    void setReadRange(unsigned int readRange) { _readRange = readRange; } 

    /** Set the write range number. See DAQ card documentation.
     * @param write range
     */
    void setWriteRange(unsigned int writeRange) { _writeRange = writeRange; } 

    /** Set the read subdev number (for comedi)
     * @param read subdev
     */
    void setReadSubdev(unsigned int readSubdev) { _readSubdev = readSubdev; } 

    /** Set the write subdev number (for comedi)
     * @param write subdev
     */
    void setWriteSubdev(unsigned int writeSubdev) { _writeSubdev = writeSubdev; } 

    /** Set the calibration method. 
     * @see MAXCAM_CALIBRATION_METHOD_T
     * @param cal_method
     */
    void setCalibrationMethod(MAXCAM_CALIBRATION_METHOD_T cal_method) {_calMethod = cal_method;}

    /** Set the read offset. Only works for offset calibration method.
     *  @param readOffset the read offset to use
     */
    void setReadOffset(double readOffset) { _readOffset = readOffset; } 

    /** Set the write offset. Only works for offset calibration method.
     *  @param writeOffset the write offset to use
     */
    void setWriteOffset(double writeOffset) { _writeOffset = writeOffset; } 

    /** Set the calibration file (for comedi soft or hard calibration)
     *
     * @param calFile the path of the file or NULL to use comedi's default
     */
    void setCalibrationFile(char * calFile) { _calFile = calFile; } 

    /** Set the ramp algorithm to use
     * @see MAXCAM_RAMP_ALGORITHM_T
     * @param alg the algorithm to use
     */
    void setRampAlgorithm(MAXCAM_RAMP_ALGORITHM_T alg) { _alg = alg; } 

    /** Set dv for the ramp algorithm (which specifies the voltage 
     * step to adjust with
     * 
     * @param dv the voltage step
     */
    void setDV(double dv) { _dv = dv; } 

    /** Set dt for the ramp algorithm (which specifies the time 
     * step to adjust with
     * 
     * @param dt the time step
     */
    void setDT(double dt) { _dt = dt; } 

    /* Sets whether or not the polarity should be inverted
     * @param invert true to invert polarity
     *
     */
    void setInvert(bool invert) { _invert = invert;} 

    /* Set the tolerance for ramp checking
     * @param eps the tolorance 
     * */
    void setEpsilon(double eps) { _eps = eps;}

    /** set the channel name
     * @param the name to use 
     */
    void setName(char * name) {_name = name;}

    /** set the channel title
     * @param the titlex to use 
     */
    void setTitle(char * title) {_title = title;}

    /** Set the serial device 
     * @param string corresponding to the serial device (e.g. /dev/ttyS0
     */
    void setSerial(char * serial) {_serial = serial;}

    /** Set the dbaccess file to use 
     *  @param dbaccess the dbaccess file name (e.g. /etc/dbaccess.txt)
     */
    void setDBAccess(char * dbaccess){ _dbaccess=dbaccess;}

    /** Set the high voltage type 
     * @see MAXCAM_HV_TYPE_T
     * @param type the type to use
     */
    void setHVType(MAXCAM_HV_TYPE_T type) { _hvtype = type; } 


    //Getters
    char * getDevice() { return _dev;} 
    MAXCAM_REF_T getRef() { return _aref;} 
    unsigned int getReadChannel() { return _readChannel;}
    unsigned int getWriteChannel() { return _writeChannel;}
    unsigned int getReadRange() { return _readRange;}
    unsigned int getWriteRange() { return _writeRange;}
    unsigned int getReadSubdev() { return _readSubdev;}
    unsigned int getWriteSubdev() { return _writeSubdev;}
    MAXCAM_CALIBRATION_METHOD_T getCalibrationMethod() { return _calMethod; } 
    double getReadOffset() { return _readOffset;} 
    double getWriteOffset() { return _writeOffset;} 
    char * getCalibrationFile() { return _calFile;}
    MAXCAM_HV_TYPE_T getHVType(){ return _hvtype; }
    MAXCAM_RAMP_ALGORITHM_T getRampAlgorithm() { return _alg; } 
    double getDV() { return _dv; } 
    double getDT() { return _dt; } 
    bool getInvert() { return _invert;}
    double getEpsilon() { return _eps;}
    double getEpsilonZero() { return _eps_zero;}
    char * getName() { return _name;}
    char * getTitle() { return _title;}
    char * getSerial() { return _serial;}
    char * getDBAccess() {return _dbaccess;}
    double getHardLimit() { return _hardLimit;} 
    double getWriteMultiply() { return _multiply;} 
    double getOffsetLimit() { return _offset_limit; } 
    double getOffsetWait() { return _offset_wait; } 
    double getMaxStep() { return _maxstep; }
    MAXCAM_DIO_DIRECTION_T getDigitalDirection() { return _dir;}


  private:
    /** sets the defaults and initializes any data members */
    void init(); 

    char * _dev; ///< The device node to use
    char * _serial; ///< the serial device node to use
    char * _dbaccess; ///< file containing db credentials
    char * _name;///< channel name
    char * _title; ///< channel title 
    
    MAXCAM_REF_T _aref; ///< reference type
    int _readChannel; ///< read channel number 
    int _writeChannel; ///< write channel numberr
    unsigned int _readRange; ///<read range 
    unsigned int _writeRange; ///< write range
    unsigned int _readSubdev; ///< read comedi subdevice 
    unsigned int _writeSubdev; ///< write comedi subdevice
    MAXCAM_HV_TYPE_T _hvtype; ///< high voltage type

    MAXCAM_CALIBRATION_METHOD_T _calMethod; ///< calibration method
    double _readOffset; ///< read offset if calibration method is offset before giving up before giving up
    double _writeOffset; ///< write offset if calibration method is offset
    char * _calFile; ///< calibration file
    double _hardLimit; ///< upper limit

    double _offset_limit; ///< upper limit on how far big the offset can be before giving up
    double _offset_wait; ///< Wait amount before trying to adjust offset amount 
    
    MAXCAM_RAMP_ALGORITHM_T _alg; ///< ramp algorithm
    double _dv; ///< voltage step for follow algorithm
    double _dt; ///< time step for follow algorithm
    double _eps; ///< tolerance for checking ramp value
    double _eps_zero; ///< tolerance for checking ramp value for 0 

    double _multiply; ///<Multiplication factor for writing

    double _maxstep; ///< Maximum ramp step 

    MAXCAM_DIO_DIRECTION_T _dir; ///< digital direction 
    bool _invert; ///< invert polarity
   
};


#endif
